;
; File generated by cc65 v 2.17 - Git c37582b
;
	.fopt		compiler,"cc65 v 2.17 - Git c37582b"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_bg
	.import		_pal_spr
	.import		_pal_col
	.import		_pal_bright
	.import		_ppu_wait_nmi
	.import		_ppu_wait_frame
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_ppu_system
	.import		_oam_size
	.import		_oam_spr
	.import		_oam_meta_spr
	.import		_oam_hide_rest
	.import		_music_play
	.import		_music_stop
	.import		_music_pause
	.import		_sfx_play
	.import		_pad_poll
	.import		_scroll
	.import		_bank_spr
	.import		_bank_bg
	.import		_rand8
	.import		_set_rand
	.import		_set_vram_update
	.import		_vram_adr
	.import		_vram_put
	.import		_vram_fill
	.import		_vram_write
	.import		_vram_unrle
	.import		_delay
	.export		_palts0
	.export		_palts1
	.export		_palts2
	.export		_palss1
	.export		_pal_ending
	.export		_bitmasks
	.export		_jitter_big
	.export		_fanty_incs
	.export		_enems_0_00
	.export		_enems_0_01
	.export		_enems_0_02
	.export		_enems_0_03
	.export		_enems_0_04
	.export		_enems_0_05
	.export		_enems_0_06
	.export		_enems_0_08
	.export		_enems_0_09
	.export		_enems_0
	.export		_scr_0_00
	.export		_scr_0_01
	.export		_scr_0_02
	.export		_scr_0_03
	.export		_scr_0_04
	.export		_scr_0_05
	.export		_scr_0_06
	.export		_scr_0_07
	.export		_scr_0_08
	.export		_scr_0_09
	.export		_map_0
	.export		_map_0_decos_00
	.export		_map_0_decos_01
	.export		_map_0_decos_02
	.export		_map_0_decos_03
	.export		_map_0_decos_04
	.export		_map_0_decos_05
	.export		_map_0_decos_07
	.export		_map_0_decos_08
	.export		_map_0_decos_09
	.export		_map_0_decos
	.export		_enems_1_00
	.export		_enems_1_01
	.export		_enems_1_02
	.export		_enems_1_03
	.export		_enems_1_06
	.export		_enems_1_0a
	.export		_enems_1_0b
	.export		_enems_1_0c
	.export		_enems_1_0d
	.export		_enems_1_0e
	.export		_enems_1_0f
	.export		_enems_1_10
	.export		_enems_1_11
	.export		_enems_1_12
	.export		_enems_1_13
	.export		_enems_1_15
	.export		_enems_1_17
	.export		_enems_1_18
	.export		_enems_1_19
	.export		_enems_1_1a
	.export		_enems_1_1d
	.export		_enems_1
	.export		_scr_1_00
	.export		_scr_1_01
	.export		_scr_1_02
	.export		_scr_1_03
	.export		_scr_1_04
	.export		_scr_1_05
	.export		_scr_1_06
	.export		_scr_1_07
	.export		_scr_1_08
	.export		_scr_1_09
	.export		_scr_1_0a
	.export		_scr_1_0b
	.export		_scr_1_0c
	.export		_scr_1_0d
	.export		_scr_1_0e
	.export		_scr_1_0f
	.export		_scr_1_10
	.export		_scr_1_11
	.export		_scr_1_12
	.export		_scr_1_13
	.export		_scr_1_14
	.export		_scr_1_15
	.export		_scr_1_16
	.export		_scr_1_17
	.export		_scr_1_18
	.export		_scr_1_19
	.export		_scr_1_1a
	.export		_scr_1_1b
	.export		_scr_1_1c
	.export		_scr_1_1d
	.export		_map_1
	.export		_map_1_decos_00
	.export		_map_1_decos_02
	.export		_map_1_decos_03
	.export		_map_1_decos_04
	.export		_map_1_decos_05
	.export		_map_1_decos_06
	.export		_map_1_decos_07
	.export		_map_1_decos_08
	.export		_map_1_decos_09
	.export		_map_1_decos_0a
	.export		_map_1_decos_11
	.export		_map_1_decos_16
	.export		_map_1_decos_17
	.export		_map_1_decos_18
	.export		_map_1_decos_1b
	.export		_map_1_decos_1c
	.export		_map_1_decos
	.export		_enems_2_01
	.export		_enems_2_06
	.export		_enems_2_09
	.export		_enems_2_0b
	.export		_enems_2_0c
	.export		_enems_2_0d
	.export		_enems_2_0e
	.export		_enems_2_0f
	.export		_enems_2_10
	.export		_enems_2_11
	.export		_enems_2_12
	.export		_enems_2_13
	.export		_enems_2_14
	.export		_enems_2_15
	.export		_enems_2_16
	.export		_enems_2_17
	.export		_enems_2_18
	.export		_enems_2_1b
	.export		_enems_2
	.export		_scr_2_01
	.export		_scr_2_06
	.export		_scr_2_09
	.export		_scr_2_0a
	.export		_scr_2_0b
	.export		_scr_2_0c
	.export		_scr_2_0d
	.export		_scr_2_0e
	.export		_scr_2_10
	.export		_scr_2_11
	.export		_scr_2_12
	.export		_scr_2_13
	.export		_scr_2_15
	.export		_scr_2_16
	.export		_scr_2_17
	.export		_scr_2_18
	.export		_scr_2_1a
	.export		_scr_2_1b
	.export		_scr_2_1c
	.export		_map_2
	.export		_map_2_decos_01
	.export		_map_2_decos_06
	.export		_map_2_decos_0a
	.export		_map_2_decos_0b
	.export		_map_2_decos_0d
	.export		_map_2_decos_0e
	.export		_map_2_decos_0f
	.export		_map_2_decos_10
	.export		_map_2_decos_11
	.export		_map_2_decos_12
	.export		_map_2_decos_14
	.export		_map_2_decos_15
	.export		_map_2_decos_16
	.export		_map_2_decos_17
	.export		_map_2_decos_18
	.export		_map_2_decos_1b
	.export		_map_2_decos
	.export		_ts1_pals
	.export		_ts1_tmaps
	.export		_ts0_pals
	.export		_ts0_tmaps
	.export		_ts2_pals
	.export		_ts2_tmaps
	.export		_sspla_00_a
	.export		_sspla_00_b
	.export		_sspla_01_a
	.export		_sspla_01_b
	.export		_sspla_02_a
	.export		_sspla_02_b
	.export		_sspla_03_a
	.export		_sspla_03_b
	.export		_sspla_04_a
	.export		_sspla_04_b
	.export		_sspla_05_a
	.export		_sspla_05_b
	.export		_ssplb_00
	.export		_ssplb_01
	.export		_ssplb_02
	.export		_ssplb_03
	.export		_ssplb_04
	.export		_ssplb_05
	.export		_ssplb_06
	.export		_ssena_00_a
	.export		_ssena_00_b
	.export		_ssena_01_a
	.export		_ssena_01_b
	.export		_ssenb_00
	.export		_ssenb_01
	.export		_ssenb_02
	.export		_ssenb_03
	.export		_ssenc_00
	.export		_ssenc_01
	.export		_ssenc_02
	.export		_ssenc_03
	.export		_ssenc_04
	.export		_ssenc_05
	.export		_ssenc_06
	.export		_ssenc_07
	.export		_ssend_00
	.export		_ssend_01
	.export		_ssend_02
	.export		_ssit_00
	.export		_ssit_01
	.export		_ssit_02
	.export		_ssit_03
	.export		_ssit_04
	.export		_ssit_05
	.export		_ssit_06
	.export		_ssit_07
	.export		_ssit_08
	.export		_ssit_09
	.export		_ssit_0A
	.export		_ssboss_00_a
	.export		_ssboss_00_b
	.export		_ssboss_01_a
	.export		_ssboss_01_b
	.export		_spr_enems_1
	.export		_spr_player_0
	.export		_spr_items
	.export		_sprplempty
	.export		_behs0
	.export		_behs1
	.export		_behs2
	.export		_l_ts_pals
	.export		_l_ts_tmaps
	.export		_l_behs
	.export		_l_scr_ini
	.export		_l_map
	.export		_l_decos
	.export		_l_enems
	.export		_l_pal_bgs
	.export		_l_map_w
	.export		_player_ini_x
	.export		_player_ini_y
	.export		_l_music
	.export		_title_rle
	.export		_ending_rle
	.export		_hud_rle
	.export		_lb_yinc_arc
	.export		_oam_index
	.export		_half_life
	.export		_frame_counter
	.export		_pad0
	.export		_pad
	.export		_pad_this_frame
	.export		_gpit
	.export		_gpjt
	.export		_gpkt
	.export		_bi
	.export		_rda
	.export		_rdb
	.export		_rdc
	.export		_rdd
	.export		_rdi
	.export		_rdx
	.export		_rdy
	.export		_rdt
	.export		_rdct
	.export		_fr_ct
	.export		_rds
	.export		_gpint
	.export		_gpsint
	.export		_delta
	.export		_gp_gen
	.export		_gp_aux
	.export		_gp_map
	.export		_gp_tmap
	.export		_gp_addr
	.export		_spr_enems
	.export		_spr_player
	.export		_c_ts_pals
	.export		_c_ts_tmaps
	.export		_c_behs
	.export		_ul
	.export		_cx1
	.export		_cy1
	.export		_cx2
	.export		_cy2
	.export		_at1
	.export		_at2
	.export		_caux
	.export		__en_t
	.export		__en_x
	.export		__en_y
	.export		__en_x1
	.export		__en_x2
	.export		__en_y1
	.export		__en_y2
	.export		__en_mx
	.export		__en_my
	.export		__en_state
	.export		__en_ct
	.export		_en_hl
	.export		_en_life
	.export		_en_s
	.export		_en_facing
	.export		_en_dying
	.export		_en_washit
	.export		_prx
	.export		_pry
	.export		_px
	.export		_py
	.export		_pvx
	.export		_pvy
	.export		_pj
	.export		_pctj
	.export		_pthrust
	.export		_pjb
	.export		_pjustjumped
	.export		_pfiring
	.export		_phit
	.export		_pflickering
	.export		_pfacing
	.export		_pgotten
	.export		_ppossee
	.export		_pregotten
	.export		_pfixct
	.export		_psprid
	.export		_pvylast
	.export		_pgtmx
	.export		_pgtmy
	.export		_pcharacter
	.export		_safe_prx
	.export		_safe_pry
	.export		_safe_n_pant
	.export		_safe_pinv
	.export		_pwashit
	.export		_pstatespradder
	.export		_hrx
	.export		_hry
	.export		_hrt
	.export		_itcelloffset
	.export		_sstart
	.export		__coco_x
	.export		__coco_y
	.export		_coco_it
	.export		_sc_x
	.export		_sc_y
	.export		_sc_n
	.export		_sc_c
	.export		_next_script
	.export		_script
	.export		_script_result
	.export		_sc_terminado
	.export		_sc_continuar
	.export		_commands_executed
	.export		_fzx1
	.export		_fzy1
	.export		_fzx2
	.export		_fzy2
	.export		_f_zone_ac
	.export		_script_pool
	.export		_ticks
	.export		_halfticks
	.export		_game_time
	.export		_ticker
	.export		_display
	.export		_flash
	.export		_paused
	.export		_update_list
	.export		_fader
	.export		_attr_table
	.export		_first_time
	.export		_max_pant
	.export		_c_map
	.export		_c_decos
	.export		_c_locks
	.export		_c_enems
	.export		_c_hotspots
	.export		_c_pal_bg
	.export		_c_alt_tile
	.export		_map_w
	.export		_max_hotspots_type_1
	.export		_level
	.export		_do_game
	.export		_game_state
	.export		_game_res
	.export		_spacer
	.export		_scr_buff
	.export		_scr_attr
	.export		_n_pant
	.export		_on_pant
	.export		_evil_tile_hit
	.export		_en_t
	.export		_en_x
	.export		_en_y
	.export		_en_x1
	.export		_en_y1
	.export		_en_x2
	.export		_en_y2
	.export		_en_mx
	.export		_en_my
	.export		_en_state
	.export		_en_ct
	.export		_spr_x
	.export		_spr_y
	.export		_spr_id
	.export		_en_fr
	.export		_enoffs
	.export		_genflipflop
	.export		_is_platform
	.export		_encelloffset
	.export		_pkilled
	.export		_plife
	.export		_oplife
	.export		_pobjs
	.export		_opobjs
	.export		_pkeys
	.export		_opkeys
	.export		_pammo
	.export		_opammo
	.export		_pinv
	.export		_guay_ct
	.export		_use_ct
	.export		_no_ct
	.export		_b_x
	.export		_b_y
	.export		_b_mx
	.export		_b_my
	.export		_b_ac
	.export		_b_slots
	.export		_b_slot
	.export		_hact
	.export		_lkact
	.export		_coco_x
	.export		_coco_y
	.export		_coco_vx
	.export		_coco_vy
	.export		_coco_flag
	.export		_flags
	.export		_c_idx
	.export		_c_x
	.export		_c_y
	.export		_c_f
	.export		_containers_get
	.export		_springs_x
	.export		_springs_y
	.export		_springs_idx
	.export		_propellers_add_hi
	.export		_propellers_add_lo
	.export		_propellers_idx
	.export		_pal_cycle
	.export		_player_reset_movement
	.export		_player_register_safe_spot
	.export		_player_restore_safe_spot
	.export		_containers_add
	.export		_containers_draw
	.export		_game_run_fire_script
	.export		_propellers_add
	.export		_springs_add
	.export		_fade_out
	.export		_fade_in
	.export		_cls
	.export		_reset_attributes
	.export		_show_attributes
	.export		_close_update_cycle
	.export		_write_attr
	.export		_update_list_write
	.export		_draw_tile
	.export		_draw_tile_advance
	.export		_update_list_horz_2
	.export		_update_list_tile
	.export		_set_map_tile
	.export		_p_t2
	.export		_advance_worm
	.export		_draw_scr
	.export		_p_s
	.export		_palfx_do
	.export		_palfx_init
	.export		_enter_screen
	.export		_exit_cleanly
	.export		_wait_time_or_input
	.export		_do_screen
	.export		_screen_title
	.export		_screen_game_over
	.export		_screen_game_ending
	.export		_cm_two_points
	.export		_collide
	.export		_springs_do
	.export		_propellers_do
	.export		_eat1
	.export		_eat2
	.export		_eat3
	.export		_eat4
	.export		_eat5
	.export		_eat6
	.export		_eat7
	.export		_eat8
	.export		_eat9
	.export		_eat10
	.export		_eat11
	.export		_eat12
	.export		_eat13
	.export		_eat14
	.export		_eat15
	.export		_eat16
	.export		_eat17
	.export		_eat18
	.export		_eat19
	.export		_eat20
	.export		_eat21
	.export		_eat22
	.export		_eat23
	.export		_eat24
	.export		_eat25
	.export		_eat26
	.export		_eat27
	.export		_eat28
	.export		_eat29
	.export		_eat30
	.export		_eat31
	.export		_extern_action_texts
	.export		_stbf
	.export		_extern_frame
	.export		_do_extern_action
	.export		_script_LEVEL0_pfire_at_0
	.export		_script_LEVEL0_pfire_at_1
	.export		_script_LEVEL0_pfire_at_2
	.export		_script_LEVEL0_entering_3
	.export		_script_LEVEL0_pfire_at_3
	.export		_script_LEVEL0_entering_4
	.export		_script_LEVEL0_pfire_at_4
	.export		_script_LEVEL0_entering_5
	.export		_script_LEVEL0_pfire_at_5
	.export		_script_LEVEL0_pfire_at_7
	.export		_script_LEVEL0_entering_8
	.export		_script_LEVEL0_pfire_at_8
	.export		_script_LEVEL0_pfire_at_9
	.export		_script_LEVEL0_entering_game
	.export		_script_pool_LEVEL0
	.export		_script_LEVEL1_pfire_at_1
	.export		_script_LEVEL1_entering_9
	.export		_script_LEVEL1_pfire_at_10
	.export		_script_LEVEL1_entering_11
	.export		_script_LEVEL1_pfire_at_11
	.export		_script_LEVEL1_pfire_at_15
	.export		_script_LEVEL1_entering_16
	.export		_script_LEVEL1_entering_18
	.export		_script_LEVEL1_pfire_at_18
	.export		_script_LEVEL1_entering_19
	.export		_script_LEVEL1_pfire_at_20
	.export		_script_LEVEL1_entering_21
	.export		_script_LEVEL1_pfire_at_21
	.export		_script_LEVEL1_pfire_at_22
	.export		_script_LEVEL1_entering_23
	.export		_script_LEVEL1_pfire_at_23
	.export		_script_LEVEL1_pfire_at_24
	.export		_script_LEVEL1_entering_26
	.export		_script_LEVEL1_pfire_at_26
	.export		_script_LEVEL1_entering_27
	.export		_script_LEVEL1_pfire_at_27
	.export		_script_LEVEL1_entering_game
	.export		_script_pool_LEVEL1
	.export		_script_LEVEL2_entering_2
	.export		_script_LEVEL2_pfire_at_2
	.export		_script_LEVEL2_entering_3
	.export		_script_LEVEL2_pfire_at_3
	.export		_script_LEVEL2_entering_4
	.export		_script_LEVEL2_pfire_at_4
	.export		_script_LEVEL2_entering_5
	.export		_script_LEVEL2_pfire_at_5
	.export		_script_LEVEL2_pfire_at_6
	.export		_script_LEVEL2_pfire_at_7
	.export		_script_LEVEL2_entering_8
	.export		_script_LEVEL2_pfire_at_8
	.export		_script_LEVEL2_entering_9
	.export		_script_LEVEL2_pfire_at_9
	.export		_script_LEVEL2_entering_10
	.export		_script_LEVEL2_pfire_at_10
	.export		_script_LEVEL2_entering_14
	.export		_script_LEVEL2_pfire_at_14
	.export		_script_LEVEL2_entering_15
	.export		_script_LEVEL2_pfire_at_15
	.export		_script_LEVEL2_entering_16
	.export		_script_LEVEL2_pfire_at_16
	.export		_script_LEVEL2_entering_17
	.export		_script_LEVEL2_pfire_at_17
	.export		_script_LEVEL2_entering_19
	.export		_script_LEVEL2_pfire_at_19
	.export		_script_LEVEL2_entering_22
	.export		_script_LEVEL2_pfire_at_24
	.export		_script_LEVEL2_entering_27
	.export		_script_LEVEL2_pfire_at_27
	.export		_script_LEVEL2_entering_28
	.export		_script_LEVEL2_pfire_at_28
	.export		_script_LEVEL2_entering_29
	.export		_script_LEVEL2_pfire_at_29
	.export		_script_LEVEL2_entering_game
	.export		_script_pool_LEVEL2
	.export		_level_scripts
	.export		_read_byte
	.export		_read_vbyte
	.export		_readxy
	.export		_readvxy
	.export		_run_script
	.export		_hud_update
	.export		_hud_draw
	.export		_containers_do
	.export		_player_init
	.export		_player_render
	.export		_player_hit
	.export		_player_move
	.export		_simplecoco_init
	.export		_simplecoco_aimed_new
	.export		_simplecoco_do
	.export		_enems_load
	.export		_enems_kill
	.export		_enems_drain
	.export		_enems_restore_vals
	.export		_enems_do
	.export		_m11_change_raw
	.export		_game_init
	.export		_game_prepare_screen
	.export		_game_loop
	.export		_game_title
	.export		_game_over
	.export		_game_ending
	.export		_main

.segment	"DATA"

_lb_yinc_arc:
	.byte	$00
	.byte	$05
	.byte	$06
	.byte	$05
	.byte	$05
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$04
	.byte	$05
	.byte	$03
	.byte	$04
	.byte	$04
	.byte	$04
	.byte	$03
	.byte	$04
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$02
	.byte	$03
	.byte	$02
	.byte	$02
	.byte	$03
	.byte	$02
	.byte	$02
	.byte	$01
	.byte	$02
	.byte	$02
	.byte	$01
	.byte	$01
	.byte	$02
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
.segment	"ZEROPAGE"
.segment	"BSS"

.segment	"RODATA"

_palts0:
	.byte	$0F
	.byte	$08
	.byte	$00
	.byte	$28
	.byte	$0F
	.byte	$0A
	.byte	$19
	.byte	$29
	.byte	$0F
	.byte	$07
	.byte	$18
	.byte	$26
	.byte	$0F
	.byte	$08
	.byte	$06
	.byte	$17
_palts1:
	.byte	$0F
	.byte	$03
	.byte	$00
	.byte	$2A
	.byte	$0F
	.byte	$0A
	.byte	$19
	.byte	$29
	.byte	$0F
	.byte	$0C
	.byte	$13
	.byte	$23
	.byte	$0F
	.byte	$0C
	.byte	$06
	.byte	$16
_palts2:
	.byte	$0F
	.byte	$03
	.byte	$00
	.byte	$3B
	.byte	$0F
	.byte	$0A
	.byte	$19
	.byte	$29
	.byte	$0F
	.byte	$0C
	.byte	$1C
	.byte	$39
	.byte	$0F
	.byte	$08
	.byte	$06
	.byte	$17
_palss1:
	.byte	$0F
	.byte	$04
	.byte	$25
	.byte	$37
	.byte	$0F
	.byte	$07
	.byte	$00
	.byte	$3D
	.byte	$0F
	.byte	$0C
	.byte	$1B
	.byte	$29
	.byte	$0F
	.byte	$08
	.byte	$18
	.byte	$28
_pal_ending:
	.byte	$0F
	.byte	$37
	.byte	$00
	.byte	$32
	.byte	$0F
	.byte	$04
	.byte	$25
	.byte	$37
	.byte	$0F
	.byte	$04
	.byte	$15
	.byte	$17
	.byte	$0F
	.byte	$0C
	.byte	$2D
	.byte	$37
_bitmasks:
	.byte	$FC
	.byte	$F3
	.byte	$CF
	.byte	$3F
_jitter_big:
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FC
	.byte	$04
	.byte	$FD
	.byte	$00
	.byte	$FC
	.byte	$FE
	.byte	$03
	.byte	$FD
	.byte	$02
	.byte	$01
	.byte	$FF
	.byte	$00
	.byte	$FE
_fanty_incs:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
_enems_0_00:
	.byte	$10
	.byte	$9A
	.byte	$97
	.byte	$01
	.byte	$00
_enems_0_01:
	.byte	$23
	.byte	$BD
	.byte	$6D
	.byte	$01
	.byte	$00
_enems_0_02:
	.byte	$23
	.byte	$AA
	.byte	$A5
	.byte	$01
	.byte	$00
_enems_0_03:
	.byte	$B0
	.byte	$CE
	.byte	$C6
	.byte	$00
	.byte	$00
_enems_0_04:
	.byte	$11
	.byte	$87
	.byte	$B9
	.byte	$01
	.byte	$00
_enems_0_05:
	.byte	$11
	.byte	$5A
	.byte	$BB
	.byte	$02
	.byte	$00
_enems_0_06:
	.byte	$12
	.byte	$82
	.byte	$88
	.byte	$01
	.byte	$00
_enems_0_08:
	.byte	$33
	.byte	$4A
	.byte	$49
	.byte	$00
	.byte	$23
	.byte	$A8
	.byte	$A2
	.byte	$01
	.byte	$00
_enems_0_09:
	.byte	$11
	.byte	$44
	.byte	$A6
	.byte	$02
	.byte	$33
	.byte	$8D
	.byte	$8C
	.byte	$00
	.byte	$00
_enems_0:
	.addr	_enems_0_00
	.addr	_enems_0_01
	.addr	_enems_0_02
	.addr	_enems_0_03
	.addr	_enems_0_04
	.addr	_enems_0_05
	.addr	_enems_0_06
	.word	$0000
	.addr	_enems_0_08
	.addr	_enems_0_09
_scr_0_00:
	.byte	$E1
	.byte	$E1
	.byte	$E2
	.byte	$E2
	.byte	$E3
	.byte	$E3
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$18
	.byte	$E0
	.byte	$C0
	.byte	$18
	.byte	$E0
	.byte	$C0
	.byte	$19
	.byte	$E0
	.byte	$C0
	.byte	$18
	.byte	$E0
	.byte	$20
	.byte	$10
	.byte	$71
	.byte	$19
	.byte	$E0
	.byte	$20
	.byte	$94
	.byte	$18
	.byte	$19
	.byte	$60
	.byte	$10
	.byte	$F1
	.byte	$11
	.byte	$19
	.byte	$18
	.byte	$19
	.byte	$40
	.byte	$34
	.byte	$17
	.byte	$D4
	.byte	$B1
	.byte	$54
	.byte	$16
	.byte	$B4
_scr_0_01:
	.byte	$E1
	.byte	$E1
	.byte	$E2
	.byte	$E2
	.byte	$E3
	.byte	$E3
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$60
	.byte	$19
	.byte	$E0
	.byte	$20
	.byte	$13
	.byte	$60
	.byte	$11
	.byte	$40
	.byte	$31
	.byte	$12
	.byte	$20
	.byte	$09
	.byte	$0A
	.byte	$69
	.byte	$00
	.byte	$14
	.byte	$40
	.byte	$54
	.byte	$20
	.byte	$09
	.byte	$0A
	.byte	$69
	.byte	$00
	.byte	$14
	.byte	$40
	.byte	$51
	.byte	$12
	.byte	$20
	.byte	$0A
	.byte	$49
	.byte	$00
	.byte	$18
	.byte	$14
	.byte	$40
	.byte	$74
	.byte	$19
	.byte	$80
	.byte	$18
	.byte	$19
	.byte	$14
	.byte	$40
	.byte	$17
	.byte	$54
	.byte	$F1
	.byte	$17
	.byte	$51
_scr_0_02:
	.byte	$E1
	.byte	$E1
	.byte	$E2
	.byte	$E2
	.byte	$E3
	.byte	$E3
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$40
	.byte	$10
	.byte	$12
	.byte	$A0
	.byte	$10
	.byte	$12
	.byte	$80
	.byte	$10
	.byte	$34
	.byte	$A6
	.byte	$34
	.byte	$12
	.byte	$20
	.byte	$F1
	.byte	$F1
_scr_0_03:
	.byte	$E1
	.byte	$E1
	.byte	$E2
	.byte	$E2
	.byte	$E3
	.byte	$E3
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$C0
	.byte	$10
	.byte	$E0
	.byte	$20
	.byte	$13
	.byte	$60
	.byte	$14
	.byte	$A0
	.byte	$13
	.byte	$E0
	.byte	$14
	.byte	$E0
	.byte	$C0
	.byte	$14
	.byte	$40
	.byte	$13
	.byte	$E0
	.byte	$40
	.byte	$14
	.byte	$80
	.byte	$19
	.byte	$80
	.byte	$1D
	.byte	$5E
	.byte	$14
	.byte	$91
	.byte	$FB
	.byte	$3B
	.byte	$14
_scr_0_04:
	.byte	$E1
	.byte	$E1
	.byte	$E2
	.byte	$E2
	.byte	$E3
	.byte	$C3
	.byte	$10
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$05
	.byte	$04
	.byte	$14
	.byte	$E0
	.byte	$C0
	.byte	$14
	.byte	$12
	.byte	$E0
	.byte	$40
	.byte	$1D
	.byte	$1E
	.byte	$1F
	.byte	$34
	.byte	$E0
	.byte	$00
	.byte	$88
	.byte	$34
	.byte	$E0
	.byte	$00
	.byte	$89
	.byte	$34
	.byte	$19
	.byte	$E0
	.byte	$89
	.byte	$34
	.byte	$18
	.byte	$19
	.byte	$C0
	.byte	$89
	.byte	$34
	.byte	$19
	.byte	$18
	.byte	$1F
	.byte	$39
	.byte	$60
	.byte	$29
	.byte	$1B
	.byte	$3E
	.byte	$34
	.byte	$91
	.byte	$12
	.byte	$48
	.byte	$10
	.byte	$71
	.byte	$14
_scr_0_05:
	.byte	$B4
	.byte	$17
	.byte	$14
	.byte	$17
	.byte	$F4
	.byte	$54
	.byte	$16
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$00
	.byte	$16
	.byte	$34
	.byte	$16
	.byte	$34
	.byte	$16
	.byte	$54
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$60
	.byte	$16
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$16
	.byte	$00
	.byte	$34
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$A0
	.byte	$16
	.byte	$60
	.byte	$14
	.byte	$16
	.byte	$E0
	.byte	$A0
	.byte	$16
	.byte	$0C
	.byte	$E0
	.byte	$A0
	.byte	$2B
	.byte	$0C
	.byte	$E0
	.byte	$80
	.byte	$4B
	.byte	$0C
	.byte	$E0
	.byte	$3B
	.byte	$20
	.byte	$6B
	.byte	$0C
	.byte	$C0
	.byte	$5B
	.byte	$08
	.byte	$9E
	.byte	$1F
	.byte	$E0
	.byte	$20
	.byte	$F1
	.byte	$11
	.byte	$12
	.byte	$AB
	.byte	$F4
	.byte	$34
	.byte	$A6
_scr_0_06:
	.byte	$34
	.byte	$17
	.byte	$F4
	.byte	$94
	.byte	$16
	.byte	$F4
	.byte	$14
	.byte	$17
	.byte	$74
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$16
	.byte	$14
	.byte	$16
	.byte	$34
	.byte	$16
	.byte	$14
	.byte	$17
	.byte	$14
	.byte	$17
	.byte	$34
	.byte	$17
	.byte	$60
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$16
	.byte	$34
	.byte	$17
	.byte	$16
	.byte	$E0
	.byte	$60
	.byte	$17
	.byte	$16
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$00
	.byte	$1B
	.byte	$20
	.byte	$08
	.byte	$1C
	.byte	$28
	.byte	$1C
	.byte	$28
	.byte	$1C
	.byte	$28
	.byte	$1C
	.byte	$28
	.byte	$1B
	.byte	$28
	.byte	$E0
	.byte	$E0
	.byte	$EB
	.byte	$EB
	.byte	$E6
	.byte	$E6
_scr_0_07:
	.byte	$F4
	.byte	$94
	.byte	$16
	.byte	$94
	.byte	$36
	.byte	$34
	.byte	$16
	.byte	$14
	.byte	$16
	.byte	$17
	.byte	$14
	.byte	$17
	.byte	$00
	.byte	$16
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$17
	.byte	$20
	.byte	$54
	.byte	$17
	.byte	$20
	.byte	$16
	.byte	$40
	.byte	$17
	.byte	$00
	.byte	$16
	.byte	$40
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$E0
	.byte	$A0
	.byte	$16
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$10
	.byte	$E0
	.byte	$A0
	.byte	$13
	.byte	$14
	.byte	$E0
	.byte	$C0
	.byte	$14
	.byte	$28
	.byte	$1B
	.byte	$68
	.byte	$1C
	.byte	$68
	.byte	$1B
	.byte	$20
	.byte	$14
	.byte	$E0
	.byte	$A0
	.byte	$0F
	.byte	$14
	.byte	$EB
	.byte	$CB
	.byte	$14
	.byte	$E6
	.byte	$C6
	.byte	$14
_scr_0_08:
	.byte	$94
	.byte	$16
	.byte	$17
	.byte	$14
	.byte	$17
	.byte	$14
	.byte	$37
	.byte	$34
	.byte	$16
	.byte	$34
	.byte	$16
	.byte	$14
	.byte	$16
	.byte	$17
	.byte	$20
	.byte	$16
	.byte	$37
	.byte	$29
	.byte	$16
	.byte	$17
	.byte	$34
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$80
	.byte	$1B
	.byte	$28
	.byte	$1B
	.byte	$09
	.byte	$0A
	.byte	$16
	.byte	$14
	.byte	$E0
	.byte	$0A
	.byte	$29
	.byte	$1B
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$17
	.byte	$E0
	.byte	$0A
	.byte	$29
	.byte	$1B
	.byte	$09
	.byte	$0A
	.byte	$20
	.byte	$12
	.byte	$80
	.byte	$13
	.byte	$00
	.byte	$1B
	.byte	$28
	.byte	$1B
	.byte	$09
	.byte	$0A
	.byte	$20
	.byte	$14
	.byte	$C0
	.byte	$0A
	.byte	$69
	.byte	$0A
	.byte	$20
	.byte	$14
	.byte	$20
	.byte	$13
	.byte	$60
	.byte	$0A
	.byte	$69
	.byte	$2A
	.byte	$00
	.byte	$14
	.byte	$C0
	.byte	$0A
	.byte	$69
	.byte	$0A
	.byte	$10
	.byte	$11
	.byte	$14
	.byte	$12
	.byte	$A0
	.byte	$0A
	.byte	$29
	.byte	$1A
	.byte	$09
	.byte	$10
	.byte	$74
	.byte	$AB
	.byte	$0A
	.byte	$10
	.byte	$51
	.byte	$94
	.byte	$C6
	.byte	$D4
_scr_0_09:
	.byte	$D4
	.byte	$4B
	.byte	$16
	.byte	$F4
	.byte	$34
	.byte	$17
	.byte	$16
	.byte	$4B
	.byte	$0D
	.byte	$B4
	.byte	$17
	.byte	$34
	.byte	$16
	.byte	$00
	.byte	$0E
	.byte	$4B
	.byte	$00
	.byte	$16
	.byte	$74
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$17
	.byte	$40
	.byte	$0E
	.byte	$0B
	.byte	$2D
	.byte	$00
	.byte	$16
	.byte	$54
	.byte	$C0
	.byte	$0E
	.byte	$80
	.byte	$54
	.byte	$C0
	.byte	$13
	.byte	$15
	.byte	$13
	.byte	$48
	.byte	$17
	.byte	$34
	.byte	$E0
	.byte	$07
	.byte	$80
	.byte	$34
	.byte	$E0
	.byte	$07
	.byte	$80
	.byte	$34
	.byte	$12
	.byte	$A0
	.byte	$0F
	.byte	$07
	.byte	$0C
	.byte	$60
	.byte	$54
	.byte	$80
	.byte	$0F
	.byte	$0B
	.byte	$07
	.byte	$0B
	.byte	$0C
	.byte	$40
	.byte	$54
	.byte	$2B
	.byte	$13
	.byte	$6B
	.byte	$07
	.byte	$8B
	.byte	$54
	.byte	$E6
	.byte	$86
	.byte	$34
_map_0:
	.addr	_scr_0_00
	.addr	_scr_0_01
	.addr	_scr_0_02
	.addr	_scr_0_03
	.addr	_scr_0_04
	.addr	_scr_0_05
	.addr	_scr_0_06
	.addr	_scr_0_07
	.addr	_scr_0_08
	.addr	_scr_0_09
_map_0_decos_00:
	.byte	$A0
	.byte	$A4
	.byte	$00
_map_0_decos_01:
	.byte	$A0
	.byte	$A6
	.byte	$00
_map_0_decos_02:
	.byte	$A0
	.byte	$83
	.byte	$00
_map_0_decos_03:
	.byte	$A0
	.byte	$A1
	.byte	$00
_map_0_decos_04:
	.byte	$A0
	.byte	$A5
	.byte	$A1
	.byte	$AB
	.byte	$00
_map_0_decos_05:
	.byte	$A0
	.byte	$97
	.byte	$00
_map_0_decos_07:
	.byte	$A0
	.byte	$7B
	.byte	$00
_map_0_decos_08:
	.byte	$A0
	.byte	$7E
	.byte	$00
_map_0_decos_09:
	.byte	$A0
	.byte	$4A
	.byte	$00
_map_0_decos:
	.addr	_map_0_decos_00
	.addr	_map_0_decos_01
	.addr	_map_0_decos_02
	.addr	_map_0_decos_03
	.addr	_map_0_decos_04
	.addr	_map_0_decos_05
	.word	$0000
	.addr	_map_0_decos_07
	.addr	_map_0_decos_08
	.addr	_map_0_decos_09
_enems_1_00:
	.byte	$23
	.byte	$8A
	.byte	$84
	.byte	$01
	.byte	$00
_enems_1_01:
	.byte	$23
	.byte	$7B
	.byte	$72
	.byte	$01
	.byte	$33
	.byte	$BD
	.byte	$BC
	.byte	$00
	.byte	$00
_enems_1_02:
	.byte	$33
	.byte	$B7
	.byte	$A7
	.byte	$00
	.byte	$00
_enems_1_03:
	.byte	$B0
	.byte	$B2
	.byte	$B6
	.byte	$00
	.byte	$00
_enems_1_06:
	.byte	$23
	.byte	$5E
	.byte	$51
	.byte	$04
	.byte	$23
	.byte	$75
	.byte	$B5
	.byte	$01
	.byte	$00
_enems_1_0a:
	.byte	$33
	.byte	$68
	.byte	$58
	.byte	$00
	.byte	$00
_enems_1_0b:
	.byte	$23
	.byte	$91
	.byte	$9E
	.byte	$02
	.byte	$23
	.byte	$BE
	.byte	$B6
	.byte	$01
	.byte	$00
_enems_1_0c:
	.byte	$10
	.byte	$5E
	.byte	$5D
	.byte	$01
	.byte	$00
_enems_1_0d:
	.byte	$B0
	.byte	$91
	.byte	$95
	.byte	$00
	.byte	$B2
	.byte	$61
	.byte	$65
	.byte	$02
	.byte	$00
_enems_1_0e:
	.byte	$33
	.byte	$7D
	.byte	$7C
	.byte	$00
	.byte	$23
	.byte	$B1
	.byte	$71
	.byte	$01
	.byte	$00
_enems_1_0f:
	.byte	$33
	.byte	$4E
	.byte	$4D
	.byte	$00
	.byte	$11
	.byte	$69
	.byte	$66
	.byte	$01
	.byte	$00
_enems_1_10:
	.byte	$33
	.byte	$39
	.byte	$29
	.byte	$00
	.byte	$00
_enems_1_11:
	.byte	$33
	.byte	$32
	.byte	$42
	.byte	$00
	.byte	$33
	.byte	$26
	.byte	$36
	.byte	$00
	.byte	$00
_enems_1_12:
	.byte	$10
	.byte	$B1
	.byte	$B4
	.byte	$01
	.byte	$11
	.byte	$32
	.byte	$92
	.byte	$02
	.byte	$00
_enems_1_13:
	.byte	$33
	.byte	$B8
	.byte	$A8
	.byte	$00
	.byte	$33
	.byte	$C9
	.byte	$B9
	.byte	$00
	.byte	$00
_enems_1_15:
	.byte	$33
	.byte	$98
	.byte	$88
	.byte	$00
	.byte	$00
_enems_1_17:
	.byte	$33
	.byte	$9A
	.byte	$99
	.byte	$00
	.byte	$00
_enems_1_18:
	.byte	$12
	.byte	$5A
	.byte	$5E
	.byte	$02
	.byte	$B0
	.byte	$A7
	.byte	$AE
	.byte	$00
	.byte	$00
_enems_1_19:
	.byte	$11
	.byte	$27
	.byte	$99
	.byte	$02
	.byte	$00
_enems_1_1a:
	.byte	$33
	.byte	$8B
	.byte	$7B
	.byte	$00
	.byte	$00
_enems_1_1d:
	.byte	$F0
	.byte	$3E
	.byte	$3D
	.byte	$00
	.byte	$00
_enems_1:
	.addr	_enems_1_00
	.addr	_enems_1_01
	.addr	_enems_1_02
	.addr	_enems_1_03
	.word	$0000
	.word	$0000
	.addr	_enems_1_06
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_enems_1_0a
	.addr	_enems_1_0b
	.addr	_enems_1_0c
	.addr	_enems_1_0d
	.addr	_enems_1_0e
	.addr	_enems_1_0f
	.addr	_enems_1_10
	.addr	_enems_1_11
	.addr	_enems_1_12
	.addr	_enems_1_13
	.word	$0000
	.addr	_enems_1_15
	.word	$0000
	.addr	_enems_1_17
	.addr	_enems_1_18
	.addr	_enems_1_19
	.addr	_enems_1_1a
	.word	$0000
	.word	$0000
	.addr	_enems_1_1d
_scr_1_00:
	.byte	$E1
	.byte	$E1
	.byte	$61
	.byte	$04
	.byte	$06
	.byte	$04
	.byte	$A1
	.byte	$06
	.byte	$81
	.byte	$04
	.byte	$40
	.byte	$81
	.byte	$06
	.byte	$0A
	.byte	$06
	.byte	$61
	.byte	$20
	.byte	$0A
	.byte	$00
	.byte	$04
	.byte	$01
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$0A
	.byte	$02
	.byte	$0A
	.byte	$41
	.byte	$06
	.byte	$20
	.byte	$02
	.byte	$20
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$40
	.byte	$02
	.byte	$60
	.byte	$04
	.byte	$20
	.byte	$02
	.byte	$20
	.byte	$01
	.byte	$60
	.byte	$42
	.byte	$0F
	.byte	$C0
	.byte	$01
	.byte	$20
	.byte	$15
	.byte	$00
	.byte	$62
	.byte	$20
	.byte	$15
	.byte	$20
	.byte	$11
	.byte	$08
	.byte	$01
	.byte	$60
	.byte	$0C
	.byte	$42
	.byte	$0F
	.byte	$60
	.byte	$06
	.byte	$04
	.byte	$01
	.byte	$12
	.byte	$80
	.byte	$0C
	.byte	$22
	.byte	$A0
	.byte	$01
	.byte	$17
	.byte	$E0
	.byte	$20
	.byte	$19
	.byte	$1A
	.byte	$20
	.byte	$01
	.byte	$20
	.byte	$15
	.byte	$C0
	.byte	$65
	.byte	$11
_scr_1_01:
	.byte	$C1
	.byte	$22
	.byte	$E1
	.byte	$21
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$22
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$41
	.byte	$04
	.byte	$21
	.byte	$04
	.byte	$00
	.byte	$06
	.byte	$20
	.byte	$22
	.byte	$04
	.byte	$20
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$06
	.byte	$80
	.byte	$0A
	.byte	$02
	.byte	$60
	.byte	$06
	.byte	$20
	.byte	$06
	.byte	$A0
	.byte	$22
	.byte	$E0
	.byte	$A0
	.byte	$22
	.byte	$E0
	.byte	$A0
	.byte	$22
	.byte	$40
	.byte	$11
	.byte	$12
	.byte	$20
	.byte	$08
	.byte	$12
	.byte	$80
	.byte	$22
	.byte	$40
	.byte	$04
	.byte	$01
	.byte	$12
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$12
	.byte	$00
	.byte	$1A
	.byte	$19
	.byte	$00
	.byte	$22
	.byte	$60
	.byte	$06
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$04
	.byte	$01
	.byte	$12
	.byte	$A5
	.byte	$0D
	.byte	$40
	.byte	$21
	.byte	$20
	.byte	$21
	.byte	$12
	.byte	$20
	.byte	$02
	.byte	$0A
	.byte	$80
	.byte	$21
	.byte	$28
	.byte	$21
	.byte	$28
	.byte	$12
	.byte	$22
	.byte	$11
	.byte	$68
	.byte	$01
	.byte	$08
_scr_1_02:
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$24
	.byte	$A1
	.byte	$24
	.byte	$06
	.byte	$24
	.byte	$80
	.byte	$04
	.byte	$41
	.byte	$06
	.byte	$01
	.byte	$0A
	.byte	$E0
	.byte	$20
	.byte	$06
	.byte	$01
	.byte	$06
	.byte	$00
	.byte	$04
	.byte	$02
	.byte	$00
	.byte	$11
	.byte	$12
	.byte	$1D
	.byte	$00
	.byte	$0F
	.byte	$22
	.byte	$0A
	.byte	$20
	.byte	$04
	.byte	$00
	.byte	$0F
	.byte	$22
	.byte	$0A
	.byte	$04
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$62
	.byte	$60
	.byte	$0C
	.byte	$42
	.byte	$0B
	.byte	$04
	.byte	$01
	.byte	$00
	.byte	$02
	.byte	$0E
	.byte	$22
	.byte	$0A
	.byte	$60
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$20
	.byte	$01
	.byte	$00
	.byte	$0C
	.byte	$0D
	.byte	$E5
	.byte	$05
	.byte	$0D
	.byte	$00
	.byte	$11
	.byte	$01
	.byte	$20
	.byte	$09
	.byte	$60
	.byte	$2F
	.byte	$0A
	.byte	$20
	.byte	$09
	.byte	$00
	.byte	$01
	.byte	$04
	.byte	$12
	.byte	$00
	.byte	$09
	.byte	$60
	.byte	$42
	.byte	$20
	.byte	$09
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$0D
	.byte	$40
	.byte	$0F
	.byte	$42
	.byte	$0A
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$40
	.byte	$1A
	.byte	$0F
	.byte	$82
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$61
	.byte	$11
	.byte	$C8
	.byte	$12
	.byte	$41
_scr_1_03:
	.byte	$04
	.byte	$06
	.byte	$24
	.byte	$A1
	.byte	$04
	.byte	$81
	.byte	$60
	.byte	$06
	.byte	$21
	.byte	$06
	.byte	$04
	.byte	$06
	.byte	$00
	.byte	$06
	.byte	$21
	.byte	$04
	.byte	$01
	.byte	$78
	.byte	$1B
	.byte	$01
	.byte	$04
	.byte	$80
	.byte	$04
	.byte	$01
	.byte	$00
	.byte	$04
	.byte	$48
	.byte	$12
	.byte	$14
	.byte	$06
	.byte	$C0
	.byte	$06
	.byte	$20
	.byte	$61
	.byte	$14
	.byte	$0F
	.byte	$0A
	.byte	$C0
	.byte	$11
	.byte	$08
	.byte	$41
	.byte	$04
	.byte	$35
	.byte	$02
	.byte	$C0
	.byte	$06
	.byte	$41
	.byte	$06
	.byte	$62
	.byte	$20
	.byte	$0D
	.byte	$85
	.byte	$01
	.byte	$24
	.byte	$20
	.byte	$0F
	.byte	$22
	.byte	$0A
	.byte	$00
	.byte	$09
	.byte	$83
	.byte	$01
	.byte	$A0
	.byte	$0C
	.byte	$15
	.byte	$00
	.byte	$09
	.byte	$83
	.byte	$01
	.byte	$E0
	.byte	$00
	.byte	$09
	.byte	$83
	.byte	$01
	.byte	$00
	.byte	$1D
	.byte	$98
	.byte	$3B
	.byte	$09
	.byte	$23
	.byte	$4D
	.byte	$E1
	.byte	$E1
	.byte	$01
_scr_1_04:
	.byte	$21
	.byte	$06
	.byte	$E1
	.byte	$A1
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$06
	.byte	$A1
	.byte	$46
	.byte	$21
	.byte	$04
	.byte	$20
	.byte	$04
	.byte	$00
	.byte	$04
	.byte	$61
	.byte	$06
	.byte	$40
	.byte	$04
	.byte	$01
	.byte	$A0
	.byte	$06
	.byte	$01
	.byte	$06
	.byte	$04
	.byte	$80
	.byte	$06
	.byte	$08
	.byte	$12
	.byte	$80
	.byte	$06
	.byte	$E0
	.byte	$01
	.byte	$06
	.byte	$00
	.byte	$1A
	.byte	$19
	.byte	$E0
	.byte	$40
	.byte	$01
	.byte	$85
	.byte	$0D
	.byte	$E0
	.byte	$00
	.byte	$01
	.byte	$83
	.byte	$09
	.byte	$A0
	.byte	$0D
	.byte	$25
	.byte	$01
	.byte	$83
	.byte	$09
	.byte	$80
	.byte	$0F
	.byte	$02
	.byte	$20
	.byte	$01
	.byte	$83
	.byte	$09
	.byte	$40
	.byte	$2F
	.byte	$22
	.byte	$0A
	.byte	$00
	.byte	$01
	.byte	$4D
	.byte	$23
	.byte	$29
	.byte	$19
	.byte	$00
	.byte	$0C
	.byte	$62
	.byte	$00
	.byte	$01
	.byte	$E8
	.byte	$48
	.byte	$12
	.byte	$02
	.byte	$0B
	.byte	$11
_scr_1_05:
	.byte	$E1
	.byte	$E1
	.byte	$21
	.byte	$06
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$01
	.byte	$0D
	.byte	$01
	.byte	$0D
	.byte	$01
	.byte	$26
	.byte	$61
	.byte	$06
	.byte	$20
	.byte	$06
	.byte	$00
	.byte	$06
	.byte	$0D
	.byte	$04
	.byte	$0D
	.byte	$06
	.byte	$00
	.byte	$0F
	.byte	$06
	.byte	$21
	.byte	$06
	.byte	$60
	.byte	$0D
	.byte	$00
	.byte	$0D
	.byte	$40
	.byte	$0A
	.byte	$02
	.byte	$0B
	.byte	$21
	.byte	$40
	.byte	$11
	.byte	$08
	.byte	$0D
	.byte	$08
	.byte	$00
	.byte	$08
	.byte	$0D
	.byte	$12
	.byte	$05
	.byte	$02
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$40
	.byte	$21
	.byte	$0D
	.byte	$01
	.byte	$0D
	.byte	$01
	.byte	$0D
	.byte	$01
	.byte	$02
	.byte	$0B
	.byte	$00
	.byte	$1A
	.byte	$01
	.byte	$40
	.byte	$21
	.byte	$17
	.byte	$06
	.byte	$17
	.byte	$01
	.byte	$17
	.byte	$10
	.byte	$1B
	.byte	$00
	.byte	$25
	.byte	$01
	.byte	$25
	.byte	$11
	.byte	$01
	.byte	$06
	.byte	$16
	.byte	$02
	.byte	$16
	.byte	$06
	.byte	$16
	.byte	$02
	.byte	$14
	.byte	$40
	.byte	$01
	.byte	$20
	.byte	$21
	.byte	$00
	.byte	$16
	.byte	$0B
	.byte	$16
	.byte	$0C
	.byte	$16
	.byte	$00
	.byte	$14
	.byte	$20
	.byte	$19
	.byte	$01
	.byte	$20
	.byte	$04
	.byte	$01
	.byte	$1B
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$25
	.byte	$01
	.byte	$40
	.byte	$06
	.byte	$05
	.byte	$1F
	.byte	$05
	.byte	$1F
	.byte	$05
	.byte	$1F
	.byte	$05
	.byte	$0D
	.byte	$40
	.byte	$01
	.byte	$08
	.byte	$12
	.byte	$E7
	.byte	$11
	.byte	$12
	.byte	$15
	.byte	$20
	.byte	$01
_scr_1_06:
	.byte	$01
	.byte	$20
	.byte	$0F
	.byte	$E0
	.byte	$40
	.byte	$21
	.byte	$00
	.byte	$0F
	.byte	$22
	.byte	$0A
	.byte	$E0
	.byte	$11
	.byte	$21
	.byte	$00
	.byte	$62
	.byte	$40
	.byte	$2F
	.byte	$0A
	.byte	$20
	.byte	$06
	.byte	$21
	.byte	$00
	.byte	$42
	.byte	$0B
	.byte	$40
	.byte	$42
	.byte	$40
	.byte	$21
	.byte	$00
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$60
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$40
	.byte	$21
	.byte	$E0
	.byte	$00
	.byte	$0C
	.byte	$60
	.byte	$21
	.byte	$48
	.byte	$12
	.byte	$20
	.byte	$11
	.byte	$12
	.byte	$1D
	.byte	$98
	.byte	$A1
	.byte	$20
	.byte	$21
	.byte	$A7
	.byte	$81
	.byte	$06
	.byte	$20
	.byte	$0D
	.byte	$C5
	.byte	$41
	.byte	$06
	.byte	$04
	.byte	$40
	.byte	$09
	.byte	$A3
	.byte	$14
	.byte	$21
	.byte	$04
	.byte	$80
	.byte	$09
	.byte	$A3
	.byte	$14
	.byte	$21
	.byte	$40
	.byte	$11
	.byte	$C8
	.byte	$12
	.byte	$03
	.byte	$14
	.byte	$01
_scr_1_07:
	.byte	$C1
	.byte	$22
	.byte	$21
	.byte	$08
	.byte	$E1
	.byte	$21
	.byte	$04
	.byte	$0A
	.byte	$02
	.byte	$04
	.byte	$21
	.byte	$08
	.byte	$E1
	.byte	$06
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$01
	.byte	$06
	.byte	$E1
	.byte	$01
	.byte	$20
	.byte	$22
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$41
	.byte	$04
	.byte	$21
	.byte	$08
	.byte	$01
	.byte	$06
	.byte	$20
	.byte	$22
	.byte	$40
	.byte	$04
	.byte	$21
	.byte	$00
	.byte	$01
	.byte	$08
	.byte	$21
	.byte	$40
	.byte	$22
	.byte	$60
	.byte	$21
	.byte	$00
	.byte	$61
	.byte	$40
	.byte	$02
	.byte	$0B
	.byte	$60
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$41
	.byte	$04
	.byte	$40
	.byte	$22
	.byte	$60
	.byte	$01
	.byte	$20
	.byte	$21
	.byte	$06
	.byte	$60
	.byte	$22
	.byte	$11
	.byte	$55
	.byte	$04
	.byte	$20
	.byte	$21
	.byte	$80
	.byte	$0B
	.byte	$02
	.byte	$01
	.byte	$A0
	.byte	$21
	.byte	$80
	.byte	$22
	.byte	$01
	.byte	$80
	.byte	$0D
	.byte	$21
	.byte	$88
	.byte	$22
	.byte	$01
	.byte	$A8
_scr_1_08:
	.byte	$E1
	.byte	$E1
	.byte	$21
	.byte	$06
	.byte	$81
	.byte	$04
	.byte	$01
	.byte	$06
	.byte	$04
	.byte	$81
	.byte	$04
	.byte	$0A
	.byte	$06
	.byte	$41
	.byte	$06
	.byte	$0A
	.byte	$06
	.byte	$20
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$26
	.byte	$0C
	.byte	$02
	.byte	$00
	.byte	$04
	.byte	$21
	.byte	$0A
	.byte	$02
	.byte	$0A
	.byte	$40
	.byte	$06
	.byte	$0A
	.byte	$20
	.byte	$02
	.byte	$20
	.byte	$0A
	.byte	$01
	.byte	$04
	.byte	$20
	.byte	$0B
	.byte	$20
	.byte	$02
	.byte	$0A
	.byte	$40
	.byte	$0B
	.byte	$40
	.byte	$06
	.byte	$A0
	.byte	$0B
	.byte	$02
	.byte	$40
	.byte	$0D
	.byte	$25
	.byte	$0D
	.byte	$0A
	.byte	$C0
	.byte	$0F
	.byte	$40
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$E0
	.byte	$0D
	.byte	$25
	.byte	$00
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$E0
	.byte	$0D
	.byte	$40
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$E0
	.byte	$0D
	.byte	$20
	.byte	$4D
	.byte	$1C
	.byte	$0D
	.byte	$1C
	.byte	$0D
	.byte	$A0
	.byte	$0D
	.byte	$20
	.byte	$E8
	.byte	$E8
_scr_1_09:
	.byte	$E1
	.byte	$61
	.byte	$24
	.byte	$61
	.byte	$04
	.byte	$E1
	.byte	$04
	.byte	$20
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$01
	.byte	$0A
	.byte	$04
	.byte	$61
	.byte	$04
	.byte	$21
	.byte	$60
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$0A
	.byte	$24
	.byte	$17
	.byte	$04
	.byte	$00
	.byte	$24
	.byte	$A0
	.byte	$04
	.byte	$42
	.byte	$0A
	.byte	$A0
	.byte	$0F
	.byte	$00
	.byte	$0A
	.byte	$11
	.byte	$20
	.byte	$0C
	.byte	$42
	.byte	$0A
	.byte	$60
	.byte	$0A
	.byte	$22
	.byte	$11
	.byte	$01
	.byte	$40
	.byte	$0C
	.byte	$0B
	.byte	$0C
	.byte	$0B
	.byte	$40
	.byte	$0F
	.byte	$42
	.byte	$06
	.byte	$01
	.byte	$45
	.byte	$1C
	.byte	$00
	.byte	$65
	.byte	$1C
	.byte	$25
	.byte	$0D
	.byte	$22
	.byte	$01
	.byte	$62
	.byte	$0A
	.byte	$40
	.byte	$0C
	.byte	$00
	.byte	$22
	.byte	$09
	.byte	$23
	.byte	$01
	.byte	$0C
	.byte	$22
	.byte	$0B
	.byte	$A0
	.byte	$0C
	.byte	$02
	.byte	$09
	.byte	$03
	.byte	$05
	.byte	$01
	.byte	$00
	.byte	$0B
	.byte	$E0
	.byte	$00
	.byte	$0C
	.byte	$09
	.byte	$1E
	.byte	$03
	.byte	$01
	.byte	$12
	.byte	$47
	.byte	$0E
	.byte	$47
	.byte	$0E
	.byte	$47
	.byte	$11
	.byte	$28
	.byte	$01
_scr_1_0a:
	.byte	$21
	.byte	$04
	.byte	$E1
	.byte	$21
	.byte	$02
	.byte	$00
	.byte	$21
	.byte	$0D
	.byte	$02
	.byte	$01
	.byte	$06
	.byte	$21
	.byte	$06
	.byte	$09
	.byte	$43
	.byte	$01
	.byte	$18
	.byte	$1B
	.byte	$01
	.byte	$26
	.byte	$02
	.byte	$04
	.byte	$0A
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$09
	.byte	$03
	.byte	$1E
	.byte	$03
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$01
	.byte	$20
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$06
	.byte	$20
	.byte	$0D
	.byte	$45
	.byte	$01
	.byte	$0A
	.byte	$14
	.byte	$01
	.byte	$08
	.byte	$12
	.byte	$00
	.byte	$0C
	.byte	$60
	.byte	$09
	.byte	$43
	.byte	$01
	.byte	$02
	.byte	$14
	.byte	$21
	.byte	$06
	.byte	$A0
	.byte	$09
	.byte	$43
	.byte	$01
	.byte	$02
	.byte	$14
	.byte	$21
	.byte	$20
	.byte	$15
	.byte	$60
	.byte	$0D
	.byte	$45
	.byte	$01
	.byte	$12
	.byte	$14
	.byte	$21
	.byte	$E0
	.byte	$0C
	.byte	$22
	.byte	$01
	.byte	$04
	.byte	$14
	.byte	$21
	.byte	$80
	.byte	$15
	.byte	$40
	.byte	$0C
	.byte	$02
	.byte	$01
	.byte	$02
	.byte	$14
	.byte	$21
	.byte	$E0
	.byte	$20
	.byte	$0B
	.byte	$01
	.byte	$0B
	.byte	$14
	.byte	$21
	.byte	$C0
	.byte	$1D
	.byte	$38
	.byte	$1B
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$21
	.byte	$08
	.byte	$0D
	.byte	$45
	.byte	$0D
	.byte	$88
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$01
_scr_1_0b:
	.byte	$01
	.byte	$04
	.byte	$61
	.byte	$04
	.byte	$21
	.byte	$06
	.byte	$21
	.byte	$0A
	.byte	$20
	.byte	$21
	.byte	$00
	.byte	$04
	.byte	$21
	.byte	$06
	.byte	$00
	.byte	$21
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$25
	.byte	$00
	.byte	$21
	.byte	$20
	.byte	$06
	.byte	$04
	.byte	$20
	.byte	$06
	.byte	$01
	.byte	$0C
	.byte	$02
	.byte	$06
	.byte	$0B
	.byte	$20
	.byte	$21
	.byte	$00
	.byte	$0A
	.byte	$80
	.byte	$01
	.byte	$00
	.byte	$22
	.byte	$0A
	.byte	$20
	.byte	$21
	.byte	$0F
	.byte	$02
	.byte	$80
	.byte	$01
	.byte	$00
	.byte	$02
	.byte	$10
	.byte	$45
	.byte	$21
	.byte	$22
	.byte	$0A
	.byte	$11
	.byte	$08
	.byte	$12
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$0C
	.byte	$22
	.byte	$20
	.byte	$21
	.byte	$42
	.byte	$04
	.byte	$17
	.byte	$06
	.byte	$00
	.byte	$01
	.byte	$20
	.byte	$22
	.byte	$20
	.byte	$21
	.byte	$02
	.byte	$0B
	.byte	$20
	.byte	$13
	.byte	$20
	.byte	$06
	.byte	$20
	.byte	$0C
	.byte	$02
	.byte	$00
	.byte	$15
	.byte	$21
	.byte	$60
	.byte	$13
	.byte	$E0
	.byte	$00
	.byte	$21
	.byte	$60
	.byte	$13
	.byte	$60
	.byte	$15
	.byte	$60
	.byte	$21
	.byte	$60
	.byte	$13
	.byte	$E0
	.byte	$00
	.byte	$21
	.byte	$40
	.byte	$0E
	.byte	$E7
	.byte	$27
	.byte	$01
_scr_1_0c:
	.byte	$01
	.byte	$40
	.byte	$04
	.byte	$E1
	.byte	$03
	.byte	$14
	.byte	$21
	.byte	$60
	.byte	$04
	.byte	$41
	.byte	$04
	.byte	$41
	.byte	$03
	.byte	$14
	.byte	$21
	.byte	$00
	.byte	$0A
	.byte	$40
	.byte	$21
	.byte	$06
	.byte	$00
	.byte	$04
	.byte	$21
	.byte	$25
	.byte	$21
	.byte	$0F
	.byte	$22
	.byte	$0A
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$40
	.byte	$06
	.byte	$01
	.byte	$03
	.byte	$14
	.byte	$21
	.byte	$62
	.byte	$20
	.byte	$04
	.byte	$60
	.byte	$04
	.byte	$03
	.byte	$14
	.byte	$04
	.byte	$01
	.byte	$42
	.byte	$0B
	.byte	$C0
	.byte	$0D
	.byte	$25
	.byte	$0D
	.byte	$01
	.byte	$0C
	.byte	$22
	.byte	$E0
	.byte	$09
	.byte	$03
	.byte	$14
	.byte	$09
	.byte	$01
	.byte	$0F
	.byte	$02
	.byte	$0B
	.byte	$E0
	.byte	$09
	.byte	$03
	.byte	$14
	.byte	$09
	.byte	$01
	.byte	$00
	.byte	$0C
	.byte	$C0
	.byte	$0F
	.byte	$00
	.byte	$0D
	.byte	$25
	.byte	$0D
	.byte	$01
	.byte	$E0
	.byte	$0F
	.byte	$22
	.byte	$09
	.byte	$0F
	.byte	$14
	.byte	$09
	.byte	$01
	.byte	$A0
	.byte	$0F
	.byte	$62
	.byte	$09
	.byte	$02
	.byte	$14
	.byte	$09
	.byte	$01
	.byte	$40
	.byte	$11
	.byte	$E8
	.byte	$48
_scr_1_0d:
	.byte	$21
	.byte	$08
	.byte	$41
	.byte	$06
	.byte	$22
	.byte	$04
	.byte	$41
	.byte	$08
	.byte	$41
	.byte	$08
	.byte	$41
	.byte	$06
	.byte	$00
	.byte	$22
	.byte	$00
	.byte	$04
	.byte	$41
	.byte	$08
	.byte	$61
	.byte	$06
	.byte	$01
	.byte	$20
	.byte	$22
	.byte	$20
	.byte	$06
	.byte	$A1
	.byte	$04
	.byte	$00
	.byte	$04
	.byte	$20
	.byte	$0B
	.byte	$02
	.byte	$40
	.byte	$41
	.byte	$06
	.byte	$04
	.byte	$06
	.byte	$1A
	.byte	$19
	.byte	$40
	.byte	$22
	.byte	$40
	.byte	$21
	.byte	$06
	.byte	$00
	.byte	$0D
	.byte	$85
	.byte	$0D
	.byte	$22
	.byte	$40
	.byte	$01
	.byte	$04
	.byte	$20
	.byte	$09
	.byte	$83
	.byte	$09
	.byte	$22
	.byte	$40
	.byte	$06
	.byte	$20
	.byte	$11
	.byte	$09
	.byte	$83
	.byte	$09
	.byte	$22
	.byte	$10
	.byte	$80
	.byte	$01
	.byte	$CD
	.byte	$22
	.byte	$10
	.byte	$60
	.byte	$15
	.byte	$01
	.byte	$09
	.byte	$83
	.byte	$09
	.byte	$02
	.byte	$0B
	.byte	$10
	.byte	$80
	.byte	$01
	.byte	$09
	.byte	$83
	.byte	$09
	.byte	$22
	.byte	$10
	.byte	$1D
	.byte	$78
	.byte	$01
	.byte	$A8
	.byte	$12
	.byte	$22
	.byte	$11
	.byte	$88
	.byte	$01
_scr_1_0e:
	.byte	$41
	.byte	$17
	.byte	$26
	.byte	$17
	.byte	$08
	.byte	$01
	.byte	$04
	.byte	$01
	.byte	$08
	.byte	$01
	.byte	$06
	.byte	$61
	.byte	$06
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$01
	.byte	$06
	.byte	$0F
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$06
	.byte	$21
	.byte	$04
	.byte	$00
	.byte	$09
	.byte	$1E
	.byte	$03
	.byte	$09
	.byte	$04
	.byte	$0F
	.byte	$02
	.byte	$0F
	.byte	$06
	.byte	$40
	.byte	$06
	.byte	$04
	.byte	$20
	.byte	$0D
	.byte	$25
	.byte	$0D
	.byte	$00
	.byte	$62
	.byte	$0A
	.byte	$A0
	.byte	$0E
	.byte	$23
	.byte	$09
	.byte	$00
	.byte	$22
	.byte	$10
	.byte	$02
	.byte	$C0
	.byte	$10
	.byte	$23
	.byte	$09
	.byte	$00
	.byte	$0C
	.byte	$42
	.byte	$00
	.byte	$0F
	.byte	$20
	.byte	$12
	.byte	$20
	.byte	$0D
	.byte	$25
	.byte	$0D
	.byte	$40
	.byte	$0C
	.byte	$0B
	.byte	$0F
	.byte	$22
	.byte	$0A
	.byte	$01
	.byte	$20
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$80
	.byte	$02
	.byte	$10
	.byte	$02
	.byte	$0B
	.byte	$01
	.byte	$20
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$80
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$00
	.byte	$01
	.byte	$20
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$00
	.byte	$0F
	.byte	$22
	.byte	$80
	.byte	$01
	.byte	$19
	.byte	$00
	.byte	$09
	.byte	$23
	.byte	$09
	.byte	$00
	.byte	$0F
	.byte	$10
	.byte	$02
	.byte	$0B
	.byte	$1A
	.byte	$19
	.byte	$20
	.byte	$01
	.byte	$28
	.byte	$12
	.byte	$23
	.byte	$11
	.byte	$E8
	.byte	$08
_scr_1_0f:
	.byte	$21
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$81
	.byte	$04
	.byte	$01
	.byte	$17
	.byte	$61
	.byte	$04
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$04
	.byte	$09
	.byte	$26
	.byte	$01
	.byte	$06
	.byte	$80
	.byte	$06
	.byte	$00
	.byte	$04
	.byte	$20
	.byte	$05
	.byte	$09
	.byte	$25
	.byte	$01
	.byte	$E0
	.byte	$60
	.byte	$0D
	.byte	$20
	.byte	$01
	.byte	$E0
	.byte	$40
	.byte	$05
	.byte	$09
	.byte	$25
	.byte	$01
	.byte	$E0
	.byte	$60
	.byte	$0D
	.byte	$20
	.byte	$01
	.byte	$A0
	.byte	$15
	.byte	$20
	.byte	$15
	.byte	$20
	.byte	$09
	.byte	$2E
	.byte	$01
	.byte	$20
	.byte	$0F
	.byte	$08
	.byte	$0A
	.byte	$C0
	.byte	$0D
	.byte	$2A
	.byte	$06
	.byte	$20
	.byte	$02
	.byte	$17
	.byte	$02
	.byte	$80
	.byte	$25
	.byte	$17
	.byte	$02
	.byte	$0A
	.byte	$20
	.byte	$0F
	.byte	$02
	.byte	$13
	.byte	$15
	.byte	$2A
	.byte	$23
	.byte	$0F
	.byte	$22
	.byte	$13
	.byte	$22
	.byte	$0A
	.byte	$00
	.byte	$0E
	.byte	$02
	.byte	$13
	.byte	$42
	.byte	$03
	.byte	$1E
	.byte	$42
	.byte	$13
	.byte	$02
	.byte	$0E
	.byte	$02
	.byte	$08
	.byte	$0E
	.byte	$87
	.byte	$2D
	.byte	$87
	.byte	$0E
	.byte	$08
_scr_1_10:
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$4D
	.byte	$26
	.byte	$04
	.byte	$06
	.byte	$04
	.byte	$06
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$21
	.byte	$00
	.byte	$09
	.byte	$60
	.byte	$09
	.byte	$43
	.byte	$09
	.byte	$01
	.byte	$0B
	.byte	$14
	.byte	$21
	.byte	$00
	.byte	$0D
	.byte	$65
	.byte	$0D
	.byte	$03
	.byte	$1E
	.byte	$03
	.byte	$09
	.byte	$01
	.byte	$0B
	.byte	$14
	.byte	$21
	.byte	$00
	.byte	$0E
	.byte	$60
	.byte	$0D
	.byte	$45
	.byte	$09
	.byte	$01
	.byte	$02
	.byte	$14
	.byte	$21
	.byte	$00
	.byte	$0E
	.byte	$E0
	.byte	$09
	.byte	$01
	.byte	$0B
	.byte	$14
	.byte	$21
	.byte	$00
	.byte	$0E
	.byte	$00
	.byte	$0E
	.byte	$D0
	.byte	$01
	.byte	$0B
	.byte	$14
	.byte	$21
	.byte	$00
	.byte	$0E
	.byte	$80
	.byte	$0F
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$01
	.byte	$18
	.byte	$11
	.byte	$01
	.byte	$06
	.byte	$00
	.byte	$0E
	.byte	$A0
	.byte	$22
	.byte	$0A
	.byte	$01
	.byte	$0C
	.byte	$04
	.byte	$01
	.byte	$20
	.byte	$EE
	.byte	$0E
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$0A
	.byte	$01
	.byte	$20
	.byte	$09
	.byte	$03
	.byte	$09
	.byte	$40
	.byte	$0C
	.byte	$22
	.byte	$0A
	.byte	$01
	.byte	$0F
	.byte	$02
	.byte	$01
	.byte	$20
	.byte	$09
	.byte	$1E
	.byte	$09
	.byte	$C5
	.byte	$01
	.byte	$22
	.byte	$01
	.byte	$28
	.byte	$4D
	.byte	$C7
	.byte	$01
	.byte	$00
	.byte	$02
	.byte	$01
_scr_1_11:
	.byte	$01
	.byte	$40
	.byte	$EE
	.byte	$4E
	.byte	$21
	.byte	$40
	.byte	$0D
	.byte	$02
	.byte	$0B
	.byte	$E0
	.byte	$21
	.byte	$20
	.byte	$15
	.byte	$0B
	.byte	$E0
	.byte	$20
	.byte	$21
	.byte	$E0
	.byte	$A0
	.byte	$21
	.byte	$10
	.byte	$20
	.byte	$10
	.byte	$40
	.byte	$10
	.byte	$40
	.byte	$10
	.byte	$20
	.byte	$21
	.byte	$E5
	.byte	$45
	.byte	$0D
	.byte	$00
	.byte	$05
	.byte	$0D
	.byte	$01
	.byte	$E7
	.byte	$47
	.byte	$10
	.byte	$20
	.byte	$21
	.byte	$F0
	.byte	$70
	.byte	$20
	.byte	$21
	.byte	$20
	.byte	$16
	.byte	$E0
	.byte	$2D
	.byte	$00
	.byte	$21
	.byte	$20
	.byte	$16
	.byte	$E0
	.byte	$40
	.byte	$41
	.byte	$1D
	.byte	$0D
	.byte	$18
	.byte	$1B
	.byte	$22
	.byte	$0A
	.byte	$A0
	.byte	$21
	.byte	$1F
	.byte	$E5
	.byte	$45
	.byte	$0D
	.byte	$00
	.byte	$01
_scr_1_12:
	.byte	$01
	.byte	$40
	.byte	$41
	.byte	$06
	.byte	$E1
	.byte	$01
	.byte	$40
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$00
	.byte	$04
	.byte	$21
	.byte	$04
	.byte	$06
	.byte	$04
	.byte	$41
	.byte	$20
	.byte	$15
	.byte	$04
	.byte	$60
	.byte	$01
	.byte	$04
	.byte	$40
	.byte	$06
	.byte	$04
	.byte	$01
	.byte	$02
	.byte	$0B
	.byte	$A0
	.byte	$04
	.byte	$A0
	.byte	$01
	.byte	$0B
	.byte	$E0
	.byte	$00
	.byte	$0F
	.byte	$60
	.byte	$01
	.byte	$15
	.byte	$C0
	.byte	$0F
	.byte	$02
	.byte	$0B
	.byte	$20
	.byte	$15
	.byte	$08
	.byte	$01
	.byte	$C0
	.byte	$0F
	.byte	$02
	.byte	$0B
	.byte	$60
	.byte	$21
	.byte	$02
	.byte	$40
	.byte	$0F
	.byte	$22
	.byte	$0B
	.byte	$20
	.byte	$15
	.byte	$0F
	.byte	$00
	.byte	$0F
	.byte	$21
	.byte	$02
	.byte	$0A
	.byte	$15
	.byte	$20
	.byte	$0B
	.byte	$A0
	.byte	$22
	.byte	$21
	.byte	$0B
	.byte	$A0
	.byte	$15
	.byte	$40
	.byte	$0F
	.byte	$22
	.byte	$21
	.byte	$38
	.byte	$1B
	.byte	$19
	.byte	$C0
	.byte	$42
	.byte	$21
	.byte	$68
	.byte	$12
	.byte	$80
	.byte	$0F
	.byte	$42
	.byte	$01
_scr_1_13:
	.byte	$21
	.byte	$06
	.byte	$04
	.byte	$41
	.byte	$22
	.byte	$41
	.byte	$04
	.byte	$06
	.byte	$41
	.byte	$04
	.byte	$20
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$02
	.byte	$0B
	.byte	$17
	.byte	$04
	.byte	$06
	.byte	$23
	.byte	$04
	.byte	$06
	.byte	$04
	.byte	$60
	.byte	$06
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$09
	.byte	$A3
	.byte	$C0
	.byte	$0B
	.byte	$00
	.byte	$09
	.byte	$03
	.byte	$1A
	.byte	$23
	.byte	$1D
	.byte	$11
	.byte	$C0
	.byte	$15
	.byte	$00
	.byte	$0D
	.byte	$85
	.byte	$01
	.byte	$12
	.byte	$40
	.byte	$15
	.byte	$80
	.byte	$0C
	.byte	$42
	.byte	$00
	.byte	$21
	.byte	$0A
	.byte	$A0
	.byte	$0D
	.byte	$1B
	.byte	$00
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$00
	.byte	$21
	.byte	$02
	.byte	$C0
	.byte	$14
	.byte	$20
	.byte	$02
	.byte	$20
	.byte	$21
	.byte	$0A
	.byte	$0B
	.byte	$40
	.byte	$11
	.byte	$12
	.byte	$00
	.byte	$11
	.byte	$12
	.byte	$00
	.byte	$0C
	.byte	$0B
	.byte	$00
	.byte	$21
	.byte	$02
	.byte	$2A
	.byte	$00
	.byte	$11
	.byte	$21
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$12
	.byte	$20
	.byte	$02
	.byte	$21
	.byte	$1E
	.byte	$02
	.byte	$0B
	.byte	$1D
	.byte	$01
	.byte	$06
	.byte	$04
	.byte	$0F
	.byte	$02
	.byte	$04
	.byte	$01
	.byte	$1B
	.byte	$00
	.byte	$1A
	.byte	$21
	.byte	$68
	.byte	$01
	.byte	$0A
	.byte	$0F
	.byte	$42
	.byte	$01
	.byte	$48
	.byte	$01
_scr_1_14:
	.byte	$01
	.byte	$06
	.byte	$04
	.byte	$01
	.byte	$23
	.byte	$E1
	.byte	$21
	.byte	$04
	.byte	$23
	.byte	$01
	.byte	$23
	.byte	$C1
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$43
	.byte	$01
	.byte	$27
	.byte	$61
	.byte	$06
	.byte	$01
	.byte	$06
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$48
	.byte	$01
	.byte	$28
	.byte	$41
	.byte	$04
	.byte	$0F
	.byte	$06
	.byte	$60
	.byte	$01
	.byte	$06
	.byte	$21
	.byte	$24
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$0F
	.byte	$0B
	.byte	$80
	.byte	$01
	.byte	$00
	.byte	$06
	.byte	$01
	.byte	$2F
	.byte	$0A
	.byte	$04
	.byte	$0F
	.byte	$02
	.byte	$A0
	.byte	$01
	.byte	$20
	.byte	$04
	.byte	$0C
	.byte	$22
	.byte	$0A
	.byte	$02
	.byte	$0B
	.byte	$20
	.byte	$0D
	.byte	$45
	.byte	$01
	.byte	$60
	.byte	$0C
	.byte	$42
	.byte	$40
	.byte	$09
	.byte	$40
	.byte	$01
	.byte	$0F
	.byte	$60
	.byte	$22
	.byte	$0B
	.byte	$40
	.byte	$0D
	.byte	$05
	.byte	$20
	.byte	$01
	.byte	$22
	.byte	$40
	.byte	$0C
	.byte	$60
	.byte	$0F
	.byte	$09
	.byte	$40
	.byte	$01
	.byte	$42
	.byte	$80
	.byte	$0F
	.byte	$22
	.byte	$09
	.byte	$40
	.byte	$01
	.byte	$42
	.byte	$80
	.byte	$42
	.byte	$11
	.byte	$12
	.byte	$27
_scr_1_15:
	.byte	$81
	.byte	$04
	.byte	$06
	.byte	$0D
	.byte	$21
	.byte	$06
	.byte	$41
	.byte	$04
	.byte	$01
	.byte	$24
	.byte	$26
	.byte	$04
	.byte	$0A
	.byte	$00
	.byte	$09
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$06
	.byte	$04
	.byte	$01
	.byte	$00
	.byte	$04
	.byte	$40
	.byte	$0C
	.byte	$0A
	.byte	$02
	.byte	$00
	.byte	$09
	.byte	$40
	.byte	$2A
	.byte	$04
	.byte	$A0
	.byte	$02
	.byte	$0B
	.byte	$00
	.byte	$09
	.byte	$40
	.byte	$22
	.byte	$0A
	.byte	$A0
	.byte	$0C
	.byte	$20
	.byte	$09
	.byte	$40
	.byte	$0C
	.byte	$42
	.byte	$20
	.byte	$19
	.byte	$80
	.byte	$09
	.byte	$80
	.byte	$1A
	.byte	$0B
	.byte	$00
	.byte	$45
	.byte	$1C
	.byte	$25
	.byte	$1C
	.byte	$0D
	.byte	$1C
	.byte	$25
	.byte	$1C
	.byte	$65
	.byte	$E0
	.byte	$20
	.byte	$0C
	.byte	$42
	.byte	$0A
	.byte	$E0
	.byte	$60
	.byte	$22
	.byte	$0C
	.byte	$02
	.byte	$0A
	.byte	$E0
	.byte	$60
	.byte	$02
	.byte	$E0
	.byte	$40
	.byte	$19
	.byte	$40
	.byte	$0C
	.byte	$20
	.byte	$11
	.byte	$27
	.byte	$0E
	.byte	$87
	.byte	$0E
	.byte	$A7
	.byte	$01
_scr_1_16:
	.byte	$41
	.byte	$06
	.byte	$04
	.byte	$21
	.byte	$04
	.byte	$01
	.byte	$06
	.byte	$41
	.byte	$00
	.byte	$0B
	.byte	$24
	.byte	$01
	.byte	$04
	.byte	$20
	.byte	$26
	.byte	$0A
	.byte	$04
	.byte	$0A
	.byte	$24
	.byte	$01
	.byte	$12
	.byte	$40
	.byte	$04
	.byte	$60
	.byte	$0C
	.byte	$02
	.byte	$0A
	.byte	$02
	.byte	$0A
	.byte	$0B
	.byte	$26
	.byte	$08
	.byte	$05
	.byte	$C0
	.byte	$2C
	.byte	$22
	.byte	$40
	.byte	$01
	.byte	$E0
	.byte	$20
	.byte	$0C
	.byte	$02
	.byte	$40
	.byte	$06
	.byte	$E0
	.byte	$40
	.byte	$0B
	.byte	$80
	.byte	$45
	.byte	$1C
	.byte	$25
	.byte	$1C
	.byte	$25
	.byte	$1C
	.byte	$25
	.byte	$1C
	.byte	$45
	.byte	$A0
	.byte	$09
	.byte	$83
	.byte	$09
	.byte	$E0
	.byte	$00
	.byte	$09
	.byte	$83
	.byte	$09
	.byte	$E0
	.byte	$00
	.byte	$0D
	.byte	$85
	.byte	$2D
	.byte	$20
	.byte	$12
	.byte	$E0
	.byte	$C0
	.byte	$01
	.byte	$E7
	.byte	$C7
_scr_1_17:
	.byte	$04
	.byte	$06
	.byte	$42
	.byte	$0A
	.byte	$60
	.byte	$0C
	.byte	$02
	.byte	$0A
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$0C
	.byte	$22
	.byte	$0B
	.byte	$00
	.byte	$0D
	.byte	$25
	.byte	$0D
	.byte	$00
	.byte	$0C
	.byte	$02
	.byte	$0A
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$0D
	.byte	$0C
	.byte	$02
	.byte	$20
	.byte	$09
	.byte	$20
	.byte	$09
	.byte	$0C
	.byte	$42
	.byte	$0A
	.byte	$01
	.byte	$40
	.byte	$0B
	.byte	$00
	.byte	$11
	.byte	$28
	.byte	$12
	.byte	$09
	.byte	$00
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$00
	.byte	$01
	.byte	$60
	.byte	$11
	.byte	$61
	.byte	$09
	.byte	$20
	.byte	$0B
	.byte	$00
	.byte	$11
	.byte	$01
	.byte	$60
	.byte	$81
	.byte	$09
	.byte	$40
	.byte	$11
	.byte	$21
	.byte	$25
	.byte	$0D
	.byte	$00
	.byte	$17
	.byte	$21
	.byte	$17
	.byte	$04
	.byte	$09
	.byte	$20
	.byte	$11
	.byte	$41
	.byte	$20
	.byte	$09
	.byte	$00
	.byte	$13
	.byte	$01
	.byte	$17
	.byte	$13
	.byte	$00
	.byte	$09
	.byte	$20
	.byte	$61
	.byte	$20
	.byte	$0E
	.byte	$00
	.byte	$13
	.byte	$17
	.byte	$33
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$11
	.byte	$61
	.byte	$00
	.byte	$1A
	.byte	$20
	.byte	$73
	.byte	$00
	.byte	$09
	.byte	$11
	.byte	$81
	.byte	$00
	.byte	$0E
	.byte	$19
	.byte	$00
	.byte	$73
	.byte	$00
	.byte	$09
	.byte	$A1
	.byte	$07
	.byte	$10
	.byte	$0E
	.byte	$C7
	.byte	$A1
_scr_1_18:
	.byte	$A1
	.byte	$80
	.byte	$0C
	.byte	$42
	.byte	$64
	.byte	$06
	.byte	$04
	.byte	$01
	.byte	$C0
	.byte	$22
	.byte	$0B
	.byte	$2A
	.byte	$0F
	.byte	$02
	.byte	$0A
	.byte	$06
	.byte	$08
	.byte	$12
	.byte	$80
	.byte	$0C
	.byte	$02
	.byte	$00
	.byte	$02
	.byte	$0F
	.byte	$42
	.byte	$0C
	.byte	$06
	.byte	$01
	.byte	$12
	.byte	$80
	.byte	$0C
	.byte	$00
	.byte	$12
	.byte	$22
	.byte	$0C
	.byte	$02
	.byte	$00
	.byte	$0A
	.byte	$04
	.byte	$01
	.byte	$12
	.byte	$20
	.byte	$19
	.byte	$40
	.byte	$01
	.byte	$22
	.byte	$00
	.byte	$0B
	.byte	$00
	.byte	$0C
	.byte	$0A
	.byte	$06
	.byte	$01
	.byte	$A8
	.byte	$01
	.byte	$0B
	.byte	$02
	.byte	$60
	.byte	$02
	.byte	$0A
	.byte	$24
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$01
	.byte	$00
	.byte	$0B
	.byte	$60
	.byte	$0C
	.byte	$40
	.byte	$04
	.byte	$20
	.byte	$06
	.byte	$00
	.byte	$01
	.byte	$E0
	.byte	$C0
	.byte	$01
	.byte	$80
	.byte	$0D
	.byte	$E5
	.byte	$05
	.byte	$01
	.byte	$80
	.byte	$09
	.byte	$E0
	.byte	$00
	.byte	$21
	.byte	$08
	.byte	$10
	.byte	$E7
	.byte	$67
_scr_1_19:
	.byte	$04
	.byte	$06
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$04
	.byte	$0A
	.byte	$00
	.byte	$42
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$04
	.byte	$20
	.byte	$04
	.byte	$0A
	.byte	$22
	.byte	$0B
	.byte	$00
	.byte	$42
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$22
	.byte	$40
	.byte	$0C
	.byte	$22
	.byte	$20
	.byte	$0C
	.byte	$02
	.byte	$0B
	.byte	$40
	.byte	$0C
	.byte	$02
	.byte	$60
	.byte	$02
	.byte	$0B
	.byte	$40
	.byte	$02
	.byte	$19
	.byte	$60
	.byte	$02
	.byte	$60
	.byte	$02
	.byte	$00
	.byte	$0E
	.byte	$20
	.byte	$02
	.byte	$0E
	.byte	$0A
	.byte	$60
	.byte	$28
	.byte	$12
	.byte	$00
	.byte	$0C
	.byte	$0A
	.byte	$40
	.byte	$0C
	.byte	$0F
	.byte	$0B
	.byte	$00
	.byte	$11
	.byte	$28
	.byte	$06
	.byte	$01
	.byte	$06
	.byte	$C0
	.byte	$02
	.byte	$20
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$06
	.byte	$E0
	.byte	$0C
	.byte	$40
	.byte	$04
	.byte	$0F
	.byte	$40
	.byte	$1A
	.byte	$E0
	.byte	$20
	.byte	$0F
	.byte	$02
	.byte	$85
	.byte	$0D
	.byte	$80
	.byte	$0D
	.byte	$65
	.byte	$80
	.byte	$09
	.byte	$80
	.byte	$09
	.byte	$20
	.byte	$0C
	.byte	$02
	.byte	$E7
	.byte	$E7
_scr_1_1a:
	.byte	$06
	.byte	$02
	.byte	$E0
	.byte	$20
	.byte	$11
	.byte	$24
	.byte	$01
	.byte	$02
	.byte	$80
	.byte	$0F
	.byte	$80
	.byte	$04
	.byte	$20
	.byte	$06
	.byte	$0C
	.byte	$80
	.byte	$02
	.byte	$0A
	.byte	$20
	.byte	$11
	.byte	$12
	.byte	$C0
	.byte	$1A
	.byte	$00
	.byte	$0F
	.byte	$22
	.byte	$00
	.byte	$11
	.byte	$04
	.byte	$06
	.byte	$60
	.byte	$19
	.byte	$20
	.byte	$10
	.byte	$00
	.byte	$42
	.byte	$00
	.byte	$06
	.byte	$A0
	.byte	$12
	.byte	$20
	.byte	$0D
	.byte	$12
	.byte	$0C
	.byte	$22
	.byte	$0A
	.byte	$60
	.byte	$10
	.byte	$20
	.byte	$06
	.byte	$15
	.byte	$00
	.byte	$26
	.byte	$12
	.byte	$0C
	.byte	$22
	.byte	$60
	.byte	$11
	.byte	$28
	.byte	$22
	.byte	$0A
	.byte	$20
	.byte	$06
	.byte	$12
	.byte	$22
	.byte	$40
	.byte	$0E
	.byte	$01
	.byte	$06
	.byte	$04
	.byte	$02
	.byte	$0B
	.byte	$10
	.byte	$40
	.byte	$06
	.byte	$22
	.byte	$20
	.byte	$11
	.byte	$17
	.byte	$04
	.byte	$0A
	.byte	$00
	.byte	$25
	.byte	$0D
	.byte	$40
	.byte	$0C
	.byte	$22
	.byte	$00
	.byte	$11
	.byte	$06
	.byte	$13
	.byte	$40
	.byte	$02
	.byte	$0B
	.byte	$09
	.byte	$60
	.byte	$02
	.byte	$0B
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$13
	.byte	$00
	.byte	$11
	.byte	$08
	.byte	$67
	.byte	$10
	.byte	$27
	.byte	$10
	.byte	$A7
	.byte	$21
_scr_1_1b:
	.byte	$21
	.byte	$04
	.byte	$06
	.byte	$C1
	.byte	$04
	.byte	$01
	.byte	$06
	.byte	$21
	.byte	$04
	.byte	$06
	.byte	$0F
	.byte	$0A
	.byte	$06
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$04
	.byte	$06
	.byte	$0A
	.byte	$06
	.byte	$0A
	.byte	$06
	.byte	$01
	.byte	$0B
	.byte	$0A
	.byte	$02
	.byte	$0A
	.byte	$20
	.byte	$04
	.byte	$40
	.byte	$0C
	.byte	$02
	.byte	$0A
	.byte	$02
	.byte	$0A
	.byte	$01
	.byte	$00
	.byte	$2C
	.byte	$0B
	.byte	$C0
	.byte	$0C
	.byte	$02
	.byte	$2B
	.byte	$01
	.byte	$20
	.byte	$0D
	.byte	$05
	.byte	$1F
	.byte	$A5
	.byte	$1F
	.byte	$05
	.byte	$0D
	.byte	$05
	.byte	$01
	.byte	$20
	.byte	$09
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$0C
	.byte	$42
	.byte	$0B
	.byte	$20
	.byte	$09
	.byte	$19
	.byte	$01
	.byte	$12
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$16
	.byte	$20
	.byte	$0B
	.byte	$02
	.byte	$0B
	.byte	$40
	.byte	$11
	.byte	$08
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$10
	.byte	$00
	.byte	$16
	.byte	$40
	.byte	$0C
	.byte	$60
	.byte	$26
	.byte	$04
	.byte	$20
	.byte	$09
	.byte	$00
	.byte	$16
	.byte	$E0
	.byte	$40
	.byte	$19
	.byte	$00
	.byte	$29
	.byte	$16
	.byte	$7D
	.byte	$1B
	.byte	$20
	.byte	$1A
	.byte	$19
	.byte	$20
	.byte	$E8
	.byte	$E8
	.byte	$E1
	.byte	$E1
_scr_1_1c:
	.byte	$81
	.byte	$04
	.byte	$A1
	.byte	$04
	.byte	$C1
	.byte	$04
	.byte	$00
	.byte	$04
	.byte	$41
	.byte	$04
	.byte	$01
	.byte	$0B
	.byte	$04
	.byte	$81
	.byte	$04
	.byte	$40
	.byte	$06
	.byte	$04
	.byte	$01
	.byte	$00
	.byte	$04
	.byte	$20
	.byte	$61
	.byte	$04
	.byte	$20
	.byte	$23
	.byte	$20
	.byte	$04
	.byte	$60
	.byte	$04
	.byte	$41
	.byte	$20
	.byte	$09
	.byte	$63
	.byte	$20
	.byte	$03
	.byte	$09
	.byte	$20
	.byte	$41
	.byte	$00
	.byte	$03
	.byte	$09
	.byte	$C3
	.byte	$09
	.byte	$20
	.byte	$21
	.byte	$04
	.byte	$00
	.byte	$03
	.byte	$09
	.byte	$0E
	.byte	$00
	.byte	$03
	.byte	$0E
	.byte	$00
	.byte	$23
	.byte	$09
	.byte	$20
	.byte	$01
	.byte	$06
	.byte	$20
	.byte	$03
	.byte	$09
	.byte	$20
	.byte	$03
	.byte	$20
	.byte	$23
	.byte	$09
	.byte	$20
	.byte	$01
	.byte	$00
	.byte	$23
	.byte	$0E
	.byte	$00
	.byte	$A3
	.byte	$0E
	.byte	$20
	.byte	$04
	.byte	$06
	.byte	$00
	.byte	$23
	.byte	$20
	.byte	$A3
	.byte	$80
	.byte	$08
	.byte	$12
	.byte	$23
	.byte	$09
	.byte	$C3
	.byte	$50
	.byte	$00
	.byte	$21
	.byte	$E7
	.byte	$27
	.byte	$30
	.byte	$2E
_scr_1_1d:
	.byte	$21
	.byte	$06
	.byte	$24
	.byte	$26
	.byte	$04
	.byte	$46
	.byte	$04
	.byte	$26
	.byte	$41
	.byte	$06
	.byte	$E0
	.byte	$60
	.byte	$41
	.byte	$60
	.byte	$A3
	.byte	$40
	.byte	$06
	.byte	$21
	.byte	$00
	.byte	$0E
	.byte	$00
	.byte	$09
	.byte	$C3
	.byte	$09
	.byte	$10
	.byte	$00
	.byte	$21
	.byte	$40
	.byte	$09
	.byte	$C3
	.byte	$09
	.byte	$20
	.byte	$21
	.byte	$00
	.byte	$23
	.byte	$09
	.byte	$C3
	.byte	$09
	.byte	$23
	.byte	$21
	.byte	$00
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$C3
	.byte	$0E
	.byte	$00
	.byte	$03
	.byte	$21
	.byte	$00
	.byte	$03
	.byte	$20
	.byte	$C3
	.byte	$20
	.byte	$03
	.byte	$01
	.byte	$06
	.byte	$00
	.byte	$23
	.byte	$09
	.byte	$C3
	.byte	$09
	.byte	$23
	.byte	$01
	.byte	$20
	.byte	$23
	.byte	$0E
	.byte	$00
	.byte	$83
	.byte	$10
	.byte	$00
	.byte	$23
	.byte	$01
	.byte	$20
	.byte	$23
	.byte	$20
	.byte	$03
	.byte	$11
	.byte	$12
	.byte	$23
	.byte	$20
	.byte	$23
	.byte	$01
	.byte	$0E
	.byte	$10
	.byte	$E7
	.byte	$67
	.byte	$10
	.byte	$0E
_map_1:
	.addr	_scr_1_00
	.addr	_scr_1_01
	.addr	_scr_1_02
	.addr	_scr_1_03
	.addr	_scr_1_04
	.addr	_scr_1_05
	.addr	_scr_1_06
	.addr	_scr_1_07
	.addr	_scr_1_08
	.addr	_scr_1_09
	.addr	_scr_1_0a
	.addr	_scr_1_0b
	.addr	_scr_1_0c
	.addr	_scr_1_0d
	.addr	_scr_1_0e
	.addr	_scr_1_0f
	.addr	_scr_1_10
	.addr	_scr_1_11
	.addr	_scr_1_12
	.addr	_scr_1_13
	.addr	_scr_1_14
	.addr	_scr_1_15
	.addr	_scr_1_16
	.addr	_scr_1_17
	.addr	_scr_1_18
	.addr	_scr_1_19
	.addr	_scr_1_1a
	.addr	_scr_1_1b
	.addr	_scr_1_1c
	.addr	_scr_1_1d
_map_1_decos_00:
	.byte	$B6
	.byte	$18
	.byte	$B7
	.byte	$19
	.byte	$39
	.byte	$03
	.byte	$1A
	.byte	$28
	.byte	$29
	.byte	$A4
	.byte	$2A
	.byte	$A0
	.byte	$BA
	.byte	$00
_map_1_decos_02:
	.byte	$A6
	.byte	$5E
	.byte	$A4
	.byte	$64
	.byte	$A1
	.byte	$67
	.byte	$A5
	.byte	$6A
	.byte	$00
_map_1_decos_03:
	.byte	$AB
	.byte	$A8
	.byte	$00
_map_1_decos_04:
	.byte	$AB
	.byte	$A7
	.byte	$00
_map_1_decos_05:
	.byte	$A0
	.byte	$6E
	.byte	$00
_map_1_decos_06:
	.byte	$AB
	.byte	$52
	.byte	$B6
	.byte	$71
	.byte	$39
	.byte	$03
	.byte	$72
	.byte	$73
	.byte	$81
	.byte	$A1
	.byte	$82
	.byte	$A4
	.byte	$83
	.byte	$00
_map_1_decos_07:
	.byte	$39
	.byte	$04
	.byte	$11
	.byte	$12
	.byte	$21
	.byte	$23
	.byte	$B8
	.byte	$13
	.byte	$A1
	.byte	$22
	.byte	$AB
	.byte	$AB
	.byte	$00
_map_1_decos_08:
	.byte	$AB
	.byte	$96
	.byte	$00
_map_1_decos_09:
	.byte	$A2
	.byte	$51
	.byte	$A3
	.byte	$61
	.byte	$AB
	.byte	$6C
	.byte	$A1
	.byte	$76
	.byte	$00
_map_1_decos_0a:
	.byte	$A2
	.byte	$21
	.byte	$A3
	.byte	$31
	.byte	$00
_map_1_decos_11:
	.byte	$20
	.byte	$03
	.byte	$52
	.byte	$58
	.byte	$8D
	.byte	$AA
	.byte	$A1
	.byte	$00
_map_1_decos_16:
	.byte	$A0
	.byte	$9D
	.byte	$00
_map_1_decos_17:
	.byte	$39
	.byte	$04
	.byte	$9C
	.byte	$9E
	.byte	$AC
	.byte	$AE
	.byte	$B7
	.byte	$9D
	.byte	$A1
	.byte	$AD
	.byte	$00
_map_1_decos_18:
	.byte	$20
	.byte	$02
	.byte	$9A
	.byte	$9D
	.byte	$AB
	.byte	$A3
	.byte	$BB
	.byte	$B1
	.byte	$00
_map_1_decos_1b:
	.byte	$2B
	.byte	$02
	.byte	$32
	.byte	$93
	.byte	$A6
	.byte	$3E
	.byte	$A2
	.byte	$8F
	.byte	$A7
	.byte	$96
	.byte	$A8
	.byte	$97
	.byte	$A9
	.byte	$98
	.byte	$A3
	.byte	$9F
	.byte	$00
_map_1_decos_1c:
	.byte	$BB
	.byte	$7E
	.byte	$A2
	.byte	$9E
	.byte	$BA
	.byte	$AD
	.byte	$A3
	.byte	$AE
	.byte	$00
_map_1_decos:
	.addr	_map_1_decos_00
	.word	$0000
	.addr	_map_1_decos_02
	.addr	_map_1_decos_03
	.addr	_map_1_decos_04
	.addr	_map_1_decos_05
	.addr	_map_1_decos_06
	.addr	_map_1_decos_07
	.addr	_map_1_decos_08
	.addr	_map_1_decos_09
	.addr	_map_1_decos_0a
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_map_1_decos_11
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_map_1_decos_16
	.addr	_map_1_decos_17
	.addr	_map_1_decos_18
	.word	$0000
	.word	$0000
	.addr	_map_1_decos_1b
	.addr	_map_1_decos_1c
	.word	$0000
_enems_2_01:
	.byte	$11
	.byte	$59
	.byte	$51
	.byte	$01
	.byte	$00
_enems_2_06:
	.byte	$11
	.byte	$71
	.byte	$8E
	.byte	$01
	.byte	$00
_enems_2_09:
	.byte	$33
	.byte	$39
	.byte	$49
	.byte	$00
	.byte	$00
_enems_2_0b:
	.byte	$12
	.byte	$69
	.byte	$61
	.byte	$01
	.byte	$00
_enems_2_0c:
	.byte	$B0
	.byte	$B1
	.byte	$BE
	.byte	$00
	.byte	$B0
	.byte	$BE
	.byte	$B1
	.byte	$00
	.byte	$00
_enems_2_0d:
	.byte	$B0
	.byte	$B1
	.byte	$BD
	.byte	$00
	.byte	$B0
	.byte	$BD
	.byte	$B1
	.byte	$00
	.byte	$00
_enems_2_0e:
	.byte	$30
	.byte	$8C
	.byte	$7C
	.byte	$00
	.byte	$00
_enems_2_0f:
	.byte	$11
	.byte	$7A
	.byte	$8E
	.byte	$01
	.byte	$00
_enems_2_10:
	.byte	$12
	.byte	$6B
	.byte	$64
	.byte	$01
	.byte	$11
	.byte	$91
	.byte	$BD
	.byte	$02
	.byte	$00
_enems_2_11:
	.byte	$B0
	.byte	$B1
	.byte	$BD
	.byte	$00
	.byte	$B0
	.byte	$BD
	.byte	$B1
	.byte	$00
	.byte	$00
_enems_2_12:
	.byte	$11
	.byte	$53
	.byte	$9D
	.byte	$01
	.byte	$00
_enems_2_13:
	.byte	$23
	.byte	$73
	.byte	$7C
	.byte	$01
	.byte	$B0
	.byte	$C2
	.byte	$CC
	.byte	$00
	.byte	$00
_enems_2_14:
	.byte	$11
	.byte	$5E
	.byte	$76
	.byte	$01
	.byte	$11
	.byte	$4B
	.byte	$AD
	.byte	$01
	.byte	$00
_enems_2_15:
	.byte	$B2
	.byte	$4C
	.byte	$4A
	.byte	$00
	.byte	$B2
	.byte	$33
	.byte	$39
	.byte	$00
	.byte	$00
_enems_2_16:
	.byte	$B0
	.byte	$CB
	.byte	$C3
	.byte	$00
	.byte	$00
_enems_2_17:
	.byte	$B0
	.byte	$56
	.byte	$5A
	.byte	$00
	.byte	$B2
	.byte	$1C
	.byte	$18
	.byte	$00
	.byte	$00
_enems_2_18:
	.byte	$23
	.byte	$BA
	.byte	$B3
	.byte	$01
	.byte	$00
_enems_2_1b:
	.byte	$30
	.byte	$33
	.byte	$34
	.byte	$00
	.byte	$30
	.byte	$73
	.byte	$74
	.byte	$00
	.byte	$23
	.byte	$B8
	.byte	$48
	.byte	$01
_enems_2:
	.word	$0000
	.addr	_enems_2_01
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_enems_2_06
	.word	$0000
	.word	$0000
	.addr	_enems_2_09
	.word	$0000
	.addr	_enems_2_0b
	.addr	_enems_2_0c
	.addr	_enems_2_0d
	.addr	_enems_2_0e
	.addr	_enems_2_0f
	.addr	_enems_2_10
	.addr	_enems_2_11
	.addr	_enems_2_12
	.addr	_enems_2_13
	.addr	_enems_2_14
	.addr	_enems_2_15
	.addr	_enems_2_16
	.addr	_enems_2_17
	.addr	_enems_2_18
	.word	$0000
	.word	$0000
	.addr	_enems_2_1b
	.word	$0000
	.word	$0000
_scr_2_01:
	.byte	$EB
	.byte	$AB
	.byte	$0D
	.byte	$10
	.byte	$12
	.byte	$EB
	.byte	$6B
	.byte	$0D
	.byte	$00
	.byte	$34
	.byte	$0E
	.byte	$EB
	.byte	$4B
	.byte	$20
	.byte	$34
	.byte	$00
	.byte	$0E
	.byte	$EB
	.byte	$0B
	.byte	$0D
	.byte	$20
	.byte	$34
	.byte	$20
	.byte	$0E
	.byte	$AB
	.byte	$0D
	.byte	$40
	.byte	$10
	.byte	$34
	.byte	$20
	.byte	$0E
	.byte	$00
	.byte	$1B
	.byte	$2B
	.byte	$0D
	.byte	$60
	.byte	$10
	.byte	$54
	.byte	$7E
	.byte	$1B
	.byte	$00
	.byte	$0E
	.byte	$60
	.byte	$1D
	.byte	$74
	.byte	$7E
	.byte	$1B
	.byte	$80
	.byte	$1D
	.byte	$10
	.byte	$74
	.byte	$3F
	.byte	$20
	.byte	$1B
	.byte	$60
	.byte	$10
	.byte	$B4
	.byte	$12
	.byte	$7B
	.byte	$60
	.byte	$F4
	.byte	$7B
	.byte	$60
	.byte	$F4
	.byte	$54
	.byte	$12
	.byte	$60
	.byte	$B4
_scr_2_06:
	.byte	$B4
	.byte	$60
	.byte	$17
	.byte	$F4
	.byte	$34
	.byte	$16
	.byte	$80
	.byte	$F4
	.byte	$14
	.byte	$17
	.byte	$40
	.byte	$10
	.byte	$31
	.byte	$17
	.byte	$34
	.byte	$16
	.byte	$54
	.byte	$17
	.byte	$16
	.byte	$20
	.byte	$10
	.byte	$11
	.byte	$15
	.byte	$16
	.byte	$17
	.byte	$00
	.byte	$16
	.byte	$17
	.byte	$00
	.byte	$34
	.byte	$16
	.byte	$60
	.byte	$16
	.byte	$15
	.byte	$C0
	.byte	$34
	.byte	$E0
	.byte	$A0
	.byte	$34
	.byte	$E0
	.byte	$A0
	.byte	$34
	.byte	$E0
	.byte	$A0
	.byte	$34
	.byte	$40
	.byte	$0F
	.byte	$0C
	.byte	$00
	.byte	$0F
	.byte	$20
	.byte	$0C
	.byte	$60
	.byte	$34
	.byte	$1F
	.byte	$0F
	.byte	$8B
	.byte	$0C
	.byte	$0F
	.byte	$4B
	.byte	$0C
	.byte	$00
	.byte	$34
	.byte	$12
	.byte	$EB
	.byte	$2B
	.byte	$10
	.byte	$12
	.byte	$00
	.byte	$54
	.byte	$E6
	.byte	$26
	.byte	$34
	.byte	$00
	.byte	$14
_scr_2_09:
	.byte	$74
	.byte	$36
	.byte	$17
	.byte	$14
	.byte	$37
	.byte	$36
	.byte	$D4
	.byte	$16
	.byte	$40
	.byte	$17
	.byte	$60
	.byte	$17
	.byte	$94
	.byte	$17
	.byte	$E0
	.byte	$20
	.byte	$17
	.byte	$54
	.byte	$16
	.byte	$E0
	.byte	$60
	.byte	$17
	.byte	$34
	.byte	$E0
	.byte	$A0
	.byte	$34
	.byte	$E0
	.byte	$A0
	.byte	$34
	.byte	$E0
	.byte	$40
	.byte	$1D
	.byte	$3E
	.byte	$34
	.byte	$E0
	.byte	$1D
	.byte	$3E
	.byte	$1B
	.byte	$20
	.byte	$34
	.byte	$60
	.byte	$1B
	.byte	$E8
	.byte	$08
	.byte	$34
	.byte	$E0
	.byte	$A0
	.byte	$34
	.byte	$12
	.byte	$60
	.byte	$0F
	.byte	$2B
	.byte	$0C
	.byte	$60
	.byte	$10
	.byte	$54
	.byte	$12
	.byte	$48
	.byte	$1B
	.byte	$2B
	.byte	$1B
	.byte	$48
	.byte	$10
	.byte	$34
_scr_2_0a:
	.byte	$F4
	.byte	$34
	.byte	$17
	.byte	$34
	.byte	$17
	.byte	$34
	.byte	$17
	.byte	$54
	.byte	$16
	.byte	$74
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$16
	.byte	$74
	.byte	$16
	.byte	$17
	.byte	$40
	.byte	$17
	.byte	$20
	.byte	$16
	.byte	$14
	.byte	$17
	.byte	$74
	.byte	$17
	.byte	$00
	.byte	$16
	.byte	$A0
	.byte	$1B
	.byte	$74
	.byte	$17
	.byte	$16
	.byte	$E0
	.byte	$20
	.byte	$54
	.byte	$16
	.byte	$C0
	.byte	$0F
	.byte	$6B
	.byte	$34
	.byte	$17
	.byte	$60
	.byte	$0F
	.byte	$00
	.byte	$0F
	.byte	$8B
	.byte	$1B
	.byte	$34
	.byte	$A0
	.byte	$8B
	.byte	$0D
	.byte	$00
	.byte	$1B
	.byte	$34
	.byte	$72
	.byte	$40
	.byte	$0E
	.byte	$0B
	.byte	$0D
	.byte	$40
	.byte	$1B
	.byte	$14
	.byte	$17
	.byte	$76
	.byte	$7E
	.byte	$1F
	.byte	$60
	.byte	$1B
	.byte	$54
	.byte	$11
	.byte	$32
	.byte	$60
	.byte	$03
	.byte	$40
	.byte	$06
	.byte	$1B
	.byte	$74
	.byte	$16
	.byte	$F1
	.byte	$51
_scr_2_0b:
	.byte	$16
	.byte	$F4
	.byte	$94
	.byte	$00
	.byte	$14
	.byte	$15
	.byte	$36
	.byte	$74
	.byte	$17
	.byte	$54
	.byte	$36
	.byte	$15
	.byte	$00
	.byte	$36
	.byte	$00
	.byte	$16
	.byte	$17
	.byte	$16
	.byte	$37
	.byte	$00
	.byte	$17
	.byte	$16
	.byte	$17
	.byte	$20
	.byte	$01
	.byte	$20
	.byte	$1B
	.byte	$20
	.byte	$37
	.byte	$60
	.byte	$0A
	.byte	$40
	.byte	$01
	.byte	$60
	.byte	$0B
	.byte	$A0
	.byte	$0A
	.byte	$40
	.byte	$01
	.byte	$20
	.byte	$4B
	.byte	$0C
	.byte	$80
	.byte	$0A
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$10
	.byte	$1B
	.byte	$E5
	.byte	$05
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$1B
	.byte	$E0
	.byte	$60
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$1B
	.byte	$00
	.byte	$4B
	.byte	$60
	.byte	$0A
	.byte	$40
	.byte	$01
	.byte	$00
	.byte	$14
	.byte	$1B
	.byte	$00
	.byte	$4B
	.byte	$0C
	.byte	$40
	.byte	$0A
	.byte	$80
	.byte	$14
	.byte	$1B
	.byte	$20
	.byte	$4B
	.byte	$40
	.byte	$0A
	.byte	$40
	.byte	$1B
	.byte	$1E
	.byte	$14
	.byte	$31
	.byte	$12
	.byte	$FB
	.byte	$3B
	.byte	$10
	.byte	$31
_scr_2_0c:
	.byte	$14
	.byte	$16
	.byte	$17
	.byte	$34
	.byte	$17
	.byte	$34
	.byte	$16
	.byte	$34
	.byte	$16
	.byte	$34
	.byte	$16
	.byte	$14
	.byte	$16
	.byte	$20
	.byte	$16
	.byte	$14
	.byte	$00
	.byte	$14
	.byte	$17
	.byte	$00
	.byte	$14
	.byte	$16
	.byte	$00
	.byte	$36
	.byte	$00
	.byte	$16
	.byte	$60
	.byte	$17
	.byte	$00
	.byte	$16
	.byte	$20
	.byte	$17
	.byte	$E0
	.byte	$09
	.byte	$E0
	.byte	$C0
	.byte	$49
	.byte	$0A
	.byte	$20
	.byte	$09
	.byte	$60
	.byte	$09
	.byte	$20
	.byte	$12
	.byte	$00
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$49
	.byte	$04
	.byte	$14
	.byte	$05
	.byte	$00
	.byte	$29
	.byte	$0A
	.byte	$69
	.byte	$25
	.byte	$49
	.byte	$34
	.byte	$20
	.byte	$29
	.byte	$04
	.byte	$00
	.byte	$49
	.byte	$20
	.byte	$49
	.byte	$34
	.byte	$69
	.byte	$20
	.byte	$49
	.byte	$0A
	.byte	$69
	.byte	$34
	.byte	$69
	.byte	$0A
	.byte	$69
	.byte	$0A
	.byte	$69
	.byte	$34
	.byte	$E8
	.byte	$A8
	.byte	$14
	.byte	$F1
	.byte	$F1
_scr_2_0d:
	.byte	$34
	.byte	$16
	.byte	$B4
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$36
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$36
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$20
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$20
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$E0
	.byte	$17
	.byte	$40
	.byte	$09
	.byte	$A0
	.byte	$09
	.byte	$C0
	.byte	$49
	.byte	$60
	.byte	$89
	.byte	$20
	.byte	$05
	.byte	$00
	.byte	$E9
	.byte	$A9
	.byte	$14
	.byte	$00
	.byte	$29
	.byte	$05
	.byte	$00
	.byte	$29
	.byte	$04
	.byte	$00
	.byte	$29
	.byte	$05
	.byte	$00
	.byte	$29
	.byte	$14
	.byte	$05
	.byte	$00
	.byte	$09
	.byte	$20
	.byte	$29
	.byte	$20
	.byte	$29
	.byte	$20
	.byte	$09
	.byte	$10
	.byte	$14
	.byte	$20
	.byte	$09
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$29
	.byte	$34
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$29
	.byte	$34
	.byte	$E6
	.byte	$A6
	.byte	$14
	.byte	$F1
	.byte	$F1
_scr_2_0e:
	.byte	$54
	.byte	$7B
	.byte	$20
	.byte	$7B
	.byte	$16
	.byte	$74
	.byte	$16
	.byte	$E0
	.byte	$40
	.byte	$16
	.byte	$14
	.byte	$17
	.byte	$16
	.byte	$E0
	.byte	$80
	.byte	$14
	.byte	$2B
	.byte	$0C
	.byte	$E0
	.byte	$60
	.byte	$14
	.byte	$4B
	.byte	$E0
	.byte	$60
	.byte	$14
	.byte	$4B
	.byte	$40
	.byte	$7B
	.byte	$9E
	.byte	$14
	.byte	$2B
	.byte	$0D
	.byte	$40
	.byte	$7B
	.byte	$8B
	.byte	$14
	.byte	$12
	.byte	$1D
	.byte	$7E
	.byte	$9B
	.byte	$6B
	.byte	$34
	.byte	$02
	.byte	$1D
	.byte	$3E
	.byte	$BB
	.byte	$5E
	.byte	$1F
	.byte	$34
	.byte	$22
	.byte	$20
	.byte	$BB
	.byte	$3E
	.byte	$1F
	.byte	$03
	.byte	$34
	.byte	$22
	.byte	$20
	.byte	$DB
	.byte	$0B
	.byte	$23
	.byte	$14
	.byte	$31
	.byte	$3C
	.byte	$F1
	.byte	$3C
	.byte	$31
_scr_2_10:
	.byte	$14
	.byte	$36
	.byte	$EB
	.byte	$2B
	.byte	$56
	.byte	$14
	.byte	$20
	.byte	$EB
	.byte	$2B
	.byte	$40
	.byte	$16
	.byte	$20
	.byte	$0E
	.byte	$EB
	.byte	$0D
	.byte	$40
	.byte	$1B
	.byte	$80
	.byte	$0E
	.byte	$2B
	.byte	$0D
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$80
	.byte	$10
	.byte	$1B
	.byte	$08
	.byte	$20
	.byte	$3D
	.byte	$9E
	.byte	$1F
	.byte	$40
	.byte	$14
	.byte	$1B
	.byte	$40
	.byte	$02
	.byte	$01
	.byte	$60
	.byte	$01
	.byte	$03
	.byte	$40
	.byte	$14
	.byte	$1B
	.byte	$40
	.byte	$02
	.byte	$01
	.byte	$60
	.byte	$01
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$14
	.byte	$1B
	.byte	$40
	.byte	$02
	.byte	$01
	.byte	$60
	.byte	$01
	.byte	$03
	.byte	$20
	.byte	$34
	.byte	$1B
	.byte	$40
	.byte	$02
	.byte	$01
	.byte	$60
	.byte	$01
	.byte	$03
	.byte	$20
	.byte	$34
	.byte	$31
	.byte	$12
	.byte	$FB
	.byte	$3B
	.byte	$10
	.byte	$34
_scr_2_11:
	.byte	$34
	.byte	$16
	.byte	$B4
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$36
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$14
	.byte	$36
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$20
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$20
	.byte	$16
	.byte	$00
	.byte	$17
	.byte	$E0
	.byte	$17
	.byte	$40
	.byte	$09
	.byte	$A0
	.byte	$09
	.byte	$C0
	.byte	$49
	.byte	$60
	.byte	$89
	.byte	$20
	.byte	$05
	.byte	$00
	.byte	$E9
	.byte	$A9
	.byte	$14
	.byte	$00
	.byte	$29
	.byte	$05
	.byte	$00
	.byte	$29
	.byte	$04
	.byte	$00
	.byte	$29
	.byte	$05
	.byte	$00
	.byte	$09
	.byte	$10
	.byte	$14
	.byte	$05
	.byte	$00
	.byte	$09
	.byte	$20
	.byte	$29
	.byte	$20
	.byte	$29
	.byte	$20
	.byte	$09
	.byte	$34
	.byte	$20
	.byte	$09
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$29
	.byte	$34
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$29
	.byte	$34
	.byte	$E6
	.byte	$A6
	.byte	$14
	.byte	$F1
	.byte	$F1
_scr_2_12:
	.byte	$74
	.byte	$16
	.byte	$94
	.byte	$16
	.byte	$54
	.byte	$16
	.byte	$14
	.byte	$36
	.byte	$14
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$54
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$14
	.byte	$17
	.byte	$00
	.byte	$36
	.byte	$00
	.byte	$17
	.byte	$40
	.byte	$16
	.byte	$14
	.byte	$17
	.byte	$40
	.byte	$16
	.byte	$E0
	.byte	$20
	.byte	$16
	.byte	$40
	.byte	$0A
	.byte	$C0
	.byte	$0A
	.byte	$C0
	.byte	$0A
	.byte	$C0
	.byte	$0A
	.byte	$40
	.byte	$0A
	.byte	$40
	.byte	$0A
	.byte	$60
	.byte	$12
	.byte	$28
	.byte	$60
	.byte	$0A
	.byte	$40
	.byte	$0A
	.byte	$40
	.byte	$10
	.byte	$14
	.byte	$A0
	.byte	$0A
	.byte	$40
	.byte	$0A
	.byte	$40
	.byte	$34
	.byte	$00
	.byte	$09
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$0A
	.byte	$49
	.byte	$34
	.byte	$00
	.byte	$29
	.byte	$00
	.byte	$49
	.byte	$00
	.byte	$49
	.byte	$00
	.byte	$29
	.byte	$15
	.byte	$14
	.byte	$00
	.byte	$1A
	.byte	$1B
	.byte	$00
	.byte	$29
	.byte	$1B
	.byte	$00
	.byte	$29
	.byte	$1B
	.byte	$00
	.byte	$29
	.byte	$07
	.byte	$51
	.byte	$12
	.byte	$E6
	.byte	$26
	.byte	$10
	.byte	$11
_scr_2_13:
	.byte	$14
	.byte	$37
	.byte	$F4
	.byte	$94
	.byte	$16
	.byte	$20
	.byte	$16
	.byte	$14
	.byte	$75
	.byte	$74
	.byte	$16
	.byte	$34
	.byte	$60
	.byte	$17
	.byte	$67
	.byte	$16
	.byte	$34
	.byte	$17
	.byte	$00
	.byte	$16
	.byte	$14
	.byte	$80
	.byte	$67
	.byte	$00
	.byte	$16
	.byte	$14
	.byte	$1E
	.byte	$1F
	.byte	$00
	.byte	$14
	.byte	$80
	.byte	$67
	.byte	$20
	.byte	$16
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$14
	.byte	$80
	.byte	$67
	.byte	$60
	.byte	$03
	.byte	$00
	.byte	$14
	.byte	$31
	.byte	$12
	.byte	$2B
	.byte	$67
	.byte	$6B
	.byte	$10
	.byte	$11
	.byte	$14
	.byte	$E6
	.byte	$E6
	.byte	$11
	.byte	$57
	.byte	$31
	.byte	$76
	.byte	$B1
	.byte	$16
	.byte	$40
	.byte	$37
	.byte	$60
	.byte	$37
	.byte	$56
	.byte	$14
	.byte	$20
	.byte	$1B
	.byte	$E0
	.byte	$60
	.byte	$14
	.byte	$B1
	.byte	$12
	.byte	$28
	.byte	$71
	.byte	$12
	.byte	$00
	.byte	$14
_scr_2_15:
	.byte	$54
	.byte	$EB
	.byte	$2B
	.byte	$56
	.byte	$14
	.byte	$17
	.byte	$14
	.byte	$EB
	.byte	$6B
	.byte	$0D
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$C8
	.byte	$6B
	.byte	$0D
	.byte	$00
	.byte	$1B
	.byte	$E0
	.byte	$00
	.byte	$48
	.byte	$0D
	.byte	$60
	.byte	$E9
	.byte	$A0
	.byte	$E9
	.byte	$89
	.byte	$40
	.byte	$1B
	.byte	$00
	.byte	$E9
	.byte	$49
	.byte	$40
	.byte	$14
	.byte	$00
	.byte	$1D
	.byte	$FE
	.byte	$7E
	.byte	$1F
	.byte	$14
	.byte	$FE
	.byte	$7E
	.byte	$1F
	.byte	$00
	.byte	$03
	.byte	$14
	.byte	$FE
	.byte	$9E
	.byte	$1F
	.byte	$03
	.byte	$14
	.byte	$00
	.byte	$02
	.byte	$0A
	.byte	$09
	.byte	$0A
	.byte	$09
	.byte	$0A
	.byte	$09
	.byte	$0A
	.byte	$09
	.byte	$0A
	.byte	$09
	.byte	$43
	.byte	$54
	.byte	$FB
	.byte	$3B
	.byte	$54
_scr_2_16:
	.byte	$16
	.byte	$FB
	.byte	$BB
	.byte	$14
	.byte	$00
	.byte	$1B
	.byte	$E0
	.byte	$60
	.byte	$1B
	.byte	$16
	.byte	$00
	.byte	$1B
	.byte	$00
	.byte	$E9
	.byte	$49
	.byte	$1B
	.byte	$20
	.byte	$1B
	.byte	$00
	.byte	$E9
	.byte	$49
	.byte	$40
	.byte	$1B
	.byte	$00
	.byte	$E9
	.byte	$69
	.byte	$20
	.byte	$1B
	.byte	$20
	.byte	$C8
	.byte	$1B
	.byte	$00
	.byte	$09
	.byte	$1B
	.byte	$60
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$00
	.byte	$1B
	.byte	$C0
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$00
	.byte	$10
	.byte	$71
	.byte	$40
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$00
	.byte	$96
	.byte	$40
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$E0
	.byte	$1B
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$20
	.byte	$01
	.byte	$A0
	.byte	$31
	.byte	$FB
	.byte	$9B
	.byte	$11
_scr_2_17:
	.byte	$34
	.byte	$FB
	.byte	$BB
	.byte	$16
	.byte	$14
	.byte	$1B
	.byte	$E0
	.byte	$60
	.byte	$1B
	.byte	$00
	.byte	$14
	.byte	$1B
	.byte	$00
	.byte	$E9
	.byte	$49
	.byte	$1B
	.byte	$00
	.byte	$17
	.byte	$1B
	.byte	$00
	.byte	$E9
	.byte	$49
	.byte	$1B
	.byte	$20
	.byte	$7B
	.byte	$08
	.byte	$FB
	.byte	$1B
	.byte	$60
	.byte	$39
	.byte	$60
	.byte	$17
	.byte	$54
	.byte	$16
	.byte	$14
	.byte	$60
	.byte	$39
	.byte	$20
	.byte	$0B
	.byte	$0C
	.byte	$00
	.byte	$17
	.byte	$14
	.byte	$16
	.byte	$00
	.byte	$16
	.byte	$31
	.byte	$12
	.byte	$00
	.byte	$3B
	.byte	$20
	.byte	$2B
	.byte	$0C
	.byte	$00
	.byte	$14
	.byte	$40
	.byte	$36
	.byte	$14
	.byte	$00
	.byte	$2A
	.byte	$00
	.byte	$0E
	.byte	$2B
	.byte	$20
	.byte	$14
	.byte	$80
	.byte	$14
	.byte	$00
	.byte	$2A
	.byte	$20
	.byte	$0E
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$14
	.byte	$20
	.byte	$10
	.byte	$20
	.byte	$14
	.byte	$71
	.byte	$12
	.byte	$60
	.byte	$34
	.byte	$1C
	.byte	$14
	.byte	$12
	.byte	$00
	.byte	$D1
	.byte	$28
	.byte	$00
	.byte	$56
	.byte	$14
_scr_2_18:
	.byte	$14
	.byte	$17
	.byte	$60
	.byte	$16
	.byte	$2B
	.byte	$18
	.byte	$16
	.byte	$57
	.byte	$00
	.byte	$34
	.byte	$A0
	.byte	$2B
	.byte	$18
	.byte	$80
	.byte	$34
	.byte	$FE
	.byte	$18
	.byte	$9E
	.byte	$34
	.byte	$E0
	.byte	$18
	.byte	$80
	.byte	$34
	.byte	$60
	.byte	$28
	.byte	$3B
	.byte	$18
	.byte	$9E
	.byte	$34
	.byte	$E0
	.byte	$A0
	.byte	$14
	.byte	$16
	.byte	$1D
	.byte	$FE
	.byte	$9E
	.byte	$14
	.byte	$00
	.byte	$22
	.byte	$E0
	.byte	$40
	.byte	$1E
	.byte	$14
	.byte	$00
	.byte	$02
	.byte	$13
	.byte	$E0
	.byte	$20
	.byte	$13
	.byte	$00
	.byte	$34
	.byte	$12
	.byte	$1D
	.byte	$FE
	.byte	$3E
	.byte	$1F
	.byte	$10
	.byte	$54
	.byte	$12
	.byte	$EB
	.byte	$3B
	.byte	$10
	.byte	$94
	.byte	$E6
	.byte	$26
	.byte	$54
_scr_2_1a:
	.byte	$54
	.byte	$E0
	.byte	$20
	.byte	$94
	.byte	$17
	.byte	$E0
	.byte	$20
	.byte	$94
	.byte	$E0
	.byte	$40
	.byte	$17
	.byte	$54
	.byte	$17
	.byte	$E0
	.byte	$60
	.byte	$54
	.byte	$E0
	.byte	$80
	.byte	$17
	.byte	$34
	.byte	$60
	.byte	$0F
	.byte	$6B
	.byte	$0C
	.byte	$60
	.byte	$34
	.byte	$60
	.byte	$AB
	.byte	$60
	.byte	$34
	.byte	$40
	.byte	$0F
	.byte	$AB
	.byte	$0C
	.byte	$40
	.byte	$34
	.byte	$12
	.byte	$00
	.byte	$0F
	.byte	$2B
	.byte	$10
	.byte	$31
	.byte	$12
	.byte	$2B
	.byte	$0C
	.byte	$00
	.byte	$10
	.byte	$54
	.byte	$E6
	.byte	$66
	.byte	$F4
	.byte	$F4
	.byte	$F4
	.byte	$F4
	.byte	$34
_scr_2_1b:
	.byte	$14
	.byte	$D6
	.byte	$17
	.byte	$16
	.byte	$74
	.byte	$36
	.byte	$34
	.byte	$2B
	.byte	$19
	.byte	$00
	.byte	$19
	.byte	$40
	.byte	$16
	.byte	$54
	.byte	$16
	.byte	$00
	.byte	$14
	.byte	$2B
	.byte	$0D
	.byte	$19
	.byte	$00
	.byte	$19
	.byte	$60
	.byte	$36
	.byte	$14
	.byte	$20
	.byte	$14
	.byte	$51
	.byte	$19
	.byte	$16
	.byte	$19
	.byte	$A0
	.byte	$16
	.byte	$20
	.byte	$14
	.byte	$57
	.byte	$19
	.byte	$00
	.byte	$19
	.byte	$E0
	.byte	$00
	.byte	$34
	.byte	$0B
	.byte	$0C
	.byte	$19
	.byte	$00
	.byte	$19
	.byte	$E0
	.byte	$00
	.byte	$14
	.byte	$4B
	.byte	$19
	.byte	$00
	.byte	$19
	.byte	$E0
	.byte	$00
	.byte	$14
	.byte	$20
	.byte	$17
	.byte	$19
	.byte	$12
	.byte	$19
	.byte	$E0
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$17
	.byte	$00
	.byte	$19
	.byte	$16
	.byte	$19
	.byte	$40
	.byte	$1B
	.byte	$48
	.byte	$20
	.byte	$34
	.byte	$2B
	.byte	$0A
	.byte	$0D
	.byte	$0A
	.byte	$40
	.byte	$1B
	.byte	$80
	.byte	$14
	.byte	$18
	.byte	$2B
	.byte	$0A
	.byte	$00
	.byte	$0A
	.byte	$40
	.byte	$1B
	.byte	$80
	.byte	$14
	.byte	$F1
	.byte	$D1
_scr_2_1c:
	.byte	$16
	.byte	$00
	.byte	$36
	.byte	$54
	.byte	$16
	.byte	$14
	.byte	$00
	.byte	$2A
	.byte	$56
	.byte	$14
	.byte	$20
	.byte	$16
	.byte	$14
	.byte	$17
	.byte	$34
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$2A
	.byte	$40
	.byte	$14
	.byte	$40
	.byte	$16
	.byte	$00
	.byte	$14
	.byte	$17
	.byte	$40
	.byte	$0A
	.byte	$64
	.byte	$14
	.byte	$80
	.byte	$16
	.byte	$60
	.byte	$2A
	.byte	$40
	.byte	$14
	.byte	$E0
	.byte	$20
	.byte	$2A
	.byte	$40
	.byte	$14
	.byte	$40
	.byte	$1D
	.byte	$7E
	.byte	$05
	.byte	$BE
	.byte	$14
	.byte	$40
	.byte	$02
	.byte	$A0
	.byte	$2A
	.byte	$20
	.byte	$0F
	.byte	$14
	.byte	$40
	.byte	$02
	.byte	$1D
	.byte	$BE
	.byte	$04
	.byte	$5E
	.byte	$14
	.byte	$40
	.byte	$22
	.byte	$80
	.byte	$2A
	.byte	$4B
	.byte	$14
	.byte	$40
	.byte	$22
	.byte	$20
	.byte	$10
	.byte	$34
	.byte	$2A
	.byte	$4B
	.byte	$14
	.byte	$40
	.byte	$22
	.byte	$00
	.byte	$10
	.byte	$54
	.byte	$86
	.byte	$14
	.byte	$B1
	.byte	$F4
	.byte	$34
_map_2:
	.word	$0000
	.addr	_scr_2_01
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_scr_2_06
	.word	$0000
	.word	$0000
	.addr	_scr_2_09
	.addr	_scr_2_0a
	.addr	_scr_2_0b
	.addr	_scr_2_0c
	.addr	_scr_2_0d
	.addr	_scr_2_0e
	.addr	_scr_2_0a
	.addr	_scr_2_10
	.addr	_scr_2_11
	.addr	_scr_2_12
	.addr	_scr_2_13
	.addr	_scr_2_0a
	.addr	_scr_2_15
	.addr	_scr_2_16
	.addr	_scr_2_17
	.addr	_scr_2_18
	.word	$0000
	.addr	_scr_2_1a
	.addr	_scr_2_1b
	.addr	_scr_2_1c
	.word	$0000
_map_2_decos_01:
	.byte	$A0
	.byte	$82
	.byte	$21
	.byte	$02
	.byte	$93
	.byte	$94
	.byte	$00
_map_2_decos_06:
	.byte	$21
	.byte	$03
	.byte	$B3
	.byte	$B7
	.byte	$BB
	.byte	$00
_map_2_decos_0a:
	.byte	$24
	.byte	$06
	.byte	$83
	.byte	$84
	.byte	$85
	.byte	$93
	.byte	$95
	.byte	$A5
	.byte	$A3
	.byte	$94
	.byte	$A0
	.byte	$A7
	.byte	$A1
	.byte	$AD
	.byte	$00
_map_2_decos_0b:
	.byte	$A1
	.byte	$9D
	.byte	$A0
	.byte	$A2
	.byte	$00
_map_2_decos_0d:
	.byte	$A1
	.byte	$AE
	.byte	$00
_map_2_decos_0e:
	.byte	$21
	.byte	$08
	.byte	$46
	.byte	$47
	.byte	$48
	.byte	$49
	.byte	$75
	.byte	$7A
	.byte	$A4
	.byte	$AB
	.byte	$00
_map_2_decos_0f:
	.byte	$24
	.byte	$06
	.byte	$83
	.byte	$84
	.byte	$85
	.byte	$93
	.byte	$95
	.byte	$A5
	.byte	$A3
	.byte	$94
	.byte	$A0
	.byte	$A7
	.byte	$A1
	.byte	$AD
	.byte	$00
_map_2_decos_10:
	.byte	$21
	.byte	$02
	.byte	$65
	.byte	$6A
	.byte	$00
_map_2_decos_11:
	.byte	$A1
	.byte	$AE
	.byte	$00
_map_2_decos_12:
	.byte	$21
	.byte	$03
	.byte	$93
	.byte	$97
	.byte	$9B
	.byte	$00
_map_2_decos_14:
	.byte	$24
	.byte	$06
	.byte	$83
	.byte	$84
	.byte	$85
	.byte	$93
	.byte	$95
	.byte	$A5
	.byte	$A3
	.byte	$94
	.byte	$A0
	.byte	$A7
	.byte	$A1
	.byte	$AD
	.byte	$00
_map_2_decos_15:
	.byte	$AB
	.byte	$26
	.byte	$21
	.byte	$05
	.byte	$93
	.byte	$95
	.byte	$97
	.byte	$99
	.byte	$9B
	.byte	$00
_map_2_decos_16:
	.byte	$20
	.byte	$03
	.byte	$44
	.byte	$47
	.byte	$4A
	.byte	$2A
	.byte	$03
	.byte	$53
	.byte	$56
	.byte	$59
	.byte	$00
_map_2_decos_17:
	.byte	$29
	.byte	$03
	.byte	$45
	.byte	$55
	.byte	$65
	.byte	$AB
	.byte	$AD
	.byte	$00
_map_2_decos_18:
	.byte	$A0
	.byte	$35
	.byte	$21
	.byte	$04
	.byte	$37
	.byte	$38
	.byte	$72
	.byte	$7D
	.byte	$A5
	.byte	$9B
	.byte	$00
_map_2_decos_1b:
	.byte	$A6
	.byte	$11
	.byte	$2A
	.byte	$03
	.byte	$32
	.byte	$72
	.byte	$B2
	.byte	$A7
	.byte	$51
	.byte	$A8
	.byte	$91
	.byte	$00
_map_2_decos:
	.word	$0000
	.addr	_map_2_decos_01
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_map_2_decos_06
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_map_2_decos_0a
	.addr	_map_2_decos_0b
	.word	$0000
	.addr	_map_2_decos_0d
	.addr	_map_2_decos_0e
	.addr	_map_2_decos_0f
	.addr	_map_2_decos_10
	.addr	_map_2_decos_11
	.addr	_map_2_decos_12
	.word	$0000
	.addr	_map_2_decos_14
	.addr	_map_2_decos_15
	.addr	_map_2_decos_16
	.addr	_map_2_decos_17
	.addr	_map_2_decos_18
	.word	$0000
	.word	$0000
	.addr	_map_2_decos_1b
	.word	$0000
	.word	$0000
_ts1_pals:
	.byte	$00
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$01
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$02
	.byte	$02
	.byte	$01
	.byte	$03
	.byte	$02
	.byte	$00
	.byte	$02
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$03
	.byte	$02
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$03
_ts1_tmaps:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4A
	.byte	$4B
	.byte	$4C
	.byte	$4D
	.byte	$4E
	.byte	$4F
	.byte	$50
	.byte	$51
	.byte	$52
	.byte	$53
	.byte	$54
	.byte	$55
	.byte	$56
	.byte	$57
	.byte	$58
	.byte	$59
	.byte	$5A
	.byte	$5B
	.byte	$5C
	.byte	$5D
	.byte	$5E
	.byte	$5F
	.byte	$60
	.byte	$61
	.byte	$62
	.byte	$62
	.byte	$63
	.byte	$63
	.byte	$64
	.byte	$65
	.byte	$4C
	.byte	$4D
	.byte	$66
	.byte	$67
	.byte	$68
	.byte	$69
	.byte	$00
	.byte	$00
	.byte	$50
	.byte	$00
	.byte	$4E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4F
	.byte	$00
	.byte	$00
	.byte	$6A
	.byte	$6B
	.byte	$6C
	.byte	$6D
	.byte	$6E
	.byte	$6F
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$51
	.byte	$72
	.byte	$73
	.byte	$74
	.byte	$75
	.byte	$76
	.byte	$65
	.byte	$77
	.byte	$78
	.byte	$64
	.byte	$79
	.byte	$77
	.byte	$78
	.byte	$7A
	.byte	$7B
	.byte	$7C
	.byte	$7D
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$7E
	.byte	$64
	.byte	$7F
	.byte	$80
	.byte	$81
	.byte	$82
	.byte	$00
	.byte	$83
	.byte	$00
	.byte	$4A
	.byte	$4B
	.byte	$84
	.byte	$85
	.byte	$86
	.byte	$86
	.byte	$87
	.byte	$87
	.byte	$88
	.byte	$89
	.byte	$8A
	.byte	$8B
	.byte	$8C
	.byte	$8D
	.byte	$8E
	.byte	$8F
	.byte	$90
	.byte	$91
	.byte	$92
	.byte	$93
	.byte	$94
	.byte	$95
	.byte	$96
	.byte	$97
	.byte	$98
	.byte	$90
	.byte	$99
	.byte	$92
	.byte	$9A
	.byte	$9B
	.byte	$9C
	.byte	$9D
	.byte	$9E
	.byte	$9F
	.byte	$A0
	.byte	$A1
	.byte	$A2
	.byte	$5B
	.byte	$A3
	.byte	$5D
	.byte	$A4
	.byte	$A5
	.byte	$A6
	.byte	$A7
	.byte	$A8
	.byte	$A9
	.byte	$AA
	.byte	$AB
	.byte	$AA
	.byte	$AB
	.byte	$AA
	.byte	$AB
	.byte	$AC
	.byte	$AD
	.byte	$AE
	.byte	$AF
	.byte	$B0
	.byte	$B1
	.byte	$B2
	.byte	$B3
	.byte	$B4
	.byte	$B5
	.byte	$B6
	.byte	$B7
	.byte	$B8
	.byte	$B9
	.byte	$BA
	.byte	$BB
	.byte	$BC
	.byte	$BD
	.byte	$BE
	.byte	$BF
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$C1
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C2
	.byte	$C3
	.byte	$C4
	.byte	$C5
	.byte	$C6
	.byte	$C7
	.byte	$C7
	.byte	$C8
	.byte	$C8
	.byte	$05
	.byte	$06
	.byte	$0A
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$3F
	.byte	$00
	.byte	$1B
	.byte	$0A
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$1B
	.byte	$00
	.byte	$1B
	.byte	$0A
	.byte	$00
	.byte	$1C
	.byte	$1D
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$1D
	.byte	$00
	.byte	$1B
	.byte	$1D
	.byte	$1E
	.byte	$C9
	.byte	$CA
	.byte	$CB
	.byte	$CC
	.byte	$CD
	.byte	$CE
	.byte	$CF
	.byte	$D0
	.byte	$D1
	.byte	$D2
	.byte	$D3
	.byte	$D4
	.byte	$D5
	.byte	$D6
	.byte	$D7
	.byte	$D8
	.byte	$D9
	.byte	$DA
	.byte	$DB
	.byte	$DC
	.byte	$DD
	.byte	$DE
	.byte	$DF
	.byte	$E0
	.byte	$E1
	.byte	$E2
	.byte	$E3
	.byte	$E4
_ts0_pals:
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_ts0_tmaps:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$E5
	.byte	$E5
	.byte	$E5
	.byte	$E5
	.byte	$E6
	.byte	$E6
	.byte	$E7
	.byte	$E7
	.byte	$E8
	.byte	$E8
	.byte	$E8
	.byte	$E8
	.byte	$E9
	.byte	$E8
	.byte	$EA
	.byte	$EB
	.byte	$EC
	.byte	$ED
	.byte	$00
	.byte	$EE
	.byte	$62
	.byte	$62
	.byte	$63
	.byte	$63
	.byte	$7A
	.byte	$7B
	.byte	$7C
	.byte	$7D
	.byte	$5A
	.byte	$5B
	.byte	$5C
	.byte	$5D
	.byte	$52
	.byte	$53
	.byte	$54
	.byte	$55
	.byte	$66
	.byte	$67
	.byte	$68
	.byte	$69
	.byte	$4E
	.byte	$4F
	.byte	$50
	.byte	$51
	.byte	$00
	.byte	$00
	.byte	$50
	.byte	$00
	.byte	$4E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$51
	.byte	$76
	.byte	$65
	.byte	$77
	.byte	$78
	.byte	$64
	.byte	$65
	.byte	$4C
	.byte	$4D
	.byte	$64
	.byte	$79
	.byte	$77
	.byte	$78
	.byte	$64
	.byte	$7F
	.byte	$80
	.byte	$81
	.byte	$4A
	.byte	$4B
	.byte	$4C
	.byte	$4D
	.byte	$4A
	.byte	$4B
	.byte	$84
	.byte	$85
	.byte	$56
	.byte	$57
	.byte	$58
	.byte	$59
	.byte	$5E
	.byte	$5F
	.byte	$60
	.byte	$61
	.byte	$6E
	.byte	$6F
	.byte	$70
	.byte	$71
	.byte	$72
	.byte	$73
	.byte	$74
	.byte	$75
	.byte	$9A
	.byte	$9B
	.byte	$9C
	.byte	$9D
	.byte	$6A
	.byte	$6B
	.byte	$6C
	.byte	$6D
	.byte	$94
	.byte	$95
	.byte	$96
	.byte	$97
	.byte	$98
	.byte	$90
	.byte	$99
	.byte	$92
	.byte	$86
	.byte	$86
	.byte	$87
	.byte	$87
	.byte	$90
	.byte	$91
	.byte	$92
	.byte	$93
	.byte	$C3
	.byte	$C4
	.byte	$C5
	.byte	$C6
	.byte	$52
	.byte	$53
	.byte	$54
	.byte	$C2
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C7
	.byte	$C7
	.byte	$C8
	.byte	$C8
	.byte	$05
	.byte	$06
	.byte	$0A
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$3F
	.byte	$00
	.byte	$1B
	.byte	$0A
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$1B
	.byte	$00
	.byte	$1B
	.byte	$0A
	.byte	$00
	.byte	$1C
	.byte	$1D
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$1D
	.byte	$00
	.byte	$1B
	.byte	$1D
	.byte	$1E
_ts2_pals:
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$02
	.byte	$02
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$03
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_ts2_tmaps:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$82
	.byte	$00
	.byte	$83
	.byte	$00
	.byte	$EF
	.byte	$00
	.byte	$EF
	.byte	$00
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$7E
	.byte	$F0
	.byte	$F1
	.byte	$F2
	.byte	$F3
	.byte	$F0
	.byte	$F1
	.byte	$F4
	.byte	$F5
	.byte	$62
	.byte	$62
	.byte	$63
	.byte	$63
	.byte	$7A
	.byte	$7B
	.byte	$7C
	.byte	$7D
	.byte	$5A
	.byte	$5B
	.byte	$5C
	.byte	$5D
	.byte	$52
	.byte	$53
	.byte	$54
	.byte	$55
	.byte	$66
	.byte	$67
	.byte	$68
	.byte	$69
	.byte	$4E
	.byte	$4F
	.byte	$50
	.byte	$51
	.byte	$00
	.byte	$00
	.byte	$50
	.byte	$00
	.byte	$4E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$4F
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$51
	.byte	$76
	.byte	$65
	.byte	$77
	.byte	$78
	.byte	$64
	.byte	$65
	.byte	$4C
	.byte	$4D
	.byte	$64
	.byte	$79
	.byte	$77
	.byte	$78
	.byte	$64
	.byte	$7F
	.byte	$80
	.byte	$81
	.byte	$4A
	.byte	$4B
	.byte	$4C
	.byte	$4D
	.byte	$4A
	.byte	$4B
	.byte	$84
	.byte	$85
	.byte	$56
	.byte	$57
	.byte	$58
	.byte	$59
	.byte	$5E
	.byte	$5F
	.byte	$60
	.byte	$61
	.byte	$6E
	.byte	$6F
	.byte	$70
	.byte	$71
	.byte	$F6
	.byte	$F7
	.byte	$F6
	.byte	$F7
	.byte	$9A
	.byte	$9B
	.byte	$9C
	.byte	$9D
	.byte	$6A
	.byte	$6B
	.byte	$6C
	.byte	$6D
	.byte	$94
	.byte	$95
	.byte	$96
	.byte	$97
	.byte	$98
	.byte	$90
	.byte	$99
	.byte	$92
	.byte	$86
	.byte	$86
	.byte	$87
	.byte	$87
	.byte	$90
	.byte	$91
	.byte	$92
	.byte	$93
	.byte	$C3
	.byte	$C4
	.byte	$C5
	.byte	$C6
	.byte	$40
	.byte	$41
	.byte	$F8
	.byte	$F9
	.byte	$42
	.byte	$43
	.byte	$F8
	.byte	$F9
	.byte	$5C
	.byte	$5D
	.byte	$6A
	.byte	$6B
	.byte	$6A
	.byte	$6B
	.byte	$6C
	.byte	$6D
	.byte	$FA
	.byte	$FB
	.byte	$FC
	.byte	$FD
	.byte	$4E
	.byte	$4F
	.byte	$50
	.byte	$21
	.byte	$4E
	.byte	$4F
	.byte	$50
	.byte	$22
	.byte	$4E
	.byte	$4F
	.byte	$50
	.byte	$23
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$9E
	.byte	$9F
	.byte	$A0
	.byte	$A1
	.byte	$E1
	.byte	$E2
	.byte	$E3
	.byte	$E4
	.byte	$C7
	.byte	$C7
	.byte	$C8
	.byte	$C8
	.byte	$05
	.byte	$06
	.byte	$0A
	.byte	$00
	.byte	$06
	.byte	$06
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$3F
	.byte	$00
	.byte	$1B
	.byte	$0A
	.byte	$00
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$1B
	.byte	$00
	.byte	$1B
	.byte	$0A
	.byte	$00
	.byte	$1C
	.byte	$1D
	.byte	$00
	.byte	$00
	.byte	$1D
	.byte	$1D
	.byte	$00
	.byte	$1B
	.byte	$1D
	.byte	$1E
_sspla_00_a:
	.byte	$FC
	.byte	$F8
	.byte	$03
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$04
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$05
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$06
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$07
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$80
_sspla_00_b:
	.byte	$FC
	.byte	$F8
	.byte	$04
	.byte	$40
	.byte	$04
	.byte	$F8
	.byte	$03
	.byte	$40
	.byte	$FC
	.byte	$00
	.byte	$06
	.byte	$40
	.byte	$04
	.byte	$00
	.byte	$05
	.byte	$40
	.byte	$FC
	.byte	$08
	.byte	$08
	.byte	$40
	.byte	$04
	.byte	$08
	.byte	$07
	.byte	$40
	.byte	$80
_sspla_01_a:
	.byte	$FC
	.byte	$F8
	.byte	$09
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$0A
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$0B
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$0C
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$0D
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$0E
	.byte	$00
	.byte	$80
_sspla_01_b:
	.byte	$FC
	.byte	$F8
	.byte	$0A
	.byte	$40
	.byte	$04
	.byte	$F8
	.byte	$09
	.byte	$40
	.byte	$FC
	.byte	$00
	.byte	$0C
	.byte	$40
	.byte	$04
	.byte	$00
	.byte	$0B
	.byte	$40
	.byte	$FC
	.byte	$08
	.byte	$0E
	.byte	$40
	.byte	$04
	.byte	$08
	.byte	$0D
	.byte	$40
	.byte	$80
_sspla_02_a:
	.byte	$FC
	.byte	$F8
	.byte	$0F
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$10
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$11
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$12
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$13
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$14
	.byte	$00
	.byte	$80
_sspla_02_b:
	.byte	$FC
	.byte	$F8
	.byte	$10
	.byte	$40
	.byte	$04
	.byte	$F8
	.byte	$0F
	.byte	$40
	.byte	$FC
	.byte	$00
	.byte	$12
	.byte	$40
	.byte	$04
	.byte	$00
	.byte	$11
	.byte	$40
	.byte	$FC
	.byte	$08
	.byte	$14
	.byte	$40
	.byte	$04
	.byte	$08
	.byte	$13
	.byte	$40
	.byte	$80
_sspla_03_a:
	.byte	$FC
	.byte	$F8
	.byte	$15
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$16
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$17
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$18
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$19
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$1A
	.byte	$00
	.byte	$80
_sspla_03_b:
	.byte	$FC
	.byte	$F8
	.byte	$16
	.byte	$40
	.byte	$04
	.byte	$F8
	.byte	$15
	.byte	$40
	.byte	$FC
	.byte	$00
	.byte	$18
	.byte	$40
	.byte	$04
	.byte	$00
	.byte	$17
	.byte	$40
	.byte	$FC
	.byte	$08
	.byte	$1A
	.byte	$40
	.byte	$04
	.byte	$08
	.byte	$19
	.byte	$40
	.byte	$80
_sspla_04_a:
	.byte	$FC
	.byte	$F8
	.byte	$1B
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$1C
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$1D
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$1E
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$1F
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$20
	.byte	$00
	.byte	$80
_sspla_04_b:
	.byte	$FC
	.byte	$F8
	.byte	$1C
	.byte	$40
	.byte	$04
	.byte	$F8
	.byte	$1B
	.byte	$40
	.byte	$FC
	.byte	$00
	.byte	$1E
	.byte	$40
	.byte	$04
	.byte	$00
	.byte	$1D
	.byte	$40
	.byte	$FC
	.byte	$08
	.byte	$20
	.byte	$40
	.byte	$04
	.byte	$08
	.byte	$1F
	.byte	$40
	.byte	$80
_sspla_05_a:
	.byte	$FC
	.byte	$F8
	.byte	$21
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$22
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$23
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$24
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$25
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$26
	.byte	$00
	.byte	$80
_sspla_05_b:
	.byte	$FC
	.byte	$F8
	.byte	$22
	.byte	$40
	.byte	$04
	.byte	$F8
	.byte	$21
	.byte	$40
	.byte	$FC
	.byte	$00
	.byte	$24
	.byte	$40
	.byte	$04
	.byte	$00
	.byte	$23
	.byte	$40
	.byte	$FC
	.byte	$08
	.byte	$26
	.byte	$40
	.byte	$04
	.byte	$08
	.byte	$25
	.byte	$40
	.byte	$80
_ssplb_00:
	.byte	$FC
	.byte	$F8
	.byte	$27
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$22
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$28
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$29
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$2A
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$2B
	.byte	$00
	.byte	$80
_ssplb_01:
	.byte	$FC
	.byte	$F8
	.byte	$2C
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$2D
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$2E
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$2F
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$30
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$31
	.byte	$00
	.byte	$80
_ssplb_02:
	.byte	$FC
	.byte	$F8
	.byte	$32
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$33
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$34
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$35
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$36
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$37
	.byte	$00
	.byte	$80
_ssplb_03:
	.byte	$FC
	.byte	$F8
	.byte	$38
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$39
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$3A
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$3B
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$3C
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$3D
	.byte	$00
	.byte	$80
_ssplb_04:
	.byte	$FC
	.byte	$F8
	.byte	$3E
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$3F
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$40
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$41
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$42
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$43
	.byte	$00
	.byte	$80
_ssplb_05:
	.byte	$FC
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$44
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$45
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$46
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$47
	.byte	$00
	.byte	$80
_ssplb_06:
	.byte	$FC
	.byte	$F8
	.byte	$48
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$49
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$4A
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$4B
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$4C
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$4D
	.byte	$00
	.byte	$80
_ssena_00_a:
	.byte	$00
	.byte	$F8
	.byte	$4E
	.byte	$02
	.byte	$08
	.byte	$F8
	.byte	$4F
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$50
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$51
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$52
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$53
	.byte	$02
	.byte	$80
_ssena_00_b:
	.byte	$00
	.byte	$F8
	.byte	$4F
	.byte	$42
	.byte	$08
	.byte	$F8
	.byte	$4E
	.byte	$42
	.byte	$00
	.byte	$00
	.byte	$51
	.byte	$42
	.byte	$08
	.byte	$00
	.byte	$50
	.byte	$42
	.byte	$00
	.byte	$08
	.byte	$53
	.byte	$42
	.byte	$08
	.byte	$08
	.byte	$52
	.byte	$42
	.byte	$80
_ssena_01_a:
	.byte	$00
	.byte	$F8
	.byte	$54
	.byte	$02
	.byte	$08
	.byte	$F8
	.byte	$55
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$56
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$57
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$58
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$59
	.byte	$02
	.byte	$80
_ssena_01_b:
	.byte	$00
	.byte	$F8
	.byte	$55
	.byte	$42
	.byte	$08
	.byte	$F8
	.byte	$54
	.byte	$42
	.byte	$00
	.byte	$00
	.byte	$57
	.byte	$42
	.byte	$08
	.byte	$00
	.byte	$56
	.byte	$42
	.byte	$00
	.byte	$08
	.byte	$59
	.byte	$42
	.byte	$08
	.byte	$08
	.byte	$58
	.byte	$42
	.byte	$80
_ssenb_00:
	.byte	$00
	.byte	$F8
	.byte	$5A
	.byte	$02
	.byte	$08
	.byte	$F8
	.byte	$5B
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$5C
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$5D
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$5E
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$5F
	.byte	$02
	.byte	$80
_ssenb_01:
	.byte	$00
	.byte	$F8
	.byte	$60
	.byte	$02
	.byte	$08
	.byte	$F8
	.byte	$61
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$62
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$63
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$64
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$65
	.byte	$02
	.byte	$80
_ssenb_02:
	.byte	$00
	.byte	$F8
	.byte	$66
	.byte	$02
	.byte	$08
	.byte	$F8
	.byte	$67
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$68
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$69
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$5F
	.byte	$42
	.byte	$08
	.byte	$08
	.byte	$5E
	.byte	$42
	.byte	$80
_ssenb_03:
	.byte	$00
	.byte	$F8
	.byte	$6A
	.byte	$02
	.byte	$08
	.byte	$F8
	.byte	$6B
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$6C
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$6D
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$65
	.byte	$42
	.byte	$08
	.byte	$08
	.byte	$64
	.byte	$42
	.byte	$80
_ssenc_00:
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$6E
	.byte	$40
	.byte	$00
	.byte	$08
	.byte	$6F
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$6F
	.byte	$40
	.byte	$80
_ssenc_01:
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$70
	.byte	$40
	.byte	$00
	.byte	$08
	.byte	$71
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$71
	.byte	$40
	.byte	$80
_ssenc_02:
	.byte	$00
	.byte	$00
	.byte	$72
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$73
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$74
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$75
	.byte	$01
	.byte	$80
_ssenc_03:
	.byte	$00
	.byte	$00
	.byte	$76
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$77
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$78
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$79
	.byte	$01
	.byte	$80
_ssenc_04:
	.byte	$00
	.byte	$00
	.byte	$7A
	.byte	$22
	.byte	$08
	.byte	$00
	.byte	$7A
	.byte	$62
	.byte	$00
	.byte	$08
	.byte	$7A
	.byte	$A2
	.byte	$08
	.byte	$08
	.byte	$7A
	.byte	$E2
	.byte	$80
_ssenc_05:
	.byte	$00
	.byte	$00
	.byte	$7B
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$7C
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$7D
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$7E
	.byte	$01
	.byte	$80
_ssenc_06:
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$7F
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$80
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$81
	.byte	$01
	.byte	$80
_ssenc_07:
	.byte	$00
	.byte	$00
	.byte	$7F
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$7F
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$82
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$83
	.byte	$01
	.byte	$80
_ssend_00:
	.byte	$FC
	.byte	$00
	.byte	$84
	.byte	$02
	.byte	$04
	.byte	$00
	.byte	$85
	.byte	$02
	.byte	$0C
	.byte	$00
	.byte	$84
	.byte	$42
	.byte	$FC
	.byte	$08
	.byte	$86
	.byte	$02
	.byte	$04
	.byte	$08
	.byte	$87
	.byte	$02
	.byte	$0C
	.byte	$08
	.byte	$86
	.byte	$42
	.byte	$80
_ssend_01:
	.byte	$FC
	.byte	$00
	.byte	$88
	.byte	$02
	.byte	$04
	.byte	$00
	.byte	$89
	.byte	$02
	.byte	$0C
	.byte	$00
	.byte	$88
	.byte	$42
	.byte	$FC
	.byte	$08
	.byte	$8A
	.byte	$02
	.byte	$04
	.byte	$08
	.byte	$8B
	.byte	$02
	.byte	$0C
	.byte	$08
	.byte	$8A
	.byte	$42
	.byte	$80
_ssend_02:
	.byte	$FC
	.byte	$00
	.byte	$8C
	.byte	$02
	.byte	$04
	.byte	$00
	.byte	$8D
	.byte	$02
	.byte	$0C
	.byte	$00
	.byte	$8C
	.byte	$42
	.byte	$FC
	.byte	$08
	.byte	$8E
	.byte	$02
	.byte	$04
	.byte	$08
	.byte	$8F
	.byte	$02
	.byte	$0C
	.byte	$08
	.byte	$8E
	.byte	$42
	.byte	$80
_ssit_00:
	.byte	$00
	.byte	$00
	.byte	$90
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$90
	.byte	$40
	.byte	$00
	.byte	$08
	.byte	$90
	.byte	$80
	.byte	$08
	.byte	$08
	.byte	$90
	.byte	$C0
	.byte	$80
_ssit_01:
	.byte	$00
	.byte	$00
	.byte	$91
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$92
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$93
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$94
	.byte	$01
	.byte	$80
_ssit_02:
	.byte	$00
	.byte	$00
	.byte	$95
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$96
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$97
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$98
	.byte	$01
	.byte	$80
_ssit_03:
	.byte	$00
	.byte	$00
	.byte	$99
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$9A
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$9B
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$9C
	.byte	$03
	.byte	$80
_ssit_04:
	.byte	$00
	.byte	$00
	.byte	$9D
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$9D
	.byte	$40
	.byte	$00
	.byte	$08
	.byte	$9E
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$9F
	.byte	$03
	.byte	$80
_ssit_05:
	.byte	$00
	.byte	$00
	.byte	$A0
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$A1
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$A2
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$A2
	.byte	$40
	.byte	$80
_ssit_06:
	.byte	$00
	.byte	$00
	.byte	$A3
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$A3
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$A4
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$A5
	.byte	$01
	.byte	$80
_ssit_07:
	.byte	$00
	.byte	$00
	.byte	$A6
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$54
	.byte	$41
	.byte	$00
	.byte	$08
	.byte	$A7
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$A8
	.byte	$01
	.byte	$80
_ssit_08:
	.byte	$00
	.byte	$00
	.byte	$A9
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$AA
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$AB
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$AC
	.byte	$01
	.byte	$80
_ssit_09:
	.byte	$00
	.byte	$00
	.byte	$AD
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$AE
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$AF
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$B0
	.byte	$00
	.byte	$80
_ssit_0A:
	.byte	$00
	.byte	$00
	.byte	$B1
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$B2
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$B3
	.byte	$01
	.byte	$08
	.byte	$08
	.byte	$B4
	.byte	$01
	.byte	$80
_ssboss_00_a:
	.byte	$F8
	.byte	$00
	.byte	$B5
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$B6
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$B7
	.byte	$02
	.byte	$10
	.byte	$00
	.byte	$B8
	.byte	$02
	.byte	$F8
	.byte	$08
	.byte	$B9
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$BA
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$BB
	.byte	$02
	.byte	$10
	.byte	$08
	.byte	$BC
	.byte	$02
	.byte	$F8
	.byte	$10
	.byte	$BD
	.byte	$02
	.byte	$00
	.byte	$10
	.byte	$BE
	.byte	$02
	.byte	$08
	.byte	$10
	.byte	$BF
	.byte	$02
	.byte	$10
	.byte	$10
	.byte	$C0
	.byte	$02
	.byte	$F8
	.byte	$18
	.byte	$C1
	.byte	$02
	.byte	$00
	.byte	$18
	.byte	$C2
	.byte	$02
	.byte	$08
	.byte	$18
	.byte	$C3
	.byte	$02
	.byte	$80
_ssboss_00_b:
	.byte	$F8
	.byte	$00
	.byte	$B8
	.byte	$42
	.byte	$00
	.byte	$00
	.byte	$B7
	.byte	$42
	.byte	$08
	.byte	$00
	.byte	$B6
	.byte	$42
	.byte	$10
	.byte	$00
	.byte	$B5
	.byte	$42
	.byte	$F8
	.byte	$08
	.byte	$BC
	.byte	$42
	.byte	$00
	.byte	$08
	.byte	$BB
	.byte	$42
	.byte	$08
	.byte	$08
	.byte	$BA
	.byte	$42
	.byte	$10
	.byte	$08
	.byte	$B9
	.byte	$42
	.byte	$F8
	.byte	$10
	.byte	$C0
	.byte	$42
	.byte	$00
	.byte	$10
	.byte	$BF
	.byte	$42
	.byte	$08
	.byte	$10
	.byte	$BE
	.byte	$42
	.byte	$10
	.byte	$10
	.byte	$BD
	.byte	$42
	.byte	$00
	.byte	$18
	.byte	$C3
	.byte	$42
	.byte	$08
	.byte	$18
	.byte	$C2
	.byte	$42
	.byte	$10
	.byte	$18
	.byte	$C1
	.byte	$42
	.byte	$80
_ssboss_01_a:
	.byte	$F8
	.byte	$00
	.byte	$C4
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$B6
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$B7
	.byte	$02
	.byte	$10
	.byte	$00
	.byte	$C5
	.byte	$02
	.byte	$F8
	.byte	$08
	.byte	$C6
	.byte	$02
	.byte	$00
	.byte	$08
	.byte	$BA
	.byte	$02
	.byte	$08
	.byte	$08
	.byte	$BB
	.byte	$02
	.byte	$10
	.byte	$08
	.byte	$C7
	.byte	$02
	.byte	$F8
	.byte	$10
	.byte	$C8
	.byte	$02
	.byte	$00
	.byte	$10
	.byte	$C9
	.byte	$02
	.byte	$08
	.byte	$10
	.byte	$CA
	.byte	$02
	.byte	$10
	.byte	$10
	.byte	$CB
	.byte	$02
	.byte	$00
	.byte	$18
	.byte	$CC
	.byte	$02
	.byte	$08
	.byte	$18
	.byte	$CD
	.byte	$02
	.byte	$10
	.byte	$18
	.byte	$CE
	.byte	$02
	.byte	$80
_ssboss_01_b:
	.byte	$F8
	.byte	$00
	.byte	$C5
	.byte	$42
	.byte	$00
	.byte	$00
	.byte	$B7
	.byte	$42
	.byte	$08
	.byte	$00
	.byte	$B6
	.byte	$42
	.byte	$10
	.byte	$00
	.byte	$C4
	.byte	$42
	.byte	$F8
	.byte	$08
	.byte	$C7
	.byte	$42
	.byte	$00
	.byte	$08
	.byte	$BB
	.byte	$42
	.byte	$08
	.byte	$08
	.byte	$BA
	.byte	$42
	.byte	$10
	.byte	$08
	.byte	$C6
	.byte	$42
	.byte	$F8
	.byte	$10
	.byte	$CB
	.byte	$42
	.byte	$00
	.byte	$10
	.byte	$CA
	.byte	$42
	.byte	$08
	.byte	$10
	.byte	$C9
	.byte	$42
	.byte	$10
	.byte	$10
	.byte	$C8
	.byte	$42
	.byte	$F8
	.byte	$18
	.byte	$CE
	.byte	$42
	.byte	$00
	.byte	$18
	.byte	$CD
	.byte	$42
	.byte	$08
	.byte	$18
	.byte	$CC
	.byte	$42
	.byte	$80
_spr_enems_1:
	.addr	_ssena_00_a
	.addr	_ssena_01_a
	.addr	_ssena_00_b
	.addr	_ssena_01_b
	.addr	_ssenc_00
	.addr	_ssenc_01
	.addr	_ssenc_00
	.addr	_ssenc_01
	.addr	_ssenb_00
	.addr	_ssenb_01
	.addr	_ssenb_02
	.addr	_ssenb_03
	.addr	_ssenc_06
	.addr	_ssenc_07
	.addr	_ssenc_06
	.addr	_ssenc_07
	.addr	_ssenc_02
	.addr	_ssenc_03
	.addr	_ssend_00
	.addr	_ssend_01
	.addr	_ssend_02
	.addr	_ssend_01
	.addr	_ssboss_00_a
	.addr	_ssboss_01_a
	.addr	_ssboss_00_b
	.addr	_ssboss_01_b
_spr_player_0:
	.addr	_sspla_00_a
	.addr	_sspla_01_a
	.addr	_sspla_02_a
	.addr	_sspla_03_a
	.addr	_sspla_04_a
	.addr	_sspla_05_a
	.word	$0000
	.addr	_ssplb_06
	.addr	_sspla_00_b
	.addr	_sspla_01_b
	.addr	_sspla_02_b
	.addr	_sspla_03_b
	.addr	_sspla_04_b
	.addr	_sspla_05_b
	.word	$0000
	.addr	_ssplb_06
	.addr	_ssplb_00
	.addr	_ssplb_01
	.addr	_ssplb_02
	.addr	_ssplb_03
	.addr	_ssplb_04
	.addr	_ssplb_05
	.addr	_ssplb_05
	.addr	_ssplb_04
	.addr	_ssplb_03
	.addr	_ssplb_02
	.addr	_ssplb_01
	.addr	_ssplb_00
	.addr	_ssplb_06
	.addr	_ssplb_06
	.addr	_ssplb_06
	.addr	_ssplb_06
	.addr	_ssplb_06
	.addr	_ssplb_06
	.addr	_ssplb_06
_spr_items:
	.addr	_ssit_00
	.addr	_ssit_01
	.addr	_ssit_02
	.addr	_ssit_03
	.addr	_ssit_04
	.addr	_ssit_05
	.addr	_ssit_06
	.addr	_ssit_07
	.addr	_ssit_08
	.word	$0000
	.addr	_ssit_0A
_sprplempty:
	.byte	$FC
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$F8
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FC
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$04
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$80
_behs0:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
_behs1:
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$01
	.byte	$00
	.byte	$04
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
_behs2:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$28
	.byte	$29
	.byte	$01
	.byte	$01
	.byte	$04
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$44
	.byte	$44
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$01
_l_ts_pals:
	.addr	_ts0_pals
	.addr	_ts2_pals
	.addr	_ts1_pals
_l_ts_tmaps:
	.addr	_ts0_tmaps
	.addr	_ts2_tmaps
	.addr	_ts1_tmaps
_l_behs:
	.addr	_behs0
	.addr	_behs2
	.addr	_behs1
_l_scr_ini:
	.byte	$00
	.byte	$01
	.byte	$18
_l_map:
	.addr	_map_0
	.addr	_map_2
	.addr	_map_1
_l_decos:
	.addr	_map_0_decos
	.addr	_map_2_decos
	.addr	_map_1_decos
_l_enems:
	.addr	_enems_0
	.addr	_enems_2
	.addr	_enems_1
_l_pal_bgs:
	.addr	_palts0
	.addr	_palts2
	.addr	_palts1
_l_map_w:
	.byte	$05
	.byte	$05
	.byte	$06
_player_ini_x:
	.byte	$01
	.byte	$01
	.byte	$01
_player_ini_y:
	.byte	$05
	.byte	$03
	.byte	$03
_l_music:
	.byte	$01
	.byte	$00
	.byte	$02
_title_rle:
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$6E
	.byte	$6F
	.byte	$6E
	.byte	$44
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$6E
	.byte	$6E
	.byte	$6F
	.byte	$44
	.byte	$C1
	.byte	$00
	.byte	$00
	.byte	$C1
	.byte	$00
	.byte	$01
	.byte	$06
	.byte	$72
	.byte	$6F
	.byte	$6E
	.byte	$6F
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$6E
	.byte	$70
	.byte	$71
	.byte	$70
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$49
	.byte	$71
	.byte	$70
	.byte	$71
	.byte	$70
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$6F
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$70
	.byte	$71
	.byte	$70
	.byte	$71
	.byte	$70
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$6E
	.byte	$6F
	.byte	$57
	.byte	$00
	.byte	$01
	.byte	$04
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$72
	.byte	$73
	.byte	$00
	.byte	$00
	.byte	$C1
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$AB
	.byte	$AB
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$00
	.byte	$74
	.byte	$75
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$AB
	.byte	$AB
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$72
	.byte	$73
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$6E
	.byte	$90
	.byte	$86
	.byte	$86
	.byte	$90
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$6F
	.byte	$72
	.byte	$73
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$74
	.byte	$75
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$70
	.byte	$92
	.byte	$87
	.byte	$87
	.byte	$92
	.byte	$71
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$00
	.byte	$74
	.byte	$75
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$71
	.byte	$56
	.byte	$57
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$88
	.byte	$89
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$00
	.byte	$72
	.byte	$73
	.byte	$58
	.byte	$59
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$70
	.byte	$71
	.byte	$C1
	.byte	$8A
	.byte	$8B
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$00
	.byte	$48
	.byte	$71
	.byte	$6F
	.byte	$6E
	.byte	$70
	.byte	$49
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$71
	.byte	$00
	.byte	$01
	.byte	$06
	.byte	$48
	.byte	$6E
	.byte	$6F
	.byte	$73
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$72
	.byte	$73
	.byte	$00
	.byte	$00
	.byte	$70
	.byte	$6F
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$48
	.byte	$6A
	.byte	$6B
	.byte	$49
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$9A
	.byte	$9B
	.byte	$6E
	.byte	$6F
	.byte	$6E
	.byte	$6F
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$48
	.byte	$71
	.byte	$70
	.byte	$75
	.byte	$00
	.byte	$00
	.byte	$74
	.byte	$75
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$71
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$6C
	.byte	$6D
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$9C
	.byte	$9D
	.byte	$70
	.byte	$71
	.byte	$70
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$9B
	.byte	$B0
	.byte	$0C
	.byte	$03
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$02
	.byte	$08
	.byte	$00
	.byte	$01
	.byte	$19
	.byte	$01
	.byte	$00
_ending_rle:
	.byte	$02
	.byte	$00
	.byte	$02
	.byte	$C7
	.byte	$E3
	.byte	$00
	.byte	$00
	.byte	$A9
	.byte	$AB
	.byte	$AC
	.byte	$AF
	.byte	$00
	.byte	$00
	.byte	$B1
	.byte	$B4
	.byte	$B5
	.byte	$B6
	.byte	$B5
	.byte	$B7
	.byte	$B5
	.byte	$00
	.byte	$02
	.byte	$12
	.byte	$AA
	.byte	$AD
	.byte	$AE
	.byte	$B0
	.byte	$00
	.byte	$B2
	.byte	$B3
	.byte	$B6
	.byte	$B5
	.byte	$B5
	.byte	$B6
	.byte	$6F
	.byte	$B5
	.byte	$00
	.byte	$02
	.byte	$11
	.byte	$B8
	.byte	$B9
	.byte	$BC
	.byte	$BD
	.byte	$C0
	.byte	$00
	.byte	$C2
	.byte	$C3
	.byte	$C3
	.byte	$C5
	.byte	$C3
	.byte	$C8
	.byte	$6F
	.byte	$C3
	.byte	$00
	.byte	$02
	.byte	$11
	.byte	$BA
	.byte	$BB
	.byte	$BE
	.byte	$BF
	.byte	$C1
	.byte	$00
	.byte	$C4
	.byte	$70
	.byte	$C6
	.byte	$C7
	.byte	$C9
	.byte	$C7
	.byte	$6F
	.byte	$C6
	.byte	$00
	.byte	$02
	.byte	$11
	.byte	$CA
	.byte	$CB
	.byte	$CE
	.byte	$CF
	.byte	$D2
	.byte	$00
	.byte	$D3
	.byte	$6F
	.byte	$02
	.byte	$06
	.byte	$00
	.byte	$02
	.byte	$11
	.byte	$CC
	.byte	$CD
	.byte	$D0
	.byte	$D1
	.byte	$00
	.byte	$00
	.byte	$D4
	.byte	$D5
	.byte	$6F
	.byte	$02
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$12
	.byte	$D6
	.byte	$D8
	.byte	$D9
	.byte	$00
	.byte	$02
	.byte	$03
	.byte	$DC
	.byte	$6F
	.byte	$02
	.byte	$04
	.byte	$00
	.byte	$02
	.byte	$12
	.byte	$D7
	.byte	$DA
	.byte	$DB
	.byte	$00
	.byte	$02
	.byte	$04
	.byte	$DC
	.byte	$6F
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$02
	.byte	$FE
	.byte	$00
	.byte	$02
	.byte	$FE
	.byte	$00
	.byte	$02
	.byte	$13
	.byte	$60
	.byte	$50
	.byte	$A0
	.byte	$A0
	.byte	$00
	.byte	$02
	.byte	$03
	.byte	$44
	.byte	$55
	.byte	$5A
	.byte	$5A
	.byte	$00
	.byte	$02
	.byte	$03
	.byte	$04
	.byte	$01
	.byte	$04
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$21
	.byte	$02
	.byte	$00
_hud_rle:
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$1F
	.byte	$44
	.byte	$45
	.byte	$01
	.byte	$1D
	.byte	$46
	.byte	$47
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$3E
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$2F
	.byte	$22
	.byte	$2A
	.byte	$3E
	.byte	$00
	.byte	$01
	.byte	$0D
	.byte	$47
	.byte	$48
	.byte	$45
	.byte	$01
	.byte	$1D
	.byte	$49
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$42
	.byte	$01
	.byte	$00
_eat1:
	.byte	$43,$41,$52,$54,$45,$4C,$3A,$20,$55,$53,$41,$25,$45,$53,$41,$20
	.byte	$42,$41,$4C,$44,$4F,$53,$41,$25,$43,$4F,$4E,$20,$43,$4F,$52,$41
	.byte	$5A,$4F,$4E,$45,$53,$25,$50,$41,$52,$41,$20,$52,$45,$43,$55,$50
	.byte	$45,$52,$41,$52,$25,$54,$55,$20,$4D,$4F,$4A,$4F,$21,$00
_eat2:
	.byte	$43,$41,$52,$54,$45,$4C,$3A,$20,$50,$45,$47,$41,$54,$45,$25,$41
	.byte	$4C,$20,$43,$4F,$52,$41,$5A,$4F,$4E,$2E,$2E,$2E,$00
_eat3:
	.byte	$59,$41,$20,$48,$45,$20,$41,$43,$54,$49,$56,$41,$44,$4F,$25,$45
	.byte	$53,$54,$41,$20,$54,$52,$41,$4D,$50,$41,$2E,$00
_eat4:
	.byte	$45,$53,$54,$4F,$20,$48,$41,$43,$45,$20,$46,$55,$4E,$2D,$25,$43
	.byte	$49,$4F,$4E,$41,$52,$20,$41,$4C,$47,$4F,$2C,$25,$50,$45,$52,$4F
	.byte	$20,$4E,$45,$43,$45,$53,$49,$54,$4F,$25,$55,$4E,$41,$20,$50,$41
	.byte	$4C,$41,$4E,$43,$41,$25,$45,$4E,$20,$45,$53,$54,$45,$20,$48,$55
	.byte	$45,$43,$4F,$2E,$00
_eat5:
	.byte	$43,$41,$52,$54,$45,$4C,$3A,$20,$50,$55,$4C,$53,$41,$52,$25,$4C
	.byte	$4F,$53,$20,$44,$4F,$53,$20,$42,$4F,$54,$4F,$2D,$25,$4E,$45,$53
	.byte	$20,$41,$20,$4C,$41,$20,$56,$45,$5A,$2E,$00
_eat6:
	.byte	$4D,$41,$4E,$54,$45,$4E,$49,$4D,$49,$45,$4E,$54,$4F,$3A,$25,$48
	.byte	$41,$59,$20,$54,$52,$45,$53,$25,$50,$49,$45,$5A,$41,$53,$20,$51
	.byte	$55,$45,$25,$52,$45,$4D,$50,$4C,$41,$5A,$41,$52,$2E,$00
_eat7:
	.byte	$4D,$41,$4E,$54,$45,$4E,$49,$4D,$49,$45,$4E,$54,$4F,$3A,$25,$50
	.byte	$49,$45,$5A,$41,$20,$44,$45,$20,$4D,$4F,$54,$4F,$52,$25,$4D,$41
	.byte	$4E,$45,$4A,$41,$52,$20,$43,$4F,$4E,$25,$43,$55,$49,$44,$41,$44
	.byte	$4F,$2E,$00
_eat8:
	.byte	$50,$4F,$52,$20,$41,$51,$55,$49,$20,$50,$41,$52,$41,$25,$56,$4F
	.byte	$4C,$56,$45,$52,$2E,$00
_eat9:
	.byte	$50,$55,$4C,$53,$4F,$20,$45,$4C,$20,$42,$4F,$54,$4F,$4E,$25,$50
	.byte	$45,$52,$4F,$20,$4E,$4F,$20,$50,$41,$53,$41,$25,$4E,$41,$44,$41
	.byte	$2E,$2E,$2E,$00
_eat10:
	.byte	$45,$4C,$20,$4D,$4F,$54,$4F,$52,$20,$48,$41,$25,$41,$52,$52,$41
	.byte	$4E,$43,$41,$44,$4F,$20,$50,$45,$52,$4F,$25,$4E,$4F,$20,$56,$41
	.byte	$20,$42,$49,$45,$4E,$2E,$2E,$2E,$00
_eat11:
	.byte	$41,$20,$4C,$4F,$20,$4D,$45,$4A,$4F,$52,$20,$48,$45,$25,$50,$55
	.byte	$45,$53,$54,$4F,$20,$4D,$41,$4C,$20,$41,$4C,$2D,$25,$47,$55,$4E
	.byte	$41,$20,$50,$49,$45,$5A,$41,$20,$4D,$41,$4C,$2E,$00
_eat12:
	.byte	$4D,$41,$4E,$54,$45,$4E,$49,$4D,$49,$45,$4E,$54,$4F,$3A,$25,$48
	.byte	$41,$59,$20,$51,$55,$45,$20,$41,$52,$52,$45,$2D,$25,$47,$4C,$41
	.byte	$52,$20,$4C,$4F,$53,$20,$43,$41,$52,$2D,$25,$54,$45,$4C,$45,$53
	.byte	$2E,$00
_eat13:
	.byte	$46,$55,$4E,$43,$49,$4F,$4E,$41,$21,$00
_eat14:
	.byte	$49,$4E,$53,$54,$52,$55,$43,$43,$49,$4F,$4E,$45,$53,$3A,$25,$5B
	.byte	$41,$5D,$20,$53,$41,$4C,$54,$41,$52,$25,$5B,$42,$5D,$20,$45,$45
	.byte	$45,$48,$2E,$2E,$2E,$00
_eat15:
	.byte	$50,$55,$45,$44,$45,$53,$20,$53,$41,$4C,$54,$41,$52,$25,$53,$4F
	.byte	$42,$52,$45,$20,$4C,$4F,$53,$20,$54,$49,$4F,$53,$25,$4D,$41,$4C
	.byte	$4F,$53,$2E,$00
_eat16:
	.byte	$45,$4C,$20,$4D,$4F,$43,$4F,$20,$56,$45,$52,$44,$45,$25,$48,$41
	.byte	$43,$45,$20,$50,$55,$50,$41,$20,$4D,$41,$4C,$41,$25,$45,$56,$49
	.byte	$54,$41,$4C,$4F,$2E,$00
_eat17:
	.byte	$50,$55,$45,$44,$45,$53,$20,$4C,$4C,$45,$56,$41,$52,$25,$55,$4E
	.byte	$20,$4F,$42,$4A,$45,$54,$4F,$2E,$25,$5B,$42,$5D,$20,$50,$41,$52
	.byte	$41,$20,$43,$4F,$47,$45,$52,$25,$45,$53,$41,$20,$50,$41,$4C,$41
	.byte	$4E,$43,$41,$2E,$00
_eat18:
	.byte	$55,$53,$41,$20,$4C,$41,$20,$50,$41,$4C,$41,$4E,$43,$41,$25,$45
	.byte	$4E,$20,$45,$53,$45,$20,$41,$47,$55,$4A,$45,$52,$4F,$25,$50,$55
	.byte	$4C,$53,$41,$4E,$44,$4F,$20,$5B,$42,$5D,$2E,$00
_eat19:
	.byte	$4C,$4F,$53,$20,$4D,$41,$4C,$4F,$53,$20,$53,$45,$25,$4D,$55,$45
	.byte	$52,$45,$4E,$20,$53,$49,$20,$54,$4F,$2D,$25,$43,$41,$4E,$20,$45
	.byte	$4C,$20,$4D,$4F,$43,$4F,$2E,$00
_eat20:
	.byte	$4C,$4F,$53,$20,$4D,$55,$52,$43,$49,$53,$20,$53,$4F,$4E,$25,$52
	.byte	$41,$50,$49,$44,$4F,$53,$2E,$20,$4D,$45,$4A,$4F,$52,$25,$4E,$45
	.byte	$55,$54,$52,$41,$4C,$49,$5A,$41,$52,$4C,$4F,$53,$25,$50,$52,$49
	.byte	$4D,$45,$52,$4F,$2E,$00
_eat21:
	.byte	$4E,$55,$4E,$43,$41,$20,$41,$4E,$44,$45,$53,$25,$53,$4F,$42,$52
	.byte	$45,$20,$55,$4E,$41,$20,$4C,$4F,$53,$41,$25,$43,$4F,$4E,$20,$55
	.byte	$4E,$41,$20,$43,$41,$4E,$49,$4E,$41,$00
_eat22:
	.byte	$41,$48,$4F,$52,$41,$20,$45,$4D,$50,$49,$45,$5A,$41,$25,$4C,$41
	.byte	$20,$41,$56,$45,$4E,$54,$55,$52,$41,$21,$00
_eat23:
	.byte	$4D,$41,$4E,$54,$45,$4E,$49,$4D,$49,$45,$4E,$54,$4F,$3A,$25,$41
	.byte	$52,$52,$45,$47,$4C,$45,$20,$4C,$4F,$53,$25,$56,$45,$4E,$54,$49
	.byte	$4C,$41,$44,$4F,$52,$45,$53,$2E,$25,$55,$53,$41,$4C,$4F,$53,$2C
	.byte	$20,$45,$53,$20,$4D,$55,$59,$25,$44,$49,$56,$45,$52,$21,$00
_eat24:
	.byte	$4D,$41,$4E,$54,$45,$4E,$49,$4D,$49,$45,$4E,$54,$4F,$3A,$25,$45
	.byte	$4C,$20,$54,$45,$52,$4D,$49,$4E,$41,$4C,$25,$51,$55,$45,$20,$41
	.byte	$42,$52,$45,$20,$45,$53,$54,$41,$25,$43,$41,$4E,$43,$45,$4C,$41
	.byte	$20,$45,$53,$54,$41,$20,$41,$25,$4C,$41,$20,$49,$5A,$51,$55,$49
	.byte	$45,$52,$44,$41,$2E,$00
_eat25:
	.byte	$4D,$41,$4E,$54,$45,$4E,$49,$4D,$49,$45,$4E,$54,$4F,$3A,$25,$55
	.byte	$4E,$41,$20,$55,$4E,$20,$46,$4C,$4F,$50,$50,$59,$25,$50,$41,$52
	.byte	$41,$20,$41,$42,$52,$49,$52,$20,$4C,$41,$25,$43,$41,$4E,$43,$45
	.byte	$4C,$41,$2E,$00
_eat26:
	.byte	$4F,$52,$44,$45,$4E,$41,$44,$4F,$52,$3A,$25,$4C,$41,$20,$43,$41
	.byte	$4E,$43,$45,$4C,$41,$20,$41,$4C,$25,$4E,$49,$56,$45,$4C,$20,$49
	.byte	$4E,$46,$45,$52,$49,$4F,$52,$25,$45,$53,$54,$41,$20,$41,$42,$49
	.byte	$45,$52,$54,$41,$2E,$00
_eat27:
	.byte	$50,$55,$45,$44,$45,$53,$20,$4F,$49,$52,$20,$45,$4C,$25,$53,$4F
	.byte	$4E,$49,$44,$4F,$20,$44,$45,$20,$55,$4E,$25,$4D,$4F,$54,$4F,$52
	.byte	$20,$48,$49,$44,$52,$41,$55,$2D,$25,$4C,$49,$43,$4F,$20,$43,$45
	.byte	$52,$43,$41,$2E,$00
_eat28:
	.byte	$43,$55,$49,$44,$41,$44,$4F,$20,$43,$4F,$4E,$20,$4C,$41,$25,$53
	.byte	$49,$45,$52,$52,$41,$20,$44,$45,$4C,$20,$50,$49,$2D,$25,$53,$4F
	.byte	$20,$44,$45,$20,$41,$52,$52,$49,$42,$41,$21,$00
_eat29:
	.byte	$45,$53,$54,$45,$20,$41,$43,$54,$49,$56,$41,$25,$44,$4F,$53,$20
	.byte	$43,$4F,$4D,$50,$55,$45,$52,$54,$41,$53,$00
_eat30:
	.byte	$45,$53,$54,$45,$20,$41,$43,$54,$49,$56,$41,$25,$55,$4E,$41,$20
	.byte	$43,$4F,$4D,$50,$55,$45,$52,$54,$41,$00
_eat31:
	.byte	$49,$4C,$45,$47,$49,$42,$4C,$45,$00
_extern_action_texts:
	.word	$0000
	.addr	_eat1
	.addr	_eat2
	.addr	_eat3
	.addr	_eat4
	.addr	_eat5
	.addr	_eat6
	.addr	_eat7
	.addr	_eat8
	.addr	_eat9
	.addr	_eat10
	.addr	_eat11
	.addr	_eat12
	.addr	_eat13
	.addr	_eat14
	.addr	_eat15
	.addr	_eat16
	.addr	_eat17
	.addr	_eat18
	.addr	_eat19
	.addr	_eat20
	.addr	_eat21
	.addr	_eat22
	.addr	_eat23
	.addr	_eat24
	.addr	_eat25
	.addr	_eat26
	.addr	_eat27
	.addr	_eat28
	.addr	_eat29
	.addr	_eat30
	.addr	_eat31
_stbf:
	.byte	$2D
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2E
	.byte	$2F
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$31
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$31
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$31
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$31
	.byte	$32
	.byte	$33
	.byte	$33
	.byte	$33
	.byte	$33
	.byte	$33
	.byte	$33
	.byte	$34
_script_LEVEL0_pfire_at_0:
	.byte	$07
	.byte	$20
	.byte	$04
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$0E
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_1:
	.byte	$07
	.byte	$20
	.byte	$06
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_2:
	.byte	$07
	.byte	$20
	.byte	$03
	.byte	$09
	.byte	$FF
	.byte	$E4
	.byte	$10
	.byte	$FF
	.byte	$FF
_script_LEVEL0_entering_3:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_3:
	.byte	$07
	.byte	$20
	.byte	$01
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$11
	.byte	$FF
	.byte	$FF
_script_LEVEL0_entering_4:
	.byte	$0D
	.byte	$10
	.byte	$01
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$7B
	.byte	$0B
	.byte	$8B
	.byte	$0B
	.byte	$9B
	.byte	$0B
	.byte	$FF
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_4:
	.byte	$07
	.byte	$20
	.byte	$05
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$12
	.byte	$FF
	.byte	$16
	.byte	$20
	.byte	$0B
	.byte	$0B
	.byte	$10
	.byte	$00
	.byte	$07
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$F4
	.byte	$7B
	.byte	$0B
	.byte	$8B
	.byte	$0B
	.byte	$9B
	.byte	$0B
	.byte	$FF
	.byte	$1A
	.byte	$00
	.byte	$19
	.byte	$01
	.byte	$FF
	.byte	$FF
_script_LEVEL0_entering_5:
	.byte	$08
	.byte	$F0
	.byte	$FF
	.byte	$51
	.byte	$00
	.byte	$61
	.byte	$0F
	.byte	$AF
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_5:
	.byte	$07
	.byte	$20
	.byte	$07
	.byte	$0A
	.byte	$FF
	.byte	$E4
	.byte	$16
	.byte	$FF
	.byte	$06
	.byte	$21
	.byte	$00
	.byte	$0F
	.byte	$FF
	.byte	$F1
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_7:
	.byte	$07
	.byte	$20
	.byte	$0B
	.byte	$08
	.byte	$FF
	.byte	$E4
	.byte	$15
	.byte	$FF
	.byte	$FF
_script_LEVEL0_entering_8:
	.byte	$05
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_8:
	.byte	$07
	.byte	$20
	.byte	$0E
	.byte	$08
	.byte	$FF
	.byte	$E4
	.byte	$14
	.byte	$FF
	.byte	$12
	.byte	$20
	.byte	$0B
	.byte	$0A
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$F4
	.byte	$83
	.byte	$1B
	.byte	$84
	.byte	$1B
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$19
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL0_pfire_at_9:
	.byte	$07
	.byte	$20
	.byte	$0A
	.byte	$05
	.byte	$FF
	.byte	$E4
	.byte	$13
	.byte	$FF
	.byte	$FF
_script_LEVEL0_entering_game:
	.byte	$0B
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$07
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_pool_LEVEL0:
	.word	$0000
	.addr	_script_LEVEL0_pfire_at_0
	.word	$0000
	.addr	_script_LEVEL0_pfire_at_1
	.word	$0000
	.addr	_script_LEVEL0_pfire_at_2
	.addr	_script_LEVEL0_entering_3
	.addr	_script_LEVEL0_pfire_at_3
	.addr	_script_LEVEL0_entering_4
	.addr	_script_LEVEL0_pfire_at_4
	.addr	_script_LEVEL0_entering_5
	.addr	_script_LEVEL0_pfire_at_5
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL0_pfire_at_7
	.addr	_script_LEVEL0_entering_8
	.addr	_script_LEVEL0_pfire_at_8
	.word	$0000
	.addr	_script_LEVEL0_pfire_at_9
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL0_entering_game
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
_script_LEVEL1_pfire_at_1:
	.byte	$07
	.byte	$20
	.byte	$02
	.byte	$09
	.byte	$FF
	.byte	$E4
	.byte	$17
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_9:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$01
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_10:
	.byte	$07
	.byte	$20
	.byte	$07
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$19
	.byte	$FF
	.byte	$13
	.byte	$20
	.byte	$04
	.byte	$0A
	.byte	$10
	.byte	$00
	.byte	$0A
	.byte	$10
	.byte	$04
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$04
	.byte	$1A
	.byte	$00
	.byte	$E4
	.byte	$1A
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_11:
	.byte	$1B
	.byte	$10
	.byte	$04
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$3B
	.byte	$0B
	.byte	$4B
	.byte	$0B
	.byte	$5B
	.byte	$0B
	.byte	$6B
	.byte	$00
	.byte	$7B
	.byte	$00
	.byte	$8B
	.byte	$00
	.byte	$9B
	.byte	$0A
	.byte	$AB
	.byte	$00
	.byte	$BB
	.byte	$00
	.byte	$CB
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_11:
	.byte	$07
	.byte	$20
	.byte	$02
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$18
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_15:
	.byte	$07
	.byte	$20
	.byte	$07
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$19
	.byte	$FF
	.byte	$13
	.byte	$20
	.byte	$04
	.byte	$0A
	.byte	$10
	.byte	$00
	.byte	$0A
	.byte	$10
	.byte	$05
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$05
	.byte	$1A
	.byte	$00
	.byte	$E4
	.byte	$1A
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_16:
	.byte	$1B
	.byte	$10
	.byte	$05
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$3B
	.byte	$00
	.byte	$4B
	.byte	$02
	.byte	$5B
	.byte	$01
	.byte	$6B
	.byte	$00
	.byte	$7B
	.byte	$00
	.byte	$8B
	.byte	$00
	.byte	$9B
	.byte	$00
	.byte	$AB
	.byte	$01
	.byte	$BB
	.byte	$03
	.byte	$CB
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_18:
	.byte	$09
	.byte	$10
	.byte	$08
	.byte	$01
	.byte	$FF
	.byte	$20
	.byte	$0F
	.byte	$0A
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_18:
	.byte	$10
	.byte	$20
	.byte	$02
	.byte	$0B
	.byte	$10
	.byte	$08
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$08
	.byte	$E0
	.byte	$06
	.byte	$20
	.byte	$0F
	.byte	$0A
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_19:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$02
	.byte	$0E
	.byte	$05
	.byte	$FF
	.byte	$1F
	.byte	$10
	.byte	$07
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$54
	.byte	$08
	.byte	$64
	.byte	$08
	.byte	$74
	.byte	$08
	.byte	$84
	.byte	$08
	.byte	$55
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$75
	.byte	$00
	.byte	$85
	.byte	$00
	.byte	$56
	.byte	$0B
	.byte	$66
	.byte	$0B
	.byte	$76
	.byte	$0B
	.byte	$86
	.byte	$0B
	.byte	$FF
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_20:
	.byte	$07
	.byte	$20
	.byte	$07
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$19
	.byte	$FF
	.byte	$13
	.byte	$20
	.byte	$04
	.byte	$0A
	.byte	$10
	.byte	$00
	.byte	$0A
	.byte	$10
	.byte	$06
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$06
	.byte	$1A
	.byte	$00
	.byte	$E4
	.byte	$1A
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_21:
	.byte	$1B
	.byte	$10
	.byte	$06
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$3B
	.byte	$0A
	.byte	$4B
	.byte	$00
	.byte	$5B
	.byte	$0A
	.byte	$6B
	.byte	$00
	.byte	$7B
	.byte	$0A
	.byte	$8B
	.byte	$00
	.byte	$9B
	.byte	$0A
	.byte	$AB
	.byte	$00
	.byte	$BB
	.byte	$0A
	.byte	$CB
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_21:
	.byte	$08
	.byte	$20
	.byte	$06
	.byte	$02
	.byte	$FF
	.byte	$E2
	.byte	$E0
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_22:
	.byte	$08
	.byte	$20
	.byte	$04
	.byte	$05
	.byte	$FF
	.byte	$E4
	.byte	$1D
	.byte	$F2
	.byte	$FF
	.byte	$08
	.byte	$20
	.byte	$07
	.byte	$05
	.byte	$FF
	.byte	$E4
	.byte	$1E
	.byte	$F2
	.byte	$FF
	.byte	$08
	.byte	$20
	.byte	$0A
	.byte	$05
	.byte	$FF
	.byte	$E4
	.byte	$1F
	.byte	$F2
	.byte	$FF
	.byte	$0B
	.byte	$20
	.byte	$03
	.byte	$05
	.byte	$FF
	.byte	$15
	.byte	$10
	.byte	$15
	.byte	$11
	.byte	$E4
	.byte	$1B
	.byte	$FF
	.byte	$09
	.byte	$20
	.byte	$06
	.byte	$05
	.byte	$FF
	.byte	$15
	.byte	$10
	.byte	$E4
	.byte	$1B
	.byte	$FF
	.byte	$09
	.byte	$20
	.byte	$09
	.byte	$05
	.byte	$FF
	.byte	$19
	.byte	$11
	.byte	$E4
	.byte	$1B
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_23:
	.byte	$09
	.byte	$10
	.byte	$09
	.byte	$01
	.byte	$FF
	.byte	$20
	.byte	$05
	.byte	$06
	.byte	$00
	.byte	$FF
	.byte	$09
	.byte	$10
	.byte	$0A
	.byte	$01
	.byte	$FF
	.byte	$20
	.byte	$05
	.byte	$05
	.byte	$00
	.byte	$FF
	.byte	$09
	.byte	$10
	.byte	$0B
	.byte	$01
	.byte	$FF
	.byte	$20
	.byte	$05
	.byte	$04
	.byte	$00
	.byte	$FF
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$03
	.byte	$0C
	.byte	$03
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_23:
	.byte	$08
	.byte	$20
	.byte	$0D
	.byte	$0A
	.byte	$FF
	.byte	$E2
	.byte	$E0
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_24:
	.byte	$0E
	.byte	$20
	.byte	$0B
	.byte	$0A
	.byte	$10
	.byte	$07
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$07
	.byte	$E0
	.byte	$06
	.byte	$E4
	.byte	$1B
	.byte	$FF
	.byte	$07
	.byte	$20
	.byte	$05
	.byte	$04
	.byte	$FF
	.byte	$E4
	.byte	$1C
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_26:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$0D
	.byte	$07
	.byte	$07
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_26:
	.byte	$06
	.byte	$10
	.byte	$00
	.byte	$01
	.byte	$FF
	.byte	$F1
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_27:
	.byte	$0F
	.byte	$10
	.byte	$10
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$41
	.byte	$0A
	.byte	$42
	.byte	$0A
	.byte	$49
	.byte	$19
	.byte	$4A
	.byte	$19
	.byte	$FF
	.byte	$FF
	.byte	$0F
	.byte	$10
	.byte	$11
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$61
	.byte	$0A
	.byte	$62
	.byte	$0A
	.byte	$69
	.byte	$19
	.byte	$6A
	.byte	$19
	.byte	$FF
	.byte	$FF
	.byte	$09
	.byte	$10
	.byte	$09
	.byte	$01
	.byte	$FF
	.byte	$20
	.byte	$02
	.byte	$03
	.byte	$1B
	.byte	$FF
	.byte	$09
	.byte	$10
	.byte	$0A
	.byte	$01
	.byte	$FF
	.byte	$20
	.byte	$02
	.byte	$07
	.byte	$1B
	.byte	$FF
	.byte	$09
	.byte	$10
	.byte	$0B
	.byte	$01
	.byte	$FF
	.byte	$20
	.byte	$02
	.byte	$0B
	.byte	$1B
	.byte	$FF
	.byte	$FF
_script_LEVEL1_pfire_at_27:
	.byte	$12
	.byte	$20
	.byte	$02
	.byte	$03
	.byte	$10
	.byte	$09
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$09
	.byte	$20
	.byte	$02
	.byte	$03
	.byte	$1B
	.byte	$E4
	.byte	$1B
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$12
	.byte	$20
	.byte	$02
	.byte	$07
	.byte	$10
	.byte	$0A
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$0A
	.byte	$20
	.byte	$02
	.byte	$07
	.byte	$1B
	.byte	$E4
	.byte	$1B
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$12
	.byte	$20
	.byte	$02
	.byte	$0B
	.byte	$10
	.byte	$0B
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$0B
	.byte	$20
	.byte	$02
	.byte	$0B
	.byte	$1B
	.byte	$E4
	.byte	$1B
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL1_entering_game:
	.byte	$22
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$0A
	.byte	$01
	.byte	$02
	.byte	$0A
	.byte	$01
	.byte	$03
	.byte	$0A
	.byte	$19
	.byte	$0D
	.byte	$1A
	.byte	$04
	.byte	$1A
	.byte	$05
	.byte	$1A
	.byte	$06
	.byte	$1A
	.byte	$07
	.byte	$1A
	.byte	$08
	.byte	$1A
	.byte	$09
	.byte	$1A
	.byte	$0A
	.byte	$1A
	.byte	$0B
	.byte	$19
	.byte	$11
	.byte	$FF
	.byte	$FF
_script_pool_LEVEL1:
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_pfire_at_1
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_entering_9
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_pfire_at_10
	.addr	_script_LEVEL1_entering_11
	.addr	_script_LEVEL1_pfire_at_11
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_pfire_at_15
	.addr	_script_LEVEL1_entering_16
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_entering_18
	.addr	_script_LEVEL1_pfire_at_18
	.addr	_script_LEVEL1_entering_19
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_pfire_at_20
	.addr	_script_LEVEL1_entering_21
	.addr	_script_LEVEL1_pfire_at_21
	.word	$0000
	.addr	_script_LEVEL1_pfire_at_22
	.addr	_script_LEVEL1_entering_23
	.addr	_script_LEVEL1_pfire_at_23
	.word	$0000
	.addr	_script_LEVEL1_pfire_at_24
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_entering_26
	.addr	_script_LEVEL1_pfire_at_26
	.addr	_script_LEVEL1_entering_27
	.addr	_script_LEVEL1_pfire_at_27
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL1_entering_game
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
_script_LEVEL2_entering_2:
	.byte	$05
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_2:
	.byte	$0D
	.byte	$20
	.byte	$0A
	.byte	$06
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$00
	.byte	$19
	.byte	$0F
	.byte	$F2
	.byte	$FF
	.byte	$0E
	.byte	$20
	.byte	$07
	.byte	$06
	.byte	$10
	.byte	$0F
	.byte	$01
	.byte	$FF
	.byte	$E0
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$02
	.byte	$F2
	.byte	$FF
	.byte	$0D
	.byte	$20
	.byte	$04
	.byte	$06
	.byte	$10
	.byte	$0F
	.byte	$02
	.byte	$FF
	.byte	$E0
	.byte	$00
	.byte	$01
	.byte	$0F
	.byte	$03
	.byte	$FF
	.byte	$10
	.byte	$13
	.byte	$0F
	.byte	$03
	.byte	$FF
	.byte	$F4
	.byte	$46
	.byte	$0D
	.byte	$76
	.byte	$0D
	.byte	$A6
	.byte	$0D
	.byte	$FF
	.byte	$E0
	.byte	$02
	.byte	$F2
	.byte	$FF
	.byte	$09
	.byte	$F0
	.byte	$FF
	.byte	$20
	.byte	$0E
	.byte	$0A
	.byte	$00
	.byte	$E0
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_3:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$03
	.byte	$0C
	.byte	$09
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_3:
	.byte	$07
	.byte	$20
	.byte	$08
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$07
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_4:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$01
	.byte	$02
	.byte	$09
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_4:
	.byte	$07
	.byte	$20
	.byte	$07
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$07
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_5:
	.byte	$0C
	.byte	$F0
	.byte	$FF
	.byte	$01
	.byte	$0F
	.byte	$02
	.byte	$01
	.byte	$0E
	.byte	$04
	.byte	$01
	.byte	$0D
	.byte	$03
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_5:
	.byte	$1F
	.byte	$20
	.byte	$05
	.byte	$0A
	.byte	$FF
	.byte	$20
	.byte	$05
	.byte	$8F
	.byte	$0D
	.byte	$17
	.byte	$0F
	.byte	$01
	.byte	$05
	.byte	$20
	.byte	$05
	.byte	$8F
	.byte	$00
	.byte	$20
	.byte	$09
	.byte	$8D
	.byte	$0D
	.byte	$17
	.byte	$0D
	.byte	$01
	.byte	$05
	.byte	$20
	.byte	$09
	.byte	$8D
	.byte	$00
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$1F
	.byte	$20
	.byte	$07
	.byte	$0A
	.byte	$FF
	.byte	$20
	.byte	$07
	.byte	$8E
	.byte	$0D
	.byte	$18
	.byte	$0E
	.byte	$01
	.byte	$05
	.byte	$20
	.byte	$07
	.byte	$8E
	.byte	$00
	.byte	$20
	.byte	$09
	.byte	$8D
	.byte	$0D
	.byte	$18
	.byte	$0D
	.byte	$01
	.byte	$05
	.byte	$20
	.byte	$09
	.byte	$8D
	.byte	$00
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$1F
	.byte	$20
	.byte	$09
	.byte	$0A
	.byte	$FF
	.byte	$20
	.byte	$05
	.byte	$8F
	.byte	$0D
	.byte	$17
	.byte	$0F
	.byte	$01
	.byte	$05
	.byte	$20
	.byte	$05
	.byte	$8F
	.byte	$00
	.byte	$20
	.byte	$07
	.byte	$8E
	.byte	$0D
	.byte	$17
	.byte	$0E
	.byte	$01
	.byte	$05
	.byte	$20
	.byte	$07
	.byte	$8E
	.byte	$00
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_6:
	.byte	$07
	.byte	$20
	.byte	$02
	.byte	$06
	.byte	$FF
	.byte	$E4
	.byte	$0C
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_7:
	.byte	$07
	.byte	$20
	.byte	$0B
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$08
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_8:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$02
	.byte	$02
	.byte	$09
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_8:
	.byte	$07
	.byte	$20
	.byte	$06
	.byte	$0A
	.byte	$FF
	.byte	$E4
	.byte	$07
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_9:
	.byte	$0C
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$1A
	.byte	$0D
	.byte	$51
	.byte	$51
	.byte	$41
	.byte	$9F
	.byte	$7F
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_9:
	.byte	$07
	.byte	$20
	.byte	$0C
	.byte	$07
	.byte	$FF
	.byte	$E4
	.byte	$02
	.byte	$FF
	.byte	$13
	.byte	$20
	.byte	$0D
	.byte	$0B
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$0F
	.byte	$F4
	.byte	$15
	.byte	$00
	.byte	$16
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$F2
	.byte	$FF
	.byte	$1D
	.byte	$21
	.byte	$59
	.byte	$6F
	.byte	$22
	.byte	$41
	.byte	$6F
	.byte	$10
	.byte	$0D
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$0D
	.byte	$F4
	.byte	$64
	.byte	$13
	.byte	$65
	.byte	$13
	.byte	$66
	.byte	$13
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$51
	.byte	$21
	.byte	$41
	.byte	$3F
	.byte	$7F
	.byte	$F2
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_10:
	.byte	$05
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_10:
	.byte	$11
	.byte	$20
	.byte	$0A
	.byte	$03
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$F4
	.byte	$12
	.byte	$00
	.byte	$13
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$F2
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_14:
	.byte	$09
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$06
	.byte	$0D
	.byte	$06
	.byte	$1A
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_14:
	.byte	$15
	.byte	$20
	.byte	$04
	.byte	$03
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$F4
	.byte	$64
	.byte	$10
	.byte	$65
	.byte	$0E
	.byte	$42
	.byte	$35
	.byte	$FF
	.byte	$19
	.byte	$0F
	.byte	$E0
	.byte	$06
	.byte	$F2
	.byte	$FF
	.byte	$15
	.byte	$20
	.byte	$04
	.byte	$03
	.byte	$10
	.byte	$0F
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$64
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$42
	.byte	$1E
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$E0
	.byte	$06
	.byte	$F2
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_15:
	.byte	$05
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_15:
	.byte	$1D
	.byte	$20
	.byte	$08
	.byte	$0B
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$F4
	.byte	$C2
	.byte	$0D
	.byte	$C3
	.byte	$09
	.byte	$C4
	.byte	$0D
	.byte	$C5
	.byte	$09
	.byte	$C6
	.byte	$0D
	.byte	$C7
	.byte	$00
	.byte	$8A
	.byte	$35
	.byte	$FF
	.byte	$19
	.byte	$0F
	.byte	$E0
	.byte	$06
	.byte	$F2
	.byte	$FF
	.byte	$1C
	.byte	$20
	.byte	$08
	.byte	$0B
	.byte	$10
	.byte	$0F
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$C2
	.byte	$09
	.byte	$C3
	.byte	$0D
	.byte	$C4
	.byte	$09
	.byte	$C5
	.byte	$0D
	.byte	$C6
	.byte	$09
	.byte	$C7
	.byte	$0D
	.byte	$8A
	.byte	$1E
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_16:
	.byte	$09
	.byte	$F0
	.byte	$FF
	.byte	$01
	.byte	$0F
	.byte	$00
	.byte	$01
	.byte	$0E
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_16:
	.byte	$15
	.byte	$20
	.byte	$09
	.byte	$03
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$F4
	.byte	$92
	.byte	$35
	.byte	$30
	.byte	$00
	.byte	$40
	.byte	$00
	.byte	$50
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$F2
	.byte	$FF
	.byte	$44
	.byte	$20
	.byte	$03
	.byte	$0B
	.byte	$10
	.byte	$0E
	.byte	$00
	.byte	$FF
	.byte	$F4
	.byte	$3A
	.byte	$35
	.byte	$5A
	.byte	$00
	.byte	$6A
	.byte	$00
	.byte	$7A
	.byte	$00
	.byte	$8A
	.byte	$00
	.byte	$9A
	.byte	$00
	.byte	$AA
	.byte	$00
	.byte	$BA
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$E5
	.byte	$19
	.byte	$F4
	.byte	$59
	.byte	$13
	.byte	$5A
	.byte	$13
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$E5
	.byte	$0A
	.byte	$F4
	.byte	$79
	.byte	$13
	.byte	$7A
	.byte	$13
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$E5
	.byte	$0A
	.byte	$F4
	.byte	$99
	.byte	$13
	.byte	$9A
	.byte	$13
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$E5
	.byte	$0A
	.byte	$F4
	.byte	$26
	.byte	$00
	.byte	$27
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_17:
	.byte	$05
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_17:
	.byte	$0B
	.byte	$20
	.byte	$01
	.byte	$0B
	.byte	$10
	.byte	$0F
	.byte	$01
	.byte	$FF
	.byte	$E4
	.byte	$03
	.byte	$F2
	.byte	$FF
	.byte	$27
	.byte	$20
	.byte	$01
	.byte	$0B
	.byte	$10
	.byte	$00
	.byte	$07
	.byte	$FF
	.byte	$F4
	.byte	$15
	.byte	$00
	.byte	$25
	.byte	$00
	.byte	$35
	.byte	$00
	.byte	$45
	.byte	$00
	.byte	$55
	.byte	$00
	.byte	$65
	.byte	$00
	.byte	$75
	.byte	$00
	.byte	$85
	.byte	$00
	.byte	$95
	.byte	$00
	.byte	$A5
	.byte	$00
	.byte	$B5
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$0F
	.byte	$E0
	.byte	$06
	.byte	$1A
	.byte	$00
	.byte	$F2
	.byte	$FF
	.byte	$07
	.byte	$20
	.byte	$01
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$04
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_19:
	.byte	$09
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$05
	.byte	$0D
	.byte	$03
	.byte	$1A
	.byte	$0F
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_19:
	.byte	$15
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$19
	.byte	$0F
	.byte	$F4
	.byte	$86
	.byte	$00
	.byte	$96
	.byte	$00
	.byte	$87
	.byte	$0D
	.byte	$97
	.byte	$1B
	.byte	$1A
	.byte	$35
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_22:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$04
	.byte	$09
	.byte	$08
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_24:
	.byte	$07
	.byte	$20
	.byte	$03
	.byte	$0B
	.byte	$FF
	.byte	$E4
	.byte	$01
	.byte	$FF
	.byte	$08
	.byte	$20
	.byte	$01
	.byte	$0B
	.byte	$FF
	.byte	$E2
	.byte	$E0
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_27:
	.byte	$17
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$07
	.byte	$06
	.byte	$09
	.byte	$86
	.byte	$08
	.byte	$07
	.byte	$09
	.byte	$86
	.byte	$09
	.byte	$08
	.byte	$09
	.byte	$86
	.byte	$10
	.byte	$04
	.byte	$03
	.byte	$86
	.byte	$11
	.byte	$0B
	.byte	$03
	.byte	$FF
	.byte	$0B
	.byte	$10
	.byte	$0B
	.byte	$01
	.byte	$FF
	.byte	$F4
	.byte	$F8
	.byte	$00
	.byte	$F9
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_27:
	.byte	$08
	.byte	$20
	.byte	$02
	.byte	$04
	.byte	$FF
	.byte	$E4
	.byte	$05
	.byte	$F2
	.byte	$FF
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$0A
	.byte	$FF
	.byte	$E4
	.byte	$06
	.byte	$F2
	.byte	$FF
	.byte	$06
	.byte	$10
	.byte	$0B
	.byte	$01
	.byte	$FF
	.byte	$F2
	.byte	$FF
	.byte	$09
	.byte	$F0
	.byte	$FF
	.byte	$01
	.byte	$0F
	.byte	$00
	.byte	$01
	.byte	$0E
	.byte	$00
	.byte	$FF
	.byte	$0E
	.byte	$10
	.byte	$07
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$04
	.byte	$10
	.byte	$09
	.byte	$05
	.byte	$FF
	.byte	$01
	.byte	$0F
	.byte	$01
	.byte	$FF
	.byte	$0B
	.byte	$20
	.byte	$04
	.byte	$04
	.byte	$13
	.byte	$11
	.byte	$06
	.byte	$FF
	.byte	$E4
	.byte	$09
	.byte	$F2
	.byte	$FF
	.byte	$0B
	.byte	$20
	.byte	$0B
	.byte	$04
	.byte	$13
	.byte	$10
	.byte	$06
	.byte	$FF
	.byte	$E4
	.byte	$09
	.byte	$F2
	.byte	$FF
	.byte	$0D
	.byte	$20
	.byte	$04
	.byte	$04
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$E4
	.byte	$0A
	.byte	$E4
	.byte	$0B
	.byte	$F2
	.byte	$FF
	.byte	$0D
	.byte	$20
	.byte	$0B
	.byte	$04
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$E4
	.byte	$0A
	.byte	$E4
	.byte	$0B
	.byte	$F2
	.byte	$FF
	.byte	$08
	.byte	$20
	.byte	$04
	.byte	$04
	.byte	$FF
	.byte	$01
	.byte	$0E
	.byte	$01
	.byte	$FF
	.byte	$08
	.byte	$20
	.byte	$0B
	.byte	$04
	.byte	$FF
	.byte	$01
	.byte	$0E
	.byte	$01
	.byte	$FF
	.byte	$0F
	.byte	$10
	.byte	$0E
	.byte	$01
	.byte	$FF
	.byte	$19
	.byte	$0B
	.byte	$F4
	.byte	$F8
	.byte	$00
	.byte	$F9
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_28:
	.byte	$07
	.byte	$F0
	.byte	$FF
	.byte	$86
	.byte	$0A
	.byte	$0D
	.byte	$0A
	.byte	$FF
	.byte	$0B
	.byte	$10
	.byte	$0A
	.byte	$08
	.byte	$FF
	.byte	$F4
	.byte	$E9
	.byte	$00
	.byte	$EA
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_28:
	.byte	$10
	.byte	$10
	.byte	$0A
	.byte	$08
	.byte	$20
	.byte	$0D
	.byte	$0B
	.byte	$FF
	.byte	$F4
	.byte	$E9
	.byte	$00
	.byte	$EA
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$FF
	.byte	$08
	.byte	$20
	.byte	$0E
	.byte	$07
	.byte	$FF
	.byte	$E2
	.byte	$E0
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_29:
	.byte	$0F
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$1F
	.byte	$51
	.byte	$11
	.byte	$01
	.byte	$2F
	.byte	$BF
	.byte	$E4
	.byte	$7F
	.byte	$01
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$FF
_script_LEVEL2_pfire_at_29:
	.byte	$12
	.byte	$21
	.byte	$19
	.byte	$2F
	.byte	$FF
	.byte	$F4
	.byte	$09
	.byte	$0D
	.byte	$0A
	.byte	$0D
	.byte	$FF
	.byte	$E0
	.byte	$02
	.byte	$51
	.byte	$61
	.byte	$91
	.byte	$8F
	.byte	$AF
	.byte	$FF
	.byte	$11
	.byte	$21
	.byte	$69
	.byte	$8F
	.byte	$10
	.byte	$0F
	.byte	$00
	.byte	$FF
	.byte	$E0
	.byte	$06
	.byte	$19
	.byte	$1F
	.byte	$E4
	.byte	$7E
	.byte	$01
	.byte	$0F
	.byte	$01
	.byte	$FF
	.byte	$FF
_script_LEVEL2_entering_game:
	.byte	$25
	.byte	$F0
	.byte	$FF
	.byte	$1A
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$03
	.byte	$01
	.byte	$02
	.byte	$04
	.byte	$01
	.byte	$03
	.byte	$05
	.byte	$01
	.byte	$04
	.byte	$06
	.byte	$01
	.byte	$05
	.byte	$07
	.byte	$01
	.byte	$06
	.byte	$08
	.byte	$1A
	.byte	$07
	.byte	$1A
	.byte	$08
	.byte	$1A
	.byte	$09
	.byte	$1A
	.byte	$0A
	.byte	$1A
	.byte	$10
	.byte	$1A
	.byte	$11
	.byte	$1A
	.byte	$1F
	.byte	$FF
	.byte	$FF
_script_pool_LEVEL2:
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL2_entering_2
	.addr	_script_LEVEL2_pfire_at_2
	.addr	_script_LEVEL2_entering_3
	.addr	_script_LEVEL2_pfire_at_3
	.addr	_script_LEVEL2_entering_4
	.addr	_script_LEVEL2_pfire_at_4
	.addr	_script_LEVEL2_entering_5
	.addr	_script_LEVEL2_pfire_at_5
	.word	$0000
	.addr	_script_LEVEL2_pfire_at_6
	.word	$0000
	.addr	_script_LEVEL2_pfire_at_7
	.addr	_script_LEVEL2_entering_8
	.addr	_script_LEVEL2_pfire_at_8
	.addr	_script_LEVEL2_entering_9
	.addr	_script_LEVEL2_pfire_at_9
	.addr	_script_LEVEL2_entering_10
	.addr	_script_LEVEL2_pfire_at_10
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL2_entering_14
	.addr	_script_LEVEL2_pfire_at_14
	.addr	_script_LEVEL2_entering_15
	.addr	_script_LEVEL2_pfire_at_15
	.addr	_script_LEVEL2_entering_16
	.addr	_script_LEVEL2_pfire_at_16
	.addr	_script_LEVEL2_entering_17
	.addr	_script_LEVEL2_pfire_at_17
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL2_entering_19
	.addr	_script_LEVEL2_pfire_at_19
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL2_entering_22
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL2_pfire_at_24
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.addr	_script_LEVEL2_entering_27
	.addr	_script_LEVEL2_pfire_at_27
	.addr	_script_LEVEL2_entering_28
	.addr	_script_LEVEL2_pfire_at_28
	.addr	_script_LEVEL2_entering_29
	.addr	_script_LEVEL2_pfire_at_29
	.addr	_script_LEVEL2_entering_game
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
	.word	$0000
_level_scripts:
	.addr	_script_pool_LEVEL0
	.addr	_script_pool_LEVEL1
	.addr	_script_pool_LEVEL2
L258A:
	.byte	$20,$59,$20,$41,$53,$49,$20,$43,$48,$45,$52,$49,$4C,$20,$43,$4F
	.byte	$4E,$53,$49,$47,$55,$49,$4F,$2F,$2F,$20,$45,$53,$43,$4F,$4A,$4F
	.byte	$4E,$43,$49,$41,$52,$20,$41,$4C,$20,$4D,$41,$4C,$56,$41,$44,$4F
	.byte	$2F,$2F,$4D,$4F,$4E,$53,$54,$52,$55,$4F,$20,$42,$49,$43,$48,$55
	.byte	$4F,$20,$44,$45,$20,$43,$41,$56,$45,$21,$2F,$2F,$20,$20,$42,$49
	.byte	$45,$4E,$20,$48,$45,$43,$48,$4F,$2C,$20,$54,$4F,$54,$45,$54,$45
	.byte	$21,$21,$00
L257A:
	.byte	$40,$20,$32,$30,$31,$37,$20,$54,$48,$45,$20,$4D,$4F,$4A,$4F,$4E
	.byte	$20,$54,$57,$49,$4E,$53,$00
L2575:
	.byte	$50,$55,$4C,$53,$41,$20,$53,$54,$41,$52,$54,$21,$00
L2580:
	.byte	$47,$41,$4D,$45,$20,$4F,$56,$45,$52,$21,$00

.segment	"BSS"

.segment	"ZEROPAGE"
_oam_index:
	.res	1,$00
_half_life:
	.res	1,$00
_frame_counter:
	.res	1,$00
_pad0:
	.res	1,$00
_pad:
	.res	1,$00
_pad_this_frame:
	.res	1,$00
_gpit:
	.res	1,$00
_gpjt:
	.res	1,$00
_gpkt:
	.res	1,$00
_bi:
	.res	1,$00
_rda:
	.res	1,$00
_rdb:
	.res	1,$00
_rdc:
	.res	1,$00
_rdd:
	.res	1,$00
_rdi:
	.res	1,$00
_rdx:
	.res	1,$00
_rdy:
	.res	1,$00
_rdt:
	.res	1,$00
_rdct:
	.res	1,$00
_fr_ct:
	.res	1,$00
_rds:
	.res	1,$00
_gpint:
	.res	2,$00
_gpsint:
	.res	2,$00
_delta:
	.res	1,$00
_gp_gen:
	.res	2,$00
_gp_aux:
	.res	2,$00
_gp_map:
	.res	2,$00
_gp_tmap:
	.res	2,$00
_gp_addr:
	.res	2,$00
_spr_enems:
	.res	2,$00
_spr_player:
	.res	2,$00
_c_ts_pals:
	.res	2,$00
_c_ts_tmaps:
	.res	2,$00
_c_behs:
	.res	2,$00
_ul:
	.res	2,$00
_cx1:
	.res	1,$00
_cy1:
	.res	1,$00
_cx2:
	.res	1,$00
_cy2:
	.res	1,$00
_at1:
	.res	1,$00
_at2:
	.res	1,$00
_caux:
	.res	1,$00
__en_t:
	.res	1,$00
__en_x:
	.res	1,$00
__en_y:
	.res	1,$00
__en_x1:
	.res	1,$00
__en_x2:
	.res	1,$00
__en_y1:
	.res	1,$00
__en_y2:
	.res	1,$00
__en_mx:
	.res	1,$00
__en_my:
	.res	1,$00
__en_state:
	.res	1,$00
__en_ct:
	.res	1,$00
_en_hl:
	.res	3,$00
_en_life:
	.res	3,$00
_en_s:
	.res	3,$00
_en_facing:
	.res	3,$00
_en_dying:
	.res	3,$00
_en_washit:
	.res	3,$00
_prx:
	.res	1,$00
_pry:
	.res	1,$00
_px:
	.res	2,$00
_py:
	.res	2,$00
_pvx:
	.res	1,$00
_pvy:
	.res	2,$00
_pj:
	.res	1,$00
_pctj:
	.res	1,$00
_pthrust:
	.res	1,$00
_pjb:
	.res	1,$00
_pjustjumped:
	.res	1,$00
_pfiring:
	.res	1,$00
_phit:
	.res	1,$00
_pflickering:
	.res	1,$00
_pfacing:
	.res	1,$00
_pgotten:
	.res	1,$00
_ppossee:
	.res	1,$00
_pregotten:
	.res	1,$00
_pfixct:
	.res	1,$00
_psprid:
	.res	1,$00
_pvylast:
	.res	2,$00
_pgtmx:
	.res	1,$00
_pgtmy:
	.res	1,$00
_pcharacter:
	.res	1,$00
_safe_prx:
	.res	1,$00
_safe_pry:
	.res	1,$00
_safe_n_pant:
	.res	1,$00
_safe_pinv:
	.res	1,$00
_pwashit:
	.res	1,$00
_pstatespradder:
	.res	1,$00
_hrx:
	.res	1,$00
_hry:
	.res	1,$00
_hrt:
	.res	1,$00
_itcelloffset:
	.res	1,$00
_sstart:
	.res	1,$00
__coco_x:
	.res	2,$00
__coco_y:
	.res	2,$00
_coco_it:
	.res	1,$00
_sc_x:
	.res	1,$00
_sc_y:
	.res	1,$00
_sc_n:
	.res	1,$00
_sc_c:
	.res	1,$00
_next_script:
	.res	2,$00
_script:
	.res	2,$00
_script_result:
	.res	1,$00
_sc_terminado:
	.res	1,$00
_sc_continuar:
	.res	1,$00
_commands_executed:
	.res	1,$00
_fzx1:
	.res	1,$00
_fzy1:
	.res	1,$00
_fzx2:
	.res	1,$00
_fzy2:
	.res	1,$00
_f_zone_ac:
	.res	1,$00
_script_pool:
	.res	2,$00
.segment	"BSS"
_ticks:
	.res	1,$00
_halfticks:
	.res	1,$00
_game_time:
	.res	1,$00
_ticker:
	.res	1,$00
_display:
	.res	1,$00
_flash:
	.res	1,$00
_paused:
	.res	1,$00
_update_list:
	.res	97,$00
_fader:
	.res	1,$00
_attr_table:
	.res	64,$00
_first_time:
	.res	1,$00
_max_pant:
	.res	1,$00
_c_map:
	.res	2,$00
_c_decos:
	.res	2,$00
_c_locks:
	.res	2,$00
_c_enems:
	.res	2,$00
_c_hotspots:
	.res	2,$00
_c_pal_bg:
	.res	2,$00
_c_alt_tile:
	.res	1,$00
_map_w:
	.res	1,$00
_max_hotspots_type_1:
	.res	1,$00
_level:
	.res	1,$00
_do_game:
	.res	1,$00
_game_state:
	.res	1,$00
_game_res:
	.res	1,$00
_spacer:
	.res	1,$00
_scr_buff:
	.res	192,$00
_scr_attr:
	.res	208,$00
_n_pant:
	.res	1,$00
_on_pant:
	.res	1,$00
_evil_tile_hit:
	.res	1,$00
_en_t:
	.res	3,$00
_en_x:
	.res	3,$00
_en_y:
	.res	3,$00
_en_x1:
	.res	3,$00
_en_y1:
	.res	3,$00
_en_x2:
	.res	3,$00
_en_y2:
	.res	3,$00
_en_mx:
	.res	3,$00
_en_my:
	.res	3,$00
_en_state:
	.res	3,$00
_en_ct:
	.res	3,$00
_spr_x:
	.res	1,$00
_spr_y:
	.res	1,$00
_spr_id:
	.res	1,$00
_en_fr:
	.res	1,$00
_enoffs:
	.res	1,$00
_genflipflop:
	.res	1,$00
_is_platform:
	.res	1,$00
_encelloffset:
	.res	1,$00
_pkilled:
	.res	1,$00
_plife:
	.res	1,$00
_oplife:
	.res	1,$00
_pobjs:
	.res	1,$00
_opobjs:
	.res	1,$00
_pkeys:
	.res	1,$00
_opkeys:
	.res	1,$00
_pammo:
	.res	1,$00
_opammo:
	.res	1,$00
_pinv:
	.res	1,$00
_guay_ct:
	.res	1,$00
_use_ct:
	.res	1,$00
_no_ct:
	.res	1,$00
_b_x:
	.res	4,$00
_b_y:
	.res	4,$00
_b_mx:
	.res	4,$00
_b_my:
	.res	4,$00
_b_ac:
	.res	4,$00
_b_slots:
	.res	4,$00
_b_slot:
	.res	1,$00
_hact:
	.res	30,$00
_lkact:
	.res	1,$00
_coco_x:
	.res	6,$00
_coco_y:
	.res	6,$00
_coco_vx:
	.res	6,$00
_coco_vy:
	.res	6,$00
_coco_flag:
	.res	3,$00
_flags:
	.res	32,$00
_c_idx:
	.res	1,$00
_c_x:
	.res	5,$00
_c_y:
	.res	5,$00
_c_f:
	.res	5,$00
_containers_get:
	.res	1,$00
_springs_x:
	.res	8,$00
_springs_y:
	.res	8,$00
_springs_idx:
	.res	1,$00
_propellers_add_hi:
	.res	8,$00
_propellers_add_lo:
	.res	8,$00
_propellers_idx:
	.res	1,$00
_pal_cycle:
	.res	3,$00

; ---------------------------------------------------------------
; void __near__ player_reset_movement (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_reset_movement: near

.segment	"CODE"

;
; pvx = pvy = 0;
;
	lda     #$00
	sta     _pvy
	sta     _pvy+1
	sta     _pvx
;
; pfixct = pfiring = 0;
;
	sta     _pfiring
	sta     _pfixct
;
; phit = 0;
;
	sta     _phit
;
; pvylast = 0;
;
	sta     _pvylast
	sta     _pvylast+1
;
; pjustjumped = 0;
;
	sta     _pjustjumped
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ player_register_safe_spot (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_register_safe_spot: near

.segment	"CODE"

;
; safe_prx = prx; safe_pry = pry;
;
	lda     _prx
	sta     _safe_prx
	lda     _pry
	sta     _safe_pry
;
; safe_n_pant = n_pant;
;
	lda     _n_pant
	sta     _safe_n_pant
;
; safe_pinv = pinv;
;
	lda     _pinv
	sta     _safe_pinv
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ player_restore_safe_spot (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_restore_safe_spot: near

.segment	"CODE"

;
; prx = safe_prx; px = prx << FIX_BITS;
;
	lda     _safe_prx
	sta     _prx
	ldx     #$00
	lda     _prx
	jsr     aslax4
	sta     _px
	stx     _px+1
;
; pry = safe_pry; py = pry << FIX_BITS;
;
	lda     _safe_pry
	sta     _pry
	ldx     #$00
	lda     _pry
	jsr     aslax4
	sta     _py
	stx     _py+1
;
; n_pant = safe_n_pant;
;
	lda     _safe_n_pant
	sta     _n_pant
;
; pinv = safe_pinv; 
;
	lda     _safe_pinv
	sta     _pinv
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ containers_add (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_containers_add: near

.segment	"CODE"

;
; c_x [c_idx] = CONTAINERS_X;
;
	ldy     _c_idx
	lda     _sc_x
	sta     _c_x,y
;
; c_y [c_idx] = CONTAINERS_Y;
;
	lda     #<(_c_y)
	ldx     #>(_c_y)
	clc
	adc     _c_idx
	bcc     L2FF5
	inx
L2FF5:	sta     ptr1
	stx     ptr1+1
	lda     _sc_y
	clc
	adc     #$01
	ldy     #$00
	sta     (ptr1),y
;
; c_f [c_idx ++] = CONTAINERS_N;
;
	lda     _c_idx
	inc     _c_idx
	clc
	adc     #<(_c_f)
	sta     ptr1
	tya
	adc     #>(_c_f)
	sta     ptr1+1
	lda     _sc_n
	sta     (ptr1),y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ containers_draw (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_containers_draw: near

.segment	"CODE"

;
; gpit = c_idx; 
;
	lda     _c_idx
	sta     _gpit
;
; while (gpit --) oam_index = oam_meta_spr (
;
	jmp     L39F9
;
; c_x [gpit] << 4, (c_y [gpit] << 4) + SPRITE_ADJUST,
;
L301A:	jsr     decsp3
	ldy     _gpit
	lda     _c_x,y
	asl     a
	asl     a
	asl     a
	asl     a
	ldy     #$02
	sta     (sp),y
	ldy     _gpit
	lda     _c_y,y
	asl     a
	asl     a
	asl     a
	asl     a
	clc
	adc     #$10
	sec
	sbc     #$01
	clc
	adc     #$08
	sec
	sbc     #$04
	ldy     #$01
	sta     (sp),y
;
; oam_index,
;
	lda     _oam_index
	dey
	sta     (sp),y
;
; spr_items [flags [c_f [gpit]]]
;
	ldy     _gpit
	lda     _c_f,y
	sta     ptr1
	lda     #$00
	clc
	adc     #>(_flags)
	sta     ptr1+1
	ldy     #<(_flags)
	ldx     #$00
	lda     (ptr1),y
	asl     a
	bcc     L39F8
	inx
	clc
L39F8:	adc     #<(_spr_items)
;
; );
;
	sta     ptr1
;
; spr_items [flags [c_f [gpit]]]
;
	txa
	adc     #>(_spr_items)
;
; );
;
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     _oam_meta_spr
	sta     _oam_index
;
; while (gpit --) oam_index = oam_meta_spr (
;
L39F9:	lda     _gpit
	dec     _gpit
	tax
	bne     L301A
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ game_run_fire_script (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_run_fire_script: near

.segment	"CODE"

;
; run_script (2 * MAP_W * MAP_H + 2);  // Press fire in any room.
;
	lda     #$3E
	jsr     _run_script
;
; run_script (n_pant + n_pant + 1);  // Press fire in current room.
;
	lda     _n_pant
	clc
	adc     _n_pant
	bcc     L39FB
	clc
L39FB:	adc     #$01
	jmp     _run_script

.endproc

; ---------------------------------------------------------------
; void __near__ propellers_add (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_propellers_add: near

.segment	"CODE"

;
; rda = gpit - 16;
;
	lda     _gpit
	sec
	sbc     #$10
	sta     _rda
;
; gpint = NAMETABLE_A + rdx + (rdy << 5);
;
	lda     _rdx
	sta     ptr1
	lda     #$00
	clc
	adc     #$20
	sta     ptr1+1
	ldx     #$00
	lda     _rdy
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	clc
	adc     ptr1
	sta     _gpint
	lda     tmp1
	adc     ptr1+1
	sta     _gpint+1
;
; propellers_add_hi [propellers_idx] = MSB (gpint) | NT_UPD_HORZ;
;
	lda     #<(_propellers_add_hi)
	ldx     #>(_propellers_add_hi)
	clc
	adc     _propellers_idx
	bcc     L25E5
	inx
L25E5:	sta     ptr1
	stx     ptr1+1
	lda     _gpint+1
	ora     #$40
	ldy     #$00
	sta     (ptr1),y
;
; propellers_add_lo [propellers_idx ++] = LSB (gpint);
;
	lda     _propellers_idx
	inc     _propellers_idx
	clc
	adc     #<(_propellers_add_lo)
	sta     ptr1
	tya
	adc     #>(_propellers_add_lo)
	sta     ptr1+1
	lda     _gpint
	sta     (ptr1),y
;
; rdb = PROPELLERS_LIMIT;
;
	lda     #$05
	sta     _rdb
;
; while (!scr_attr [rda] && rda < 192 && rdb --) { scr_attr [rda] = PROPELLERS_BIT; rda -= 16; }
;
	jmp     L25F2
L25F0:	ldy     _rda
	lda     #$40
	sta     _scr_attr,y
	lda     _rda
	sec
	sbc     #$10
	sta     _rda
L25F2:	ldy     _rda
	lda     _scr_attr,y
	bne     L39FD
	lda     _rda
	cmp     #$C0
	bcs     L39FD
	lda     _rdb
	dec     _rdb
	tax
	bne     L25F0
L39FD:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ springs_add (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_springs_add: near

.segment	"CODE"

;
; springs_x [springs_idx] = rdx << 3;
;
	lda     #<(_springs_x)
	ldx     #>(_springs_x)
	clc
	adc     _springs_idx
	bcc     L25AF
	inx
L25AF:	sta     ptr1
	stx     ptr1+1
	lda     _rdx
	asl     a
	asl     a
	asl     a
	ldy     #$00
	sta     (ptr1),y
;
; springs_y [springs_idx ++] = (rdy << 3) - 32;
;
	lda     _springs_idx
	inc     _springs_idx
	clc
	adc     #<(_springs_y)
	tay
	lda     #$00
	adc     #>(_springs_y)
	tax
	tya
	jsr     pushax
	lda     _rdy
	asl     a
	asl     a
	asl     a
	sec
	sbc     #$20
	ldy     #$00
	jmp     staspidx

.endproc

; ---------------------------------------------------------------
; void __near__ fade_out (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fade_out: near

.segment	"CODE"

;
; void fade_out (void) { fader = 5; while (fader --) { pal_bright (fader); ppu_wait_nmi (); } }
;
	lda     #$05
	sta     _fader
	jmp     L39FE
L23BE:	lda     _fader
	jsr     _pal_bright
	jsr     _ppu_wait_nmi
L39FE:	lda     _fader
	dec     _fader
	tax
	bne     L23BE
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ fade_in (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fade_in: near

.segment	"CODE"

;
; void fade_in (void) { fader = 5; while (fader --) { pal_bright (4 - fader); ppu_wait_nmi (); } }
;
	lda     #$05
	sta     _fader
	jmp     L39FF
L23C9:	lda     #$04
	jsr     pusha0
	lda     _fader
	bpl     L23D0
	ldx     #$FF
L23D0:	jsr     tossubax
	jsr     _pal_bright
	jsr     _ppu_wait_nmi
L39FF:	lda     _fader
	dec     _fader
	tax
	bne     L23C9
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ cls (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cls: near

.segment	"CODE"

;
; void cls (void) { vram_adr (0x2000); vram_fill (0x00,0x400); }
;
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
	lda     #$00
	jsr     pusha
	ldx     #$04
	jmp     _vram_fill

.endproc

; ---------------------------------------------------------------
; void __near__ reset_attributes (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_reset_attributes: near

.segment	"CODE"

;
; gpit = 64; while (gpit --) attr_table [gpit] = 0xff;
;
	lda     #$40
	sta     _gpit
	jmp     L3A00
L23DB:	ldy     _gpit
	lda     #$FF
	sta     _attr_table,y
L3A00:	lda     _gpit
	dec     _gpit
	tax
	bne     L23DB
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ show_attributes (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_show_attributes: near

.segment	"CODE"

;
; vram_adr (NAMETABLE_A + 0x03c8);
;
	ldx     #$23
	lda     #$C8
	jsr     _vram_adr
;
; vram_write (attr_table + 8, 56);
;
	lda     #<(_attr_table+8)
	ldx     #>(_attr_table+8)
	jsr     pushax
	ldx     #$00
	lda     #$38
	jmp     _vram_write

.endproc

; ---------------------------------------------------------------
; void __near__ close_update_cycle (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_close_update_cycle: near

.segment	"CODE"

;
; *ul = NT_UPD_EOF; ppu_wait_nmi ();
;
	lda     _ul+1
	sta     ptr1+1
	lda     _ul
	sta     ptr1
	lda     #$FF
	ldy     #$00
	sta     (ptr1),y
	jmp     _ppu_wait_nmi

.endproc

; ---------------------------------------------------------------
; void __near__ write_attr (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_write_attr: near

.segment	"CODE"

;
; rdc = (rdx >> 2) + ((rdy >> 2) << 3);
;
	ldx     #$00
	lda     _rdx
	lsr     a
	lsr     a
	sta     ptr1
	stx     ptr1+1
	lda     _rdy
	lsr     a
	lsr     a
	jsr     aslax3
	clc
	adc     ptr1
	sta     _rdc
	txa
	adc     ptr1+1
;
; rdb = ((rdx >> 1) & 1) + (((rdy >> 1) & 1) << 1);
;
	lda     _rdx
	lsr     a
	and     #$01
	sta     ptr1
	lda     _rdy
	lsr     a
	and     #$01
	asl     a
	bcc     L3A04
	clc
L3A04:	adc     ptr1
	sta     _rdb
;
; rda = attr_table [rdc];
;
	ldy     _rdc
	lda     _attr_table,y
	sta     _rda
;
; rda = (rda & bitmasks [rdb]) | (c_ts_pals [rdt] << (rdb << 1));
;
	ldy     _rdb
	ldx     #$00
	lda     _bitmasks,y
	and     _rda
	sta     sreg
	stx     sreg+1
	lda     _c_ts_pals
	ldx     _c_ts_pals+1
	ldy     _rdt
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	sta     ptr1
	lda     _rdb
	asl     a
	tay
	lda     ptr1
	jsr     aslaxy
	ora     sreg
	sta     _rda
	txa
	ora     sreg+1
;
; attr_table [rdc] = rda;
;
	ldy     _rdc
	lda     _rda
	sta     _attr_table,y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_list_write (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_list_write: near

.segment	"CODE"

;
; void update_list_write (unsigned char a) {
;
	jsr     pusha
;
; *ul ++ = MSB(gp_addr);
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L240C
	inx
L240C:	sta     _ul
	stx     _ul+1
	lda     _gp_addr+1
	ldy     #$00
	sta     (regsave),y
;
; *ul ++ = LSB(gp_addr++);
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2411
	inx
L2411:	sta     _ul
	stx     _ul+1
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	lda     _gp_addr
	ldx     _gp_addr+1
	sta     regsave
	clc
	adc     #$01
	bcc     L2415
	inx
L2415:	sta     _gp_addr
	stx     _gp_addr+1
	lda     regsave
	ldy     #$00
	jsr     staspidx
;
; *ul ++ = a;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2417
	inx
L2417:	sta     _ul
	stx     _ul+1
	ldy     #$00
	lda     (sp),y
	sta     (regsave),y
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ draw_tile (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_tile: near

.segment	"CODE"

;
; write_attr ();
;
	jsr     _write_attr
;
; gp_tmap = (unsigned char *) c_ts_tmaps + (rdt << 2);
;
	ldx     #$00
	lda     _rdt
	jsr     aslax2
	clc
	adc     _c_ts_tmaps
	sta     _gp_tmap
	txa
	adc     _c_ts_tmaps+1
	sta     _gp_tmap+1
;
; gp_addr = ((rdy << 5) + rdx + 0x2000);
;
	ldx     #$00
	lda     _rdy
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	clc
	adc     _rdx
	bcc     L3A05
	inx
L3A05:	pha
	txa
	clc
	adc     #$20
	tax
	pla
	sta     _gp_addr
	stx     _gp_addr+1
;
; vram_adr (gp_addr++);
;
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2424
	inx
L2424:	sta     _gp_addr
	stx     _gp_addr+1
	lda     regsave
	ldx     regsave+1
	jsr     _vram_adr
;
; vram_put (*gp_tmap++);
;
	lda     _gp_tmap
	ldx     _gp_tmap+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2427
	inx
L2427:	sta     _gp_tmap
	stx     _gp_tmap+1
	ldy     #$00
	lda     (regsave),y
	jsr     _vram_put
;
; vram_put (*gp_tmap++);
;
	lda     _gp_tmap
	ldx     _gp_tmap+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L242A
	inx
L242A:	sta     _gp_tmap
	stx     _gp_tmap+1
	ldy     #$00
	lda     (regsave),y
	jsr     _vram_put
;
; gp_addr += 31;
;
	lda     #$1F
	clc
	adc     _gp_addr
	sta     _gp_addr
	bcc     L242D
	inc     _gp_addr+1
;
; vram_adr (gp_addr++);
;
L242D:	lda     _gp_addr
	ldx     _gp_addr+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2430
	inx
L2430:	sta     _gp_addr
	stx     _gp_addr+1
	lda     regsave
	ldx     regsave+1
	jsr     _vram_adr
;
; vram_put (*gp_tmap++);
;
	lda     _gp_tmap
	ldx     _gp_tmap+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2433
	inx
L2433:	sta     _gp_tmap
	stx     _gp_tmap+1
	ldy     #$00
	lda     (regsave),y
	jsr     _vram_put
;
; vram_put (*gp_tmap); 
;
	lda     _gp_tmap+1
	sta     ptr1+1
	lda     _gp_tmap
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	jmp     _vram_put

.endproc

; ---------------------------------------------------------------
; void __near__ draw_tile_advance (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_tile_advance: near

.segment	"CODE"

;
; draw_tile (); rdx = (rdx + 2) & 31; if (!rdx) rdy += 2;
;
	jsr     _draw_tile
	lda     _rdx
	clc
	adc     #$02
	and     #$1F
	sta     _rdx
	lda     _rdx
	bne     L243C
	lda     #$02
	clc
	adc     _rdy
	sta     _rdy
;
; }
;
L243C:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_list_horz_2 (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_list_horz_2: near

.segment	"CODE"

;
; *ul ++ = MSB (gp_addr) | NT_UPD_HORZ;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2442
	inx
L2442:	sta     _ul
	stx     _ul+1
	lda     _gp_addr+1
	ora     #$40
	ldy     #$00
	sta     (regsave),y
;
; *ul ++ = LSB (gp_addr);
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2447
	inx
L2447:	sta     _ul
	stx     _ul+1
	lda     _gp_addr
	sta     (regsave),y
;
; *ul ++ = 2; 
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L244C
	inx
L244C:	sta     _ul
	stx     _ul+1
	lda     #$02
	sta     (regsave),y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ update_list_tile (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_update_list_tile: near

.segment	"CODE"

;
; write_attr ();
;
	jsr     _write_attr
;
; gp_addr = 0x23c0 + rdc;
;
	lda     _rdc
	clc
	adc     #$C0
	sta     _gp_addr
	lda     #$00
	adc     #$23
	sta     _gp_addr+1
;
; update_list_write (rda);
;
	lda     _rda
	jsr     _update_list_write
;
; gp_tmap = (unsigned char *) c_ts_tmaps + (rdt << 2);
;
	ldx     #$00
	lda     _rdt
	jsr     aslax2
	clc
	adc     _c_ts_tmaps
	sta     _gp_tmap
	txa
	adc     _c_ts_tmaps+1
	sta     _gp_tmap+1
;
; gp_addr = ((rdy << 5) + rdx + NAMETABLE_A);
;
	ldx     #$00
	lda     _rdy
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	clc
	adc     _rdx
	bcc     L3A06
	inx
L3A06:	sta     _gp_addr
	txa
	clc
	adc     #$20
	sta     _gp_addr+1
;
; update_list_horz_2 ();
;
	jsr     _update_list_horz_2
;
; *ul ++ = *gp_tmap ++;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L245D
	inx
L245D:	sta     _ul
	stx     _ul+1
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	lda     _gp_tmap
	ldx     _gp_tmap+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L245F
	inx
L245F:	sta     _gp_tmap
	stx     _gp_tmap+1
	ldy     #$00
	lda     (regsave),y
	jsr     staspidx
;
; *ul ++ = *gp_tmap ++;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2461
	inx
L2461:	sta     _ul
	stx     _ul+1
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	lda     _gp_tmap
	ldx     _gp_tmap+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2463
	inx
L2463:	sta     _gp_tmap
	stx     _gp_tmap+1
	ldy     #$00
	lda     (regsave),y
	jsr     staspidx
;
; gp_addr += 32;
;
	lda     #$20
	clc
	adc     _gp_addr
	sta     _gp_addr
	bcc     L2466
	inc     _gp_addr+1
;
; update_list_horz_2 ();
;
L2466:	jsr     _update_list_horz_2
;
; *ul ++ = *gp_tmap ++;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2469
	inx
L2469:	sta     _ul
	stx     _ul+1
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	lda     _gp_tmap
	ldx     _gp_tmap+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L246B
	inx
L246B:	sta     _gp_tmap
	stx     _gp_tmap+1
	ldy     #$00
	lda     (regsave),y
	jsr     staspidx
;
; *ul ++ = *gp_tmap;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L246D
	inx
L246D:	sta     _ul
	stx     _ul+1
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	lda     _gp_tmap+1
	sta     ptr1+1
	lda     _gp_tmap
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	jmp     staspidx

.endproc

; ---------------------------------------------------------------
; void __near__ set_map_tile (unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_map_tile: near

.segment	"CODE"

;
; void set_map_tile (unsigned char x, unsigned char y, unsigned char t) {
;
	jsr     pusha
;
; rdx = x + x; rdy = y + y + TOP_ADJUST; rdt = t;
;
	ldy     #$02
	lda     (sp),y
	clc
	adc     (sp),y
	sta     _rdx
	dey
	lda     (sp),y
	clc
	adc     (sp),y
	clc
	adc     #$04
	sta     _rdy
	dey
	lda     (sp),y
	sta     _rdt
;
; scr_buff [x + (y << 4)] = rdt; scr_attr [x + (y << 4)] = c_behs [rdt];
;
	ldx     #$00
	iny
	lda     (sp),y
	jsr     aslax4
	clc
	iny
	adc     (sp),y
	bcc     L3A0C
	inx
	clc
L3A0C:	adc     #<(_scr_buff)
	sta     ptr1
	txa
	adc     #>(_scr_buff)
	sta     ptr1+1
	lda     _rdt
	ldy     #$00
	sta     (ptr1),y
	ldx     #$00
	iny
	lda     (sp),y
	jsr     aslax4
	clc
	iny
	adc     (sp),y
	bcc     L3A0D
	inx
	clc
L3A0D:	adc     #<(_scr_attr)
	tay
	txa
	adc     #>(_scr_attr)
	tax
	tya
	jsr     pushax
	lda     _c_behs
	ldx     _c_behs+1
	ldy     _rdt
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
;
; update_list_tile ();
;
	jsr     _update_list_tile
;
; }
;
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ p_t2 (unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_p_t2: near

.segment	"CODE"

;
; void p_t2 (unsigned char x, unsigned char y, unsigned char n) {
;
	jsr     pusha
;
; gp_addr = NAMETABLE_A + (y << 5) + x;
;
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	sta     ptr1
	lda     tmp1
	clc
	adc     #$20
	sta     ptr1+1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L3A0E
	inx
L3A0E:	sta     _gp_addr
	stx     _gp_addr+1
;
; *ul ++ = MSB (gp_addr) | NT_UPD_HORZ;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2486
	inx
L2486:	sta     _ul
	stx     _ul+1
	lda     _gp_addr+1
	ora     #$40
	ldy     #$00
	sta     (regsave),y
;
; *ul ++ = LSB (gp_addr);
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L248B
	inx
L248B:	sta     _ul
	stx     _ul+1
	lda     _gp_addr
	sta     (regsave),y
;
; *ul ++ = 2; 
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2490
	inx
L2490:	sta     _ul
	stx     _ul+1
	lda     #$02
	sta     (regsave),y
;
; *ul ++ = DIGIT ((n / 10));
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2493
	inx
L2493:	sta     _ul
	stx     _ul+1
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$0A
	jsr     tosudiva0
	clc
	adc     #$10
	ldy     #$00
	jsr     staspidx
;
; *ul ++ = DIGIT ((n % 10));
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L249A
	inx
L249A:	sta     _ul
	stx     _ul+1
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$0A
	jsr     tosumoda0
	clc
	adc     #$10
	ldy     #$00
	jsr     staspidx
;
; }
;
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ advance_worm (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_advance_worm: near

.segment	"CODE"

;
; switch (rdt) {
;
	lda     _rdt
;
; }
;
	cmp     #$1C
	beq     L24AA
	cmp     #$21
	bne     L24A3
;
; if (level == 1) // this line is CUSTOM!
;
	lda     _level
	cmp     #$01
	bne     L24A3
;
; propellers_add ();
;
	jsr     _propellers_add
;
; break;
;
	jmp     L24A3
;
; springs_add ();
;
L24AA:	jsr     _springs_add
;
; scr_buff [gpit] = rdt; scr_attr [gpit] = c_behs [rdt]; draw_tile_advance (); gpit ++;
;
L24A3:	ldy     _gpit
	lda     _rdt
	sta     _scr_buff,y
	lda     #<(_scr_attr)
	ldx     #>(_scr_attr)
	clc
	adc     _gpit
	bcc     L24B2
	inx
L24B2:	jsr     pushax
	lda     _c_behs
	ldx     _c_behs+1
	ldy     _rdt
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	jsr     _draw_tile_advance
	inc     _gpit
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ draw_scr (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_scr: near

.segment	"CODE"

;
; set_rand (1 + n_pant);
;
	ldx     #$00
	lda     _n_pant
	clc
	adc     #$01
	bcc     L24BA
	inx
L24BA:	jsr     _set_rand
;
; gp_map = (unsigned char *) c_map [n_pant];
;
	ldx     #$00
	lda     _n_pant
	asl     a
	bcc     L3A13
	inx
	clc
L3A13:	adc     _c_map
	sta     ptr1
	txa
	adc     _c_map+1
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _gp_map+1
	dey
	lda     (ptr1),y
	sta     _gp_map
;
; gpit = 0; rdx = 0; rdy = TOP_ADJUST;
;
	tya
	sta     _gpit
	sta     _rdx
	lda     #$04
	sta     _rdy
;
; while (gpit < 192) {
;
	jmp     L3A17
;
; rdt = *gp_map ++;
;
L24C4:	lda     _gp_map
	ldx     _gp_map+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L24CA
	inx
L24CA:	sta     _gp_map
	stx     _gp_map+1
	ldy     #$00
	lda     (regsave),y
	sta     _rdt
;
; rdct = 1 + (rdt >> 5);
;
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     #$01
	sta     _rdct
;
; rdt &= 0x1f;
;
	lda     _rdt
	and     #$1F
	sta     _rdt
;
; while (rdct --) advance_worm ();
;
	jmp     L3A16
L24D1:	jsr     _advance_worm
L3A16:	lda     _rdct
	dec     _rdct
	tax
	bne     L24D1
;
; while (gpit < 192) {
;
L3A17:	lda     _gpit
	cmp     #$C0
	bcc     L24C4
;
; if (c_decos && c_decos [n_pant]) {
;
	lda     _c_decos
	ora     _c_decos+1
	beq     L3A19
	ldx     #$00
	lda     _n_pant
	asl     a
	bcc     L3A14
	inx
	clc
L3A14:	adc     _c_decos
	pha
	txa
	adc     _c_decos+1
	tax
	pla
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	bne     L24D7
L3A19:	rts
;
; gp_gen = (unsigned char *) c_decos [n_pant];
;
L24D7:	ldx     #$00
	lda     _n_pant
	asl     a
	bcc     L3A15
	inx
	clc
L3A15:	adc     _c_decos
	sta     ptr1
	txa
	adc     _c_decos+1
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _gp_gen+1
	dey
	lda     (ptr1),y
	sta     _gp_gen
;
; while (rdt = *gp_gen ++) {
;
	jmp     L24EF
;
; if (rdt & 0x80) {
;
L24DE:	lda     _rdt
	and     #$80
	beq     L24E4
;
; rdt &= 0x7F;
;
	lda     _rdt
	and     #$7F
	sta     _rdt
;
; rdct = 1;
;
	lda     #$01
	sta     _rdct
;
; } else {
;
	jmp     L3A1A
;
; rdct = *gp_gen ++;
;
L24E4:	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L24ED
	inx
L24ED:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
	sta     _rdct
;
; while (rdct --) {
;
	jmp     L3A1A
;
; gpit = *gp_gen ++;
;
L24EE:	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L24F4
	inx
L24F4:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
	sta     _gpit
;
; rdy = TOP_ADJUST + ((gpit >> 4) << 1); rdx = (gpit & 15) << 1; 
;
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	asl     a
	clc
	adc     #$04
	sta     _rdy
	lda     _gpit
	and     #$0F
	asl     a
	sta     _rdx
;
; advance_worm ();
;
	jsr     _advance_worm
;
; while (rdct --) {
;
L3A1A:	lda     _rdct
	dec     _rdct
	tax
	bne     L24EE
;
; while (rdt = *gp_gen ++) {
;
L24EF:	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L24E3
	inx
L24E3:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
	sta     _rdt
	tax
	jne     L24DE
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ p_s (unsigned char, unsigned char, __near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_p_s: near

.segment	"CODE"

;
; void p_s (unsigned char x, unsigned char y, const unsigned char *s) {
;
	jsr     pushax
;
; vram_adr (NAMETABLE_A + (y << 5) + x);
;
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	sta     ptr1
	lda     tmp1
	clc
	adc     #$20
	sta     ptr1+1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L3A1B
	inx
L3A1B:	jsr     _vram_adr
;
; while (rda = *s ++) {
;
	jmp     L250E
;
; if (rda == '/') {
;
L2502:	lda     _rda
	cmp     #$2F
	bne     L3A1D
;
; y ++; vram_adr (NAMETABLE_A + (y << 5) + x);
;
	ldy     #$02
	lda     (sp),y
	clc
	adc     #$01
	sta     (sp),y
	ldx     #$00
	lda     (sp),y
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	sta     ptr1
	lda     tmp1
	clc
	adc     #$20
	sta     ptr1+1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L3A1C
	inx
L3A1C:	jsr     _vram_adr
;
; } else vram_put (rda - 32);
;
	jmp     L250E
L3A1D:	lda     _rda
	sec
	sbc     #$20
	jsr     _vram_put
;
; while (rda = *s ++) {
;
L250E:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2507
	inx
L2507:	jsr     stax0sp
	ldy     #$00
	lda     (regsave),y
	sta     _rda
	tax
	bne     L2502
;
; }
;
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ palfx_do (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_palfx_do: near

.segment	"CODE"

;
; if ((frame_counter & 15) == 0) {
;
	lda     _frame_counter
	and     #$0F
	bne     L2513
;
; gpit = pal_cycle [2]; 
;
	lda     _pal_cycle+2
	sta     _gpit
;
; pal_cycle [2] = pal_cycle [1]; 
;
	lda     _pal_cycle+1
	sta     _pal_cycle+2
;
; pal_cycle [1] = pal_cycle [0]; 
;
	lda     _pal_cycle
	sta     _pal_cycle+1
;
; pal_cycle [0] = gpit; 
;
	lda     _gpit
	sta     _pal_cycle
;
; pal_col (5, pal_cycle [0]);
;
	lda     #$05
	jsr     pusha
	lda     _pal_cycle
	jsr     _pal_col
;
; pal_col (6, pal_cycle [1]);
;
	lda     #$06
	jsr     pusha
	lda     _pal_cycle+1
	jsr     _pal_col
;
; pal_col (7, pal_cycle [2]);
;
	lda     #$07
	jsr     pusha
	lda     _pal_cycle+2
	jmp     _pal_col
;
; }
;
L2513:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ palfx_init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_palfx_init: near

.segment	"CODE"

;
; pal_cycle [0] = c_pal_bg [5];
;
	lda     _c_pal_bg+1
	sta     ptr1+1
	lda     _c_pal_bg
	sta     ptr1
	ldy     #$05
	lda     (ptr1),y
	sta     _pal_cycle
;
; pal_cycle [1] = c_pal_bg [6];
;
	lda     _c_pal_bg+1
	sta     ptr1+1
	lda     _c_pal_bg
	sta     ptr1
	iny
	lda     (ptr1),y
	sta     _pal_cycle+1
;
; pal_cycle [2] = c_pal_bg [7];
;
	lda     _c_pal_bg+1
	sta     ptr1+1
	lda     _c_pal_bg
	sta     ptr1
	iny
	lda     (ptr1),y
	sta     _pal_cycle+2
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ enter_screen (__near__ const unsigned char *, __near__ __near__ function returning void *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enter_screen: near

.segment	"CODE"

;
; void enter_screen (const unsigned char *pal, void (*func) (void)) {
;
	jsr     pushax
;
; cls ();
;
	jsr     _cls
;
; rda = 0;
;
	lda     #$00
	sta     _rda
;
; (*func) ();
;
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     callax
;
; pal_bg (pal);
;
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _pal_bg
;
; ppu_on_all ();
;
	jsr     _ppu_on_all
;
; fade_in ();
;
	jsr     _fade_in
;
; }
;
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ exit_cleanly (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_exit_cleanly: near

.segment	"CODE"

;
; oam_hide_rest (0);
;
	lda     #$00
	jsr     _oam_hide_rest
;
; music_stop ();
;
	jsr     _music_stop
;
; fade_out ();
;
	jsr     _fade_out
;
; ppu_off (); 
;
	jmp     _ppu_off

.endproc

; ---------------------------------------------------------------
; void __near__ wait_time_or_input (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_wait_time_or_input: near

.segment	"CODE"

;
; rda = (pad_poll (0) != 0);
;
	lda     #$00
	jsr     _pad_poll
	cmp     #$00
	jsr     boolne
	sta     _rda
;
; while (game_time) {
;
	jmp     L2555
;
; ticker ++; if (ticker == ticks) {
;
L2553:	inc     _ticker
	lda     _ticks
	cmp     _ticker
	bne     L2558
;
; ticker = 0;
;
	lda     #$00
	sta     _ticker
;
; game_time --;
;
	dec     _game_time
;
; if (pad_poll (0)) {
;
L2558:	lda     #$00
	jsr     _pad_poll
	tax
	beq     L3A20
;
; if (!rda) break;
;
	lda     _rda
	bne     L2562
	rts
;
; rda = 0;
;
L3A20:	sta     _rda
;
; ppu_wait_nmi ();
;
L2562:	jsr     _ppu_wait_nmi
;
; while (game_time) {
;
L2555:	lda     _game_time
	bne     L2553
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ do_screen (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_do_screen: near

.segment	"CODE"

;
; void do_screen (unsigned char seconds) {
;
	jsr     pusha
;
; game_time = seconds; ticker = 0;
;
	ldy     #$00
	lda     (sp),y
	sta     _game_time
	sty     _ticker
;
; wait_time_or_input ();
;
	jsr     _wait_time_or_input
;
; exit_cleanly ();
;
	jsr     _exit_cleanly
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ screen_title (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_screen_title: near

.segment	"CODE"

;
; vram_adr (NAMETABLE_A);
;
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; vram_unrle (title_rle);
;
	lda     #<(_title_rle)
	ldx     #>(_title_rle)
	jsr     _vram_unrle
;
; p_s (10, 20, "PULSA START!");
;
	jsr     decsp2
	lda     #$0A
	ldy     #$01
	sta     (sp),y
	lda     #$14
	dey
	sta     (sp),y
	lda     #<(L2575)
	ldx     #>(L2575)
	jsr     _p_s
;
; p_s (5, 24, "@ 2017 THE MOJON TWINS");
;
	jsr     decsp2
	lda     #$05
	ldy     #$01
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	lda     #<(L257A)
	ldx     #>(L257A)
	jmp     _p_s

.endproc

; ---------------------------------------------------------------
; void __near__ screen_game_over (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_screen_game_over: near

.segment	"CODE"

;
; p_s (11, 14, "GAME OVER!");
;
	jsr     decsp2
	lda     #$0B
	ldy     #$01
	sta     (sp),y
	lda     #$0E
	dey
	sta     (sp),y
	lda     #<(L2580)
	ldx     #>(L2580)
	jmp     _p_s

.endproc

; ---------------------------------------------------------------
; void __near__ screen_game_ending (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_screen_game_ending: near

.segment	"CODE"

;
; vram_adr (NAMETABLE_A);
;
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; vram_unrle (ending_rle);
;
	lda     #<(_ending_rle)
	ldx     #>(_ending_rle)
	jsr     _vram_unrle
;
; p_s (4, 16, " Y ASI CHERIL CONSIGUIO// ESCOJONCIAR AL MALVADO//MONSTRUO BICHUO DE CAVE!//  BIEN HECHO, TOTETE!!");
;
	jsr     decsp2
	lda     #$04
	ldy     #$01
	sta     (sp),y
	lda     #$10
	dey
	sta     (sp),y
	lda     #<(L258A)
	ldx     #>(L258A)
	jmp     _p_s

.endproc

; ---------------------------------------------------------------
; void __near__ cm_two_points (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cm_two_points: near

.segment	"CODE"

;
; caux = cy1 ? cy1 - 1 : 0; 
;
	lda     _cy1
	beq     L3A23
	sec
	sbc     #$01
L3A23:	sta     _caux
;
; at1 = scr_attr [cx1 + (caux << 4)];
;
	ldx     #$00
	lda     _caux
	jsr     aslax4
	clc
	adc     _cx1
	bcc     L3A21
	inx
L3A21:	sta     ptr1
	txa
	clc
	adc     #>(_scr_attr)
	sta     ptr1+1
	ldy     #<(_scr_attr)
	lda     (ptr1),y
	sta     _at1
;
; caux = cy2 ? cy2 - 1 : 0;
;
	lda     _cy2
	beq     L3A25
	sec
	sbc     #$01
L3A25:	sta     _caux
;
; at2 = scr_attr [cx2 + (caux << 4)];
;
	ldx     #$00
	lda     _caux
	jsr     aslax4
	clc
	adc     _cx2
	bcc     L3A22
	inx
L3A22:	sta     ptr1
	txa
	clc
	adc     #>(_scr_attr)
	sta     ptr1+1
	ldy     #<(_scr_attr)
	lda     (ptr1),y
	sta     _at2
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ collide (unsigned char, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_collide: near

.segment	"CODE"

;
; unsigned char collide (unsigned char x1, unsigned char y1, unsigned char x2, unsigned char y2) {
;
	jsr     pusha
;
; return (x1 + 7 >= x2 && x1 <= x2 + 15 && y1 + 7 >= y2 && y1 <= y2 + 15);
;
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	clc
	adc     #$07
	bcc     L3A27
	inx
L3A27:	ldy     #$01
	cmp     (sp),y
	txa
	sbc     #$00
	lda     #$00
	tax
	bcc     L3A2B
	ldy     #$03
	lda     (sp),y
	jsr     pusha0
	ldy     #$03
	lda     (sp),y
	clc
	adc     #$0F
	bcc     L25A8
	ldx     #$01
L25A8:	jsr     tosicmp
	beq     L3A26
	bcs     L25A7
L3A26:	ldy     #$02
	ldx     #$00
	lda     (sp),y
	clc
	adc     #$07
	bcc     L3A28
	inx
L3A28:	ldy     #$00
	cmp     (sp),y
	txa
	sbc     #$00
	tya
	tax
	bcc     L3A2B
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$02
	lda     (sp),y
	clc
	adc     #$0F
	bcc     L25AA
	ldx     #$01
L25AA:	jsr     tosicmp
	bcc     L25A5
	beq     L25A5
L25A7:	ldx     #$00
	txa
	jmp     incsp4
L25A5:	lda     #$01
	ldx     #$00
;
; }
;
L3A2B:	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ springs_do (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_springs_do: near

.segment	"CODE"

;
; gpit = springs_idx; while (gpit --) {
;
	lda     _springs_idx
	sta     _gpit
	jmp     L3A2D
;
; if (pry <= springs_y [gpit]) {
;
L25B9:	lda     _pry
	jsr     pusha0
	ldy     _gpit
	lda     _springs_y,y
	jsr     tosicmp0
	beq     L3A2C
	bcs     L3A2D
;
; if (prx + 7 >= springs_x [gpit] && prx <= springs_x [gpit] + 15) {
;
L3A2C:	ldx     #$00
	lda     _prx
	clc
	adc     #$07
	bcc     L25C3
	inx
L25C3:	jsr     pushax
	ldy     _gpit
	lda     _springs_x,y
	jsr     tosicmp0
	bcc     L3A2D
	lda     _prx
	jsr     pusha0
	ldy     _gpit
	lda     _springs_x,y
	clc
	adc     #$0F
	bcc     L25C9
	ldx     #$01
L25C9:	jsr     tosicmp
	bcc     L25C2
	bne     L3A2D
;
; set_map_tile (springs_x [gpit] >> 4, (springs_y [gpit] >> 4) - 1, SPRINGS_TILE);
;
L25C2:	jsr     decsp2
	ldy     _gpit
	lda     _springs_x,y
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	ldy     #$01
	sta     (sp),y
	ldy     _gpit
	lda     _springs_y,y
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sec
	sbc     #$01
	ldy     #$00
	sta     (sp),y
	lda     #$2C
	jsr     _set_map_tile
;
; sfx_play (SPRINGS_SOUND, SC_LEVEL);
;
	lda     #$06
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; springs_y [gpit] = 0;
;
	ldy     _gpit
	lda     #$00
	sta     _springs_y,y
;
; gpit = springs_idx; while (gpit --) {
;
L3A2D:	lda     _gpit
	dec     _gpit
	tax
	jne     L25B9
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ propellers_do (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_propellers_do: near

.segment	"CODE"

;
; rda = frame_counter & 2;
;
	lda     _frame_counter
	and     #$02
	sta     _rda
;
; gpit = propellers_idx; while (gpit --) {
;
	lda     _propellers_idx
	sta     _gpit
	jmp     L3A2E
;
; *ul ++ = propellers_add_hi [gpit];
;
L2603:	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2608
	inx
L2608:	sta     _ul
	stx     _ul+1
	ldy     _gpit
	lda     _propellers_add_hi,y
	ldy     #$00
	sta     (regsave),y
;
; *ul ++ = propellers_add_lo [gpit];
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L260D
	inx
L260D:	sta     _ul
	stx     _ul+1
	ldy     _gpit
	lda     _propellers_add_lo,y
	ldy     #$00
	sta     (regsave),y
;
; *ul ++ = 2;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2612
	inx
L2612:	sta     _ul
	stx     _ul+1
	lda     #$02
	sta     (regsave),y
;
; *ul ++ = PROPELLERS_PATTERN + rda;
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2615
	inx
L2615:	sta     _ul
	stx     _ul+1
	lda     _rda
	clc
	adc     #$40
	sta     (regsave),y
;
; *ul ++ = PROPELLERS_PATTERN + (rda | 1);
;
	lda     _ul
	ldx     _ul+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2619
	inx
L2619:	sta     _ul
	stx     _ul+1
	lda     _rda
	ora     #$01
	clc
	adc     #$40
	sta     (regsave),y
;
; gpit = propellers_idx; while (gpit --) {
;
L3A2E:	lda     _gpit
	dec     _gpit
	tax
	jne     L2603
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ extern_frame (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_extern_frame: near

.segment	"CODE"

;
; rdx = 8; rdy = 10; gp_gen = (unsigned char *) stbf;
;
	lda     #$08
	sta     _rdx
	lda     #$0A
	sta     _rdy
	lda     #>(_stbf)
	sta     _gp_gen+1
	lda     #<(_stbf)
	sta     _gp_gen
;
; gpkt = 52; // 4 + (3 << 4)
;
	lda     #$34
	sta     _gpkt
;
; gpit = 48; while (gpit --) {
;
	lda     #$30
	sta     _gpit
	jmp     L3A32
;
; if (0 == (rdx & 3)) ul = update_list;
;
L2697:	jsr     push0
	lda     _rdx
	and     #$03
	jsr     tosicmp0
	bne     L269B
	lda     #>(_update_list)
	sta     _ul+1
	lda     #<(_update_list)
	sta     _ul
;
; rdt = rdd ? scr_buff [gpkt ++] : *gp_gen ++;
;
L269B:	lda     _rdd
	beq     L26A2
	lda     _gpkt
	inc     _gpkt
	sta     ptr1
	lda     #$00
	clc
	adc     #>(_scr_buff)
	sta     ptr1+1
	ldy     #<(_scr_buff)
	lda     (ptr1),y
	jmp     L3A31
L26A2:	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L26A7
	inx
L26A7:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
L3A31:	sta     _rdt
;
; update_list_tile ();
;
	jsr     _update_list_tile
;
; rdx += 2;
;
	lda     #$02
	clc
	adc     _rdx
	sta     _rdx
;
; if (0 == (rdx & 3)) close_update_cycle ();
;
	jsr     push0
	lda     _rdx
	and     #$03
	jsr     tosicmp0
	bne     L26AB
	jsr     _close_update_cycle
;
; if (rdx == 24) { rdx = 8; rdy += 2; gpkt += 8; }
;
L26AB:	lda     _rdx
	cmp     #$18
	bne     L3A32
	lda     #$08
	sta     _rdx
	lda     #$02
	clc
	adc     _rdy
	sta     _rdy
	lda     #$08
	clc
	adc     _gpkt
	sta     _gpkt
;
; gpit = 48; while (gpit --) {
;
L3A32:	lda     _gpit
	dec     _gpit
	tax
	jne     L2697
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ do_extern_action (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_do_extern_action: near

.segment	"CODE"

;
; oam_hide_rest (20);
;
	lda     #$14
	jsr     _oam_hide_rest
;
; switch (sc_n) {
;
	lda     _sc_n
;
; }
;
	cmp     #$7E
	beq     L26BE
	cmp     #$7F
	beq     L26C2
	jmp     L3A35
;
; music_play (MUSIC_BOSS);
;
L26BE:	lda     #$03
	jmp     _music_play
;
; music_stop ();
;
L26C2:	jmp     _music_stop
;
; rdd = 0; extern_frame ();
;
L3A35:	lda     #$00
	sta     _rdd
	jsr     _extern_frame
;
; gp_gen = (unsigned char *) extern_action_texts [sc_n];
;
	ldx     #$00
	lda     _sc_n
	asl     a
	bcc     L3A34
	inx
	clc
L3A34:	adc     #<(_extern_action_texts)
	sta     ptr1
	txa
	adc     #>(_extern_action_texts)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _gp_gen+1
	dey
	lda     (ptr1),y
	sta     _gp_gen
;
; gp_addr = NAMETABLE_A + 361; // 9 + 11*32
;
	ldx     #$21
	lda     #$69
	sta     _gp_addr
	stx     _gp_addr+1
;
; update_list [3] = NT_UPD_EOF;
;
	lda     #$FF
	sta     _update_list+3
;
; while (rda = *gp_gen ++) {
;
	jmp     L26D2
;
; if (rda == '%') {
;
L26D0:	lda     _rda
	cmp     #$25
	bne     L3A36
;
; gp_addr = ((gp_addr + 64) & 0xffe0) + 9;
;
	lda     _gp_addr
	ldx     _gp_addr+1
	clc
	adc     #$40
	bcc     L26DC
	inx
L26DC:	and     #$E0
	clc
	adc     #$09
	bcc     L26DD
	inx
L26DD:	sta     _gp_addr
	stx     _gp_addr+1
;
; } else {
;
	jmp     L26EE
;
; update_list [0] = MSB (gp_addr);
;
L3A36:	lda     _gp_addr+1
	sta     _update_list
;
; update_list [1] = LSB (gp_addr ++);
;
	lda     _gp_addr
	ldx     _gp_addr+1
	sta     regsave
	clc
	adc     #$01
	bcc     L26E9
	inx
L26E9:	sta     _gp_addr
	stx     _gp_addr+1
	lda     regsave
	sta     _update_list+1
;
; update_list [2] = rda - 32;   
;
	lda     _rda
	sec
	sbc     #$20
	sta     _update_list+2
;
; if (rda != 32) sfx_play (SFX_TU, SC_LEVEL);  
;
	lda     _rda
	cmp     #$20
	beq     L26EE
	lda     #$0D
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; ppu_wait_nmi ();
;
L26EE:	jsr     _ppu_wait_nmi
;
; while (rda = *gp_gen ++) {
;
L26D2:	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L26D5
	inx
L26D5:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
	sta     _rda
	tax
	jne     L26D0
;
; while (!(pad_poll (0) & (PAD_B|PAD_A)));
;
L3A37:	jsr     _pad_poll
	and     #$03
	beq     L3A37
;
; rdd = 1; extern_frame ();
;
	lda     #$01
	sta     _rdd
	jmp     _extern_frame

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ read_byte (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_read_byte: near

.segment	"CODE"

;
; return *script ++;
;
	lda     _script
	ldx     _script+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2ED4
	inx
L2ED4:	sta     _script
	stx     _script+1
	ldx     #$00
	lda     (regsave,x)
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ read_vbyte (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_read_vbyte: near

.segment	"CODE"

;
; sc_c = *script ++;
;
	lda     _script
	ldx     _script+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L2ED8
	inx
L2ED8:	sta     _script
	stx     _script+1
	ldy     #$00
	lda     (regsave),y
	sta     _sc_c
;
; if (sc_c & 128) return flags [sc_c & 127];
;
	ldx     #$00
	and     #$80
	beq     L3A38
	lda     _sc_c
	and     #$7F
	sta     ptr1
	txa
	clc
	adc     #>(_flags)
	sta     ptr1+1
	ldy     #<(_flags)
	lda     (ptr1),y
	rts
;
; return sc_c;
;
L3A38:	lda     _sc_c
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ readxy (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_readxy: near

.segment	"CODE"

;
; sc_x = read_byte ();
;
	jsr     _read_byte
	sta     _sc_x
;
; sc_y = read_byte ();
;
	jsr     _read_byte
	sta     _sc_y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ readvxy (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_readvxy: near

.segment	"CODE"

;
; sc_x = read_vbyte ();
;
	jsr     _read_vbyte
	sta     _sc_x
;
; sc_y = read_vbyte ();
;
	jsr     _read_vbyte
	sta     _sc_y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ run_script (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_run_script: near

.segment	"CODE"

;
; void run_script (unsigned char whichs) {
;
	jsr     pusha
;
; commands_executed = 0;
;
	lda     #$00
	sta     _commands_executed
;
; script_result = 0;
;
	sta     _script_result
;
; script = script_pool [whichs];
;
	tax
	lda     (sp,x)
	asl     a
	bcc     L3A3E
	inx
	clc
L3A3E:	adc     _script_pool
	sta     ptr1
	txa
	adc     _script_pool+1
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     _script
	stx     _script+1
;
; if (script == 0) return;
;
	cpx     #$00
	jne     L2EF5
	cmp     #$00
	jne     L2EF5
	jmp     incsp1
;
; next_script = script + sc_c;
;
L2EF3:	lda     _script
	ldx     _script+1
	clc
	adc     _sc_c
	bcc     L3A39
	inx
L3A39:	sta     _next_script
	stx     _next_script+1
;
; sc_terminado = sc_continuar = 0;
;
	lda     #$00
;
; while (!sc_terminado) {
;
	jmp     L3A4C
;
; switch (read_byte ()) {
;
L2EFE:	jsr     _read_byte
;
; }
;
	cmp     #$10
	beq     L2F06
	cmp     #$13
	beq     L2F0E
	cmp     #$20
	beq     L2F16
	cmp     #$21
	jeq     L2F27
	cmp     #$22
	jeq     L2F30
	cmp     #$FF
	jeq     L2F39
	jmp     L2F04
;
; readvxy ();
;
L2F06:	jsr     _readvxy
;
; sc_terminado = (flags [sc_x] != sc_y);
;
	ldy     _sc_x
	lda     _flags,y
	cmp     _sc_y
	jsr     boolne
;
; break;
;
	jmp     L3A3D
;
; readvxy ();
;
L2F0E:	jsr     _readvxy
;
; sc_terminado = (flags [sc_x] == sc_y);
;
	ldy     _sc_x
	lda     _flags,y
	cmp     _sc_y
	jsr     booleq
;
; break;
;
	jmp     L3A3D
;
; readvxy ();
;
L2F16:	jsr     _readvxy
;
; sc_x <<= 4; sc_y <<= 4;
;
	lda     _sc_x
	asl     a
	asl     a
	asl     a
	asl     a
	sta     _sc_x
	lda     _sc_y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     _sc_y
;
; sc_terminado = (!(prx + 7 >= sc_x && prx <= sc_x + 15 && pry + 15 >= sc_y && pry <= sc_y + 15));
;
	ldx     #$00
	lda     _prx
	clc
	adc     #$07
	bcc     L2F20
	inx
L2F20:	cmp     _sc_x
	txa
	sbc     #$00
	lda     #$00
	bcc     L2F25
	lda     _prx
	jsr     pusha0
	lda     _sc_x
	clc
	adc     #$0F
	bcc     L2F22
	ldx     #$01
L2F22:	jsr     tosicmp
	beq     L3A3F
	bcs     L2F21
L3A3F:	ldx     #$00
	lda     _pry
	clc
	adc     #$0F
	bcc     L2F23
	inx
L2F23:	cmp     _sc_y
	txa
	sbc     #$00
	lda     #$00
	bcc     L2F25
	lda     _pry
	jsr     pusha0
	lda     _sc_y
	clc
	adc     #$0F
	bcc     L2F24
	ldx     #$01
L2F24:	jsr     tosicmp
	bcc     L2F1F
	beq     L2F1F
L2F21:	lda     #$00
	jmp     L2F25
L2F1F:	lda     #$01
L2F25:	jsr     bnega
;
; break;
;
	jmp     L3A3D
;
; readxy ();
;
L2F27:	jsr     _readxy
;
; sc_terminado = (!(prx >= sc_x && prx <= sc_y));
;
	lda     _prx
	cmp     _sc_x
	lda     #$00
	bcc     L2F2E
	lda     _prx
	sec
	sbc     _sc_y
	bcc     L3A44
	beq     L3A44
	lda     #$00
	jmp     L2F2E
L3A44:	lda     #$01
L2F2E:	jsr     bnega
;
; break;
;
	jmp     L3A3D
;
; readxy ();
;
L2F30:	jsr     _readxy
;
; sc_terminado = (!(pry >= sc_x && pry <= sc_y));
;
	lda     _pry
	cmp     _sc_x
	lda     #$00
	bcc     L2F37
	lda     _pry
	sec
	sbc     _sc_y
	bcc     L3A47
	beq     L3A47
	lda     #$00
	jmp     L2F37
L3A47:	lda     #$01
L2F37:	jsr     bnega
;
; break;
;
	jmp     L3A3D
;
; sc_terminado = sc_continuar = 1;
;
L2F39:	lda     #$01
L3A4C:	sta     _sc_continuar
L3A3D:	sta     _sc_terminado
;
; while (!sc_terminado) {
;
L2F04:	lda     _sc_terminado
	jeq     L2EFE
;
; if (sc_continuar) {
;
	lda     _sc_continuar
	jeq     L2F44
;
; sc_terminado = 0;
;
	lda     #$00
	sta     _sc_terminado
;
; commands_executed = 1;
;
	lda     #$01
	sta     _commands_executed
;
; while (!sc_terminado) {
;
	jmp     L2F4A
;
; switch (sc_n = read_byte ()) {
;
L2F43:	jsr     _read_byte
	sta     _sc_n
;
; }
;
	cmp     #$01
	beq     L2F4C
	cmp     #$15
	beq     L2F53
	cmp     #$17
	jeq     L2F5D
	cmp     #$18
	jeq     L2F6F
	cmp     #$19
	jeq     L2F81
	cmp     #$1A
	jeq     L2F81
	cmp     #$20
	jeq     L2F88
	cmp     #$51
	jeq     L2F92
	cmp     #$86
	jeq     L2F9E
	cmp     #$E0
	jeq     L2FA4
	cmp     #$E2
	jeq     L2FA9
	cmp     #$E4
	jeq     L2FAD
	cmp     #$E5
	jeq     L2FB2
	cmp     #$F1
	jeq     L2FB6
	cmp     #$F2
	bne     L3A4D
;
; }
;
	jmp     incsp1
;
; }
;
L3A4D:	cmp     #$F4
	jeq     L2FBF
	cmp     #$FF
	jeq     L2FCB
	jmp     L2F4A
;
; readvxy ();
;
L2F4C:	jsr     _readvxy
;
; flags [sc_x] = sc_y;
;
	ldy     _sc_x
	lda     _sc_y
	sta     _flags,y
;
; break;
;
	jmp     L2F4A
;
; sc_x = read_vbyte ();
;
L2F53:	jsr     _read_vbyte
	sta     _sc_x
;
; flags [sc_x] = 1 - flags [sc_x];
;
	lda     #<(_flags)
	ldx     #>(_flags)
	clc
	adc     _sc_x
	bcc     L2F58
	inx
L2F58:	jsr     pushax
	lda     #$01
	jsr     pusha0
	ldy     _sc_x
	lda     _flags,y
	jsr     tossuba0
	ldy     #$00
	jsr     staspidx
;
; break;
;
	jmp     L2F4A
;
; sc_n = read_vbyte ();
;
L2F5D:	jsr     _read_vbyte
	sta     _sc_n
;
; readvxy ();
;
	jsr     _readvxy
;
; flags [sc_n] = flags [sc_n] > sc_x ? flags [sc_n] - 1 : sc_y;
;
	lda     #<(_flags)
	ldx     #>(_flags)
	clc
	adc     _sc_n
	bcc     L2F63
	inx
L2F63:	sta     ptr1
	stx     ptr1+1
	ldy     _sc_n
	lda     _flags,y
	sec
	sbc     _sc_x
	bcc     L3A48
	beq     L3A48
	ldy     _sc_n
	lda     _flags,y
	sec
	sbc     #$01
	jmp     L3A49
L3A48:	lda     _sc_y
L3A49:	ldy     #$00
	sta     (ptr1),y
;
; break;
;
	jmp     L2F4A
;
; sc_n = read_vbyte ();
;
L2F6F:	jsr     _read_vbyte
	sta     _sc_n
;
; readvxy ();
;
	jsr     _readvxy
;
; flags [sc_n] = flags [sc_n] < sc_y ? flags [sc_n] + 1 : sc_x;
;
	lda     #<(_flags)
	ldx     #>(_flags)
	clc
	adc     _sc_n
	bcc     L2F75
	inx
L2F75:	sta     ptr1
	stx     ptr1+1
	ldy     _sc_n
	lda     _flags,y
	cmp     _sc_y
	bcs     L3A4A
	ldy     _sc_n
	lda     _flags,y
	clc
	adc     #$01
	jmp     L3A4B
L3A4A:	lda     _sc_x
L3A4B:	ldy     #$00
	sta     (ptr1),y
;
; break;
;
	jmp     L2F4A
;
; flags [read_vbyte ()] = sc_n & 1;
;
L2F81:	jsr     _read_vbyte
	clc
	adc     #<(_flags)
	sta     ptr1
	txa
	adc     #>(_flags)
	sta     ptr1+1
	lda     _sc_n
	and     #$01
	ldy     #$00
	sta     (ptr1),y
;
; break;
;
	jmp     L2F4A
;
; readvxy ();
;
L2F88:	jsr     _readvxy
;
; ul = update_list;
;
	lda     #>(_update_list)
	sta     _ul+1
	lda     #<(_update_list)
	sta     _ul
;
; set_map_tile (sc_x, sc_y, read_vbyte ());
;
	jsr     decsp2
	lda     _sc_x
	ldy     #$01
	sta     (sp),y
	lda     _sc_y
	dey
	sta     (sp),y
	jsr     _read_vbyte
	jsr     _set_map_tile
;
; close_update_cycle ();
;
	jsr     _close_update_cycle
;
; break;
;
	jmp     L2F4A
;
; fzx1 = read_byte ();
;
L2F92:	jsr     _read_byte
	sta     _fzx1
;
; fzy1 = read_byte ();
;
	jsr     _read_byte
	sta     _fzy1
;
; fzx2 = read_byte ();
;
	jsr     _read_byte
	sta     _fzx2
;
; fzy2 = read_byte ();
;
	jsr     _read_byte
	sta     _fzy2
;
; f_zone_ac = 1;
;
	lda     #$01
	sta     _f_zone_ac
;
; break;
;
	jmp     L2F4A
;
; sc_n = read_vbyte (); readvxy ();
;
L2F9E:	jsr     _read_vbyte
	sta     _sc_n
	jsr     _readvxy
;
; containers_add ();
;
	jsr     _containers_add
;
; break;
;
	jmp     L2F4A
;
; sfx_play (read_vbyte (), 1);
;
L2FA4:	jsr     _read_vbyte
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; break;
;
	jmp     L2F4A
;
; plife = LIFE_INI;
;
L2FA9:	lda     #$05
	sta     _plife
;
; break;
;
	jmp     L2F4A
;
; sc_n = read_byte ();
;
L2FAD:	jsr     _read_byte
	sta     _sc_n
;
; do_extern_action ();
;
	jsr     _do_extern_action
;
; break;
;
	jmp     L2F4A
;
; delay (read_vbyte ());
;
L2FB2:	jsr     _read_vbyte
	jsr     _delay
;
; break;
;
	jmp     L2F4A
;
; script_result = 1;
;
L2FB6:	lda     #$01
	sta     _script_result
;
; return;
;
	jmp     incsp1
;
; ul = update_list;
;
L2FBD:	lda     #>(_update_list)
	sta     _ul+1
	lda     #<(_update_list)
	sta     _ul
;
; set_map_tile (sc_x >> 4, sc_x & 15, read_byte ());
;
	jsr     decsp2
	lda     _sc_x
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	ldy     #$01
	sta     (sp),y
	lda     _sc_x
	and     #$0F
	dey
	sta     (sp),y
	jsr     _read_byte
	jsr     _set_map_tile
;
; close_update_cycle ();
;
	jsr     _close_update_cycle
;
; while (0xff != (sc_x = read_byte ())) {
;
L2FBF:	lda     #$FF
	jsr     pusha0
	jsr     _read_byte
	sta     _sc_x
	jsr     tosicmp
	bne     L2FBD
;
; break;
;
	jmp     L2F4A
;
; sc_terminado = 1;
;
L2FCB:	lda     #$01
	sta     _sc_terminado
;
; while (!sc_terminado) {
;
L2F4A:	lda     _sc_terminado
	jeq     L2F43
;
; script = next_script;
;
L2F44:	lda     _next_script+1
	sta     _script+1
	lda     _next_script
	sta     _script
;
; while ((sc_c = read_byte ()) != 0xff) {
;
L2EF5:	jsr     _read_byte
	sta     _sc_c
	cmp     #$FF
	jne     L2EF3
;
; }
;
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ hud_update (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_hud_update: near

.segment	"CODE"

;
; 136, 15, 4,
;
	jsr     decsp3
	lda     #$88
	ldy     #$02
	sta     (sp),y
	lda     #$0F
	dey
	sta     (sp),y
	lda     #$04
	dey
	sta     (sp),y
;
; spr_items [ (flags [PLAYER_INV_FLAG] > 2 && flags [PLAYER_INV_FLAG] < 0xff) ? flags [PLAYER_INV_FLAG] : 0 ]
;
	lda     _flags
	cmp     #$03
	tya
	tax
	bcc     L2FDF
	lda     _flags
	cmp     #$FF
	bcc     L3A53
	txa
	jmp     L2FDF
L3A53:	lda     _flags
L2FDF:	asl     a
	bcc     L3A50
	inx
	clc
L3A50:	adc     #<(_spr_items)
;
; ); 
;
	sta     ptr1
;
; spr_items [ (flags [PLAYER_INV_FLAG] > 2 && flags [PLAYER_INV_FLAG] < 0xff) ? flags [PLAYER_INV_FLAG] : 0 ]
;
	txa
	adc     #>(_spr_items)
;
; ); 
;
	sta     ptr1+1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     _oam_meta_spr
;
; if (plife != oplife) {
;
	lda     _oplife
	cmp     _plife
	beq     L2FE1
;
; p_t2 (5, 2, plife);
;
	jsr     decsp2
	lda     #$05
	ldy     #$01
	sta     (sp),y
	lda     #$02
	dey
	sta     (sp),y
	lda     _plife
	jsr     _p_t2
;
; oplife = plife;
;
	lda     _plife
	sta     _oplife
;
; }
;
L2FE1:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ hud_draw (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_hud_draw: near

.segment	"CODE"

;
; vram_adr (NAMETABLE_A);
;
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; vram_unrle (hud_rle);
;
	lda     #<(_hud_rle)
	ldx     #>(_hud_rle)
	jmp     _vram_unrle

.endproc

; ---------------------------------------------------------------
; void __near__ containers_do (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_containers_do: near

.segment	"CODE"

;
; rdx = (prx + 4) >> 4; rdy = (pry + 8) >> 4;
;
	ldx     #$00
	lda     _prx
	clc
	adc     #$04
	bcc     L3000
	inx
L3000:	jsr     shrax4
	sta     _rdx
	ldx     #$00
	lda     _pry
	clc
	adc     #$08
	bcc     L3004
	inx
L3004:	jsr     shrax4
	sta     _rdy
;
; gpit = c_idx; while (gpit --) {
;
	lda     _c_idx
	sta     _gpit
	jmp     L3A59
;
; if (ppossee && rdx == c_x [gpit] && rdy == c_y [gpit]) {
;
L3007:	lda     _ppossee
	beq     L3A59
	ldy     _gpit
	lda     _c_x,y
	cmp     _rdx
	bne     L3A59
	ldy     _gpit
	lda     _c_y,y
	cmp     _rdy
	bne     L3A59
;
; containers_get = c_f [gpit];
;
	ldy     _gpit
	lda     _c_f,y
	sta     _containers_get
;
; return;
;
	rts
;
; gpit = c_idx; while (gpit --) {
;
L3A59:	lda     _gpit
	dec     _gpit
	tax
	bne     L3007
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ player_init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_init: near

.segment	"CODE"

;
; prx = (signed int) (player_ini_x [level] << 4); px = prx << FIX_BITS;
;
	ldy     _level
	lda     _player_ini_x,y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     _prx
	ldx     #$00
	lda     _prx
	jsr     aslax4
	sta     _px
	stx     _px+1
;
; pry = (signed int) (player_ini_y [level] << 4); py = pry << FIX_BITS;
;
	ldy     _level
	lda     _player_ini_y,y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     _pry
	ldx     #$00
	lda     _pry
	jsr     aslax4
	sta     _py
	stx     _py+1
;
; player_register_safe_spot ();
;
	jsr     _player_register_safe_spot
;
; pfacing = CELL_FACING_RIGHT;
;
	lda     #$00
	sta     _pfacing
;
; player_reset_movement ();
;
	jsr     _player_reset_movement
;
; pkilled = 0;
;
	lda     #$00
	sta     _pkilled
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ player_render (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_render: near

.segment	"CODE"

;
; if (!pflickering || half_life) {
;
	lda     _pflickering
	beq     L306E
	lda     _half_life
	beq     L306D
;
; oam_meta_spr (prx, pry + SPRITE_ADJUST, 20, spr_player [psprid]); 
;
L306E:	jsr     decsp3
	lda     _prx
	ldy     #$02
	sta     (sp),y
	lda     _pry
	clc
	adc     #$10
	sec
	sbc     #$01
	clc
	adc     #$08
	sec
	sbc     #$04
	dey
	sta     (sp),y
	lda     #$14
	dey
	sta     (sp),y
	ldx     #$00
	lda     _psprid
	asl     a
	bcc     L3A5C
	inx
	clc
L3A5C:	adc     _spr_player
	sta     ptr1
	txa
	adc     _spr_player+1
	sta     ptr1+1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
;
; } else {
;
	jmp     L3A5B
;
; oam_meta_spr (prx, pry + SPRITE_ADJUST, 20, sprplempty);
;
L306D:	jsr     decsp3
	lda     _prx
	ldy     #$02
	sta     (sp),y
	lda     _pry
	clc
	adc     #$10
	sec
	sbc     #$01
	clc
	adc     #$08
	sec
	sbc     #$04
	dey
	sta     (sp),y
	lda     #$14
	dey
	sta     (sp),y
	lda     #<(_sprplempty)
	ldx     #>(_sprplempty)
L3A5B:	jsr     _oam_meta_spr
;
; if (no_ct) {
;
	lda     _no_ct
	beq     L3088
;
; no_ct --;
;
	dec     _no_ct
;
; prx + 2, pry - 24 + SPRITE_ADJUST,
;
	jsr     decsp3
	lda     _prx
	clc
	adc     #$02
	ldy     #$02
	sta     (sp),y
	lda     _pry
	sec
	sbc     #$18
	clc
	adc     #$10
	sec
	sbc     #$01
	clc
	adc     #$08
	sec
	sbc     #$04
	dey
	sta     (sp),y
;
; oam_index,
;
	lda     _oam_index
	dey
	sta     (sp),y
;
; );
;
	lda     #<(_ssenc_05)
	ldx     #>(_ssenc_05)
	jsr     _oam_meta_spr
	sta     _oam_index
;
; }
;
L3088:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ player_hit (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_hit: near

.segment	"CODE"

;
; sfx_play (SFX_ENEMY_HIT, SC_PLAYER);
;
	lda     #$03
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; close_update_cycle ();
;
	jsr     _close_update_cycle
;
; player_render ();
;
	jsr     _player_render
;
; music_pause (1);
;
	lda     #$01
	jsr     _music_pause
;
; delay (60);
;
	lda     #$3C
	jsr     _delay
;
; music_pause (0);
;
	lda     #$00
	jsr     _music_pause
;
; player_reset_movement ();
;
	jsr     _player_reset_movement
;
; player_restore_safe_spot ();
;
	jsr     _player_restore_safe_spot
;
; pflickering = PLAYER_FLICKERS;
;
	lda     #$78
	sta     _pflickering
;
; if (plife) {
;
	lda     _plife
	beq     L3A5D
;
; plife --;
;
	dec     _plife
;
; } else pkilled = 1;
;
	jmp     L3A5E
L3A5D:	lda     #$01
	sta     _pkilled
;
; phit = PLAYER_HIT_FRAMES;
;
L3A5E:	lda     #$10
	sta     _phit
;
; pwashit = 0;
;
	lda     #$00
	sta     _pwashit
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ player_move (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_player_move: near

.segment	"CODE"

;
; if (phit) phit --;
;
	lda     _phit
	beq     L30B4
	dec     _phit
;
; if (pflickering) pflickering --;
;
L30B4:	lda     _pflickering
	beq     L3AB4
	dec     _pflickering
;
; pad = 0;
;
	lda     #$00
L3AB4:	sta     _pad
;
; if (use_ct) {
;
	lda     _use_ct
	jeq     L30BC
;
; psprid = CELL_USE_BASE + use_ct;
;
	clc
	adc     #$0F
	sta     _psprid
;
; if (fr_ct) fr_ct --; else {
;
	lda     _fr_ct
	beq     L3A6F
	dec     _fr_ct
	jmp     L3A78
;
; use_ct ++;
;
L3A6F:	inc     _use_ct
;
; if (use_ct == 7) {
;
	lda     _use_ct
	cmp     #$07
	bne     L3A72
;
; if (containers_get) {
;
	lda     _containers_get
	beq     L3A70
;
; sfx_play (SFX_GET_ITEM, SC_LEVEL);
;
	lda     #$02
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; if (flags [PLAYER_INV_FLAG] != flags [containers_get]) {
;
	ldy     _containers_get
	lda     _flags,y
	cmp     _flags
	beq     L3A70
;
; rda = flags [PLAYER_INV_FLAG];
;
	lda     _flags
	sta     _rda
;
; flags [PLAYER_INV_FLAG] = flags [containers_get];
;
	ldy     _containers_get
	lda     _flags,y
	sta     _flags
;
; flags [containers_get] = rda;
;
	ldy     _containers_get
	lda     _rda
	sta     _flags,y
;
; commands_executed = 1;
;
	lda     #$01
	sta     _commands_executed
;
; if (0 == commands_executed || n_pant >= 26) {
;
L3A70:	lda     _commands_executed
	beq     L3A71
	lda     _n_pant
	cmp     #$1A
	bcc     L3A72
;
; game_run_fire_script ();
;
L3A71:	jsr     _game_run_fire_script
;
; if (use_ct == 13 && !commands_executed) {
;
L3A72:	lda     _use_ct
	cmp     #$0D
	bne     L3A75
	lda     _commands_executed
	bne     L3A75
;
; use_ct = 0;
;
	sta     _use_ct
;
; pfacing = CELL_FACING_RIGHT;
;
	sta     _pfacing
;
; no_ct = ticks;
;
	lda     _ticks
	sta     _no_ct
;
; if (use_ct == 18) use_ct = 0;
;
L3A75:	lda     _use_ct
	cmp     #$12
	bne     L3A76
	lda     #$00
	sta     _use_ct
;
; fr_ct = 6;
;
L3A76:	lda     #$06
	sta     _fr_ct
;
; } else if (guay_ct) {
;
	jmp     L3A78
L30BC:	lda     _guay_ct
	beq     L3A77
;
; guay_ct --;
;
	dec     _guay_ct
;
; if (guay_ct == 0) pflickering = ticks;
;
	bne     L3A78
	lda     _ticks
	sta     _pflickering
;
; } else
;
	jmp     L3A78
;
; pad = pad0;
;
L3A77:	lda     _pad0
	sta     _pad
;
; evil_tile_hit = 0;
;
L3A78:	lda     #$00
	sta     _evil_tile_hit
;
; ) {
;
	lda     _pgotten
	bne     L310C
;
; if (!pj) pvy += PLAYER_G; else pvy += PLAYER_G_JUMPING;
;
	lda     _pj
	bne     L3103
	lda     #$04
	clc
	adc     _pvy
	sta     _pvy
	bcc     L3A61
	jmp     L3AAE
L3103:	inc     _pvy
	bne     L3A61
L3AAE:	inc     _pvy+1
;
; if (pvy > PLAYER_VY_FALLING_MAX) pvy = PLAYER_VY_FALLING_MAX;
;
L3A61:	lda     _pvy
	cmp     #$41
	lda     _pvy+1
	sbc     #$00
	bvs     L310E
	eor     #$80
L310E:	bpl     L310C
	ldx     #$00
	lda     #$40
	sta     _pvy
	stx     _pvy+1
;
; py += pvy;
;
L310C:	lda     _pvy
	clc
	adc     _py
	sta     _py
	lda     _pvy+1
	adc     _py+1
	sta     _py+1
;
; if (py < 0) { py = pry = 0; }
;
	ldx     _py+1
	cpx     #$80
	bcc     L3113
	lda     #$00
	sta     _pry
	sta     _py
	sta     _py+1
;
; else if (py > (192<<FIX_BITS)) pry = 192;
;
	jmp     L3A79
L3113:	lda     _py
	cmp     #$01
	lda     _py+1
	sbc     #$0C
	bvs     L311C
	eor     #$80
L311C:	bpl     L3119
	lda     #$C0
;
; else pry = py >> FIX_BITS;
;
	jmp     L3A62
L3119:	lda     _py
	ldx     _py+1
	jsr     asrax4
L3A62:	sta     _pry
;
; cx1 = prx >> 4;
;
L3A79:	lda     _prx
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     _cx1
;
; cx2 = (prx + 7) >> 4;
;
	ldx     #$00
	lda     _prx
	clc
	adc     #$07
	bcc     L3127
	inx
L3127:	jsr     shrax4
	sta     _cx2
;
; if (pvy + pgtmy) {
;
	ldx     #$00
	lda     _pgtmy
	bpl     L312A
	dex
L312A:	clc
	adc     _pvy
	pha
	txa
	adc     _pvy+1
	sta     tmp1
	pla
	ora     tmp1
	jeq     L314C
;
; if (pvy + pgtmy < 0) {
;
	ldx     #$00
	lda     _pgtmy
	bpl     L312D
	dex
L312D:	clc
	adc     _pvy
	txa
	adc     _pvy+1
	tax
	cpx     #$80
	ldx     #$00
	bcc     L3A7B
;
; cy1 = cy2 = pry >> 4;
;
	lda     _pry
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     _cy2
	sta     _cy1
;
; cm_two_points ();
;
	jsr     _cm_two_points
;
; if ((at1 & 8) || (at2 & 8))
;
	lda     _at1
	and     #$08
	bne     L3A7A
	lda     _at2
	and     #$08
	jeq     L314C
;
; pgotten = pvy = 0;
;
L3A7A:	ldx     #$00
	txa
	sta     _pvy
	sta     _pvy+1
	sta     _pgotten
;
; pry = (cy1 + 1) << 4;
;
	lda     _cy1
	clc
	adc     #$01
;
; } else {
;
	jmp     L3ABE
;
; } else if (pvy + pgtmy > 0) {
;
L3A7B:	lda     _pgtmy
	bpl     L3144
	dex
L3144:	clc
	adc     _pvy
	pha
	txa
	adc     _pvy+1
	tax
	pla
	cmp     #$01
	txa
	sbc     #$00
	bvs     L3145
	eor     #$80
L3145:	asl     a
	ldx     #$00
	bcc     L3A82
;
; cy1 = cy2 = (pry + 15) >> 4; 
;
	lda     _pry
	clc
	adc     #$0F
	bcc     L314A
	inx
L314A:	jsr     shrax4
	sta     _cy2
	sta     _cy1
;
; cm_two_points (); 
;
	jsr     _cm_two_points
;
; if (((pry - 1) & 15) < 4 && ((at1 & 12) || (at2 & 12))) {
;
	lda     _pry
	sec
	sbc     #$01
	ldx     #$00
	and     #$0F
	cmp     #$04
	bcs     L3A82
	lda     _at1
	and     #$0C
	bne     L3A81
	lda     _at2
	and     #$0C
	beq     L3A82
;
; pgotten = pvy = 0;
;
L3A81:	txa
	sta     _pvy
	sta     _pvy+1
	sta     _pgotten
;
; pry = (cy1 - 1) << 4;
;
	lda     _cy1
	sec
	sbc     #$01
L3ABE:	asl     a
	asl     a
	asl     a
	asl     a
	sta     _pry
;
; py = pry << FIX_BITS;
;
	jsr     aslax4
	sta     _py
	stx     _py+1
;
; cy1 = cy2 = (pry + 16) >> 4;
;
L314C:	ldx     #$00
L3A82:	lda     _pry
	clc
	adc     #$10
	bcc     L3166
	inx
L3166:	jsr     shrax4
	sta     _cy2
	sta     _cy1
;
; cm_two_points ();
;
	jsr     _cm_two_points
;
; ppossee = ((at1 & 12) || (at2 & 12));
;
	lda     _at1
	and     #$0C
	bne     L3A83
	lda     _at2
	and     #$0C
	beq     L3A84
L3A83:	lda     #$01
L3A84:	sta     _ppossee
;
; if (ppossee || pgotten) {
;
	lda     _ppossee
	bne     L3A85
	lda     _pgotten
	beq     L316E
;
; pjustjumped = 0;
;
L3A85:	lda     #$00
	sta     _pjustjumped
;
; if (ppossee) {
;
L316E:	lda     _ppossee
	beq     L3A87
;
; if (at1 & CONVEYOR_BIT) { if (at1 & 1) pgtmx = CONVEYOR_SPEED; else pgtmx = -CONVEYOR_SPEED; pgotten = 1; }
;
	lda     _at1
	and     #$20
	beq     L3A86
	lda     _at1
	and     #$01
	beq     L3177
	lda     #$08
	jmp     L3A64
L3177:	lda     #$F8
L3A64:	sta     _pgtmx
	lda     #$01
	sta     _pgotten
;
; if (at2 & CONVEYOR_BIT) { if (at2 & 1) pgtmx = CONVEYOR_SPEED; else pgtmx = -CONVEYOR_SPEED; pgotten = 1; }
;
L3A86:	lda     _at2
	and     #$20
	beq     L3A87
	lda     _at2
	and     #$01
	beq     L3182
	lda     #$08
	jmp     L3A65
L3182:	lda     #$F8
L3A65:	sta     _pgtmx
	lda     #$01
	sta     _pgotten
;
; if ((at1 & PROPELLERS_BIT) || (at2 & PROPELLERS_BIT)) {
;
L3A87:	lda     _at1
	and     #$40
	bne     L3A88
	lda     _at2
	and     #$40
	beq     L3AB0
;
; pvy -= PLAYER_G + PLAYER_AY_PROPELLER;
;
L3A88:	lda     _pvy
	sec
	sbc     #$06
	sta     _pvy
	bcs     L3192
	dec     _pvy+1
;
; if (pvy < -PLAYER_VY_PROPELLER_MAX) pvy = -PLAYER_VY_PROPELLER_MAX;
;
L3192:	lda     _pvy
	cmp     #$E0
	lda     _pvy+1
	sbc     #$FF
	bvc     L3195
	eor     #$80
L3195:	asl     a
	ldx     #$00
	bcc     L3A89
	dex
	lda     #$E0
	sta     _pvy
	stx     _pvy+1
;
; cy1 = cy2 = (pry + 12) >> 4; // Let it bleed a bit
;
L3AB0:	ldx     #$00
L3A89:	lda     _pry
	clc
	adc     #$0C
	bcc     L319C
	inx
L319C:	jsr     shrax4
	sta     _cy2
	sta     _cy1
;
; cm_two_points ();
;
	jsr     _cm_two_points
;
; if (at1 == 1 || at2 == 1) evil_tile_hit = 1;
;
	lda     _at1
	cmp     #$01
	beq     L3A8D
	lda     _at2
	cmp     #$01
	bne     L3A8E
L3A8D:	sta     _evil_tile_hit
;
; if (pad & PAD_A) {
;
L3A8E:	lda     _pad
	and     #$01
	beq     L3A91
;
; if (!pjb) {
;
	lda     _pjb
	bne     L31BA
;
; pjb = 1;
;
	lda     #$01
	sta     _pjb
;
; if (!pj) {
;
	lda     _pj
	bne     L31BA
;
; (pgotten || ppossee || phit)
;
	lda     _pgotten
	bne     L3A8F
	lda     _ppossee
	bne     L3A8F
	lda     _phit
	beq     L31BA
;
; pctj = 0; 
;
L3A8F:	lda     #$00
	sta     _pctj
;
; pj = 1; pjustjumped = 1;
;
	lda     #$01
	sta     _pj
	sta     _pjustjumped
;
; pvy = -PLAYER_VY_JUMP_INITIAL;
;
	ldx     #$FF
	lda     #$CC
	sta     _pvy
	stx     _pvy+1
;
; sfx_play (SFX_JUMP, SC_PLAYER);
;
	lda     #$01
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; if (ppossee) {
;
	lda     _ppossee
	beq     L31BA
;
; player_register_safe_spot ();
;
	jsr     _player_register_safe_spot
;
; if (pj) {
;
L31BA:	lda     _pj
	beq     L3A93
;
; pctj ++; if (pctj == PLAYER_VY_JUMP_A_STEPS) pj = 0;
;
	inc     _pctj
	lda     _pctj
	cmp     #$10
	bne     L3A93
;
; } else {
;
	jmp     L3AB1
;
; pjb = 0;
;
L3A91:	sta     _pjb
;
; if (pj) {
;
	lda     _pj
	beq     L3A93
;
; if (pvy < -PLAYER_VY_JUMP_RELEASE) pvy = -PLAYER_VY_JUMP_RELEASE;
;
	lda     _pvy
	cmp     #$E8
	lda     _pvy+1
	sbc     #$FF
	bvc     L31CB
	eor     #$80
L31CB:	asl     a
	lda     #$00
	bcc     L3A66
	ldx     #$FF
	lda     #$E8
	sta     _pvy
	stx     _pvy+1
;
; pj = 0;
;
L3AB1:	lda     #$00
L3A66:	sta     _pj
;
; if (pad & PAD_LEFT) {
;
L3A93:	lda     _pad
	ldx     #$00
	and     #$40
	beq     L3A95
;
; if (!pfixct) if (pvx > -PLAYER_VX_MAX) {
;
	lda     _pfixct
	bne     L3A94
	lda     _pvx
	sec
	sbc     #$E1
	bvs     L31D7
	eor     #$80
L31D7:	bpl     L3A94
;
; pvx -= PLAYER_AX;   
;
	lda     _pvx
	sec
	sbc     #$03
	sta     _pvx
;
; pfacing = CELL_FACING_LEFT;
;
L3A94:	lda     #$08
	sta     _pfacing
;
; } else if (pad & PAD_RIGHT) {
;
	jmp     L3A9C
L3A95:	lda     _pad
	and     #$80
	beq     L3A98
;
; if (!pfixct) if (pvx < PLAYER_VX_MAX) {
;
	lda     _pfixct
	bne     L3A96
	lda     _pvx
	sec
	sbc     #$20
	bvc     L31E5
	eor     #$80
L31E5:	asl     a
	txa
	bcc     L3A97
;
; pvx += PLAYER_AX;
;
	lda     #$03
	clc
	adc     _pvx
	sta     _pvx
;
; pfacing = CELL_FACING_RIGHT;
;
L3A96:	txa
L3A97:	sta     _pfacing
;
; } else {
;
	jmp     L3A9C
;
; if (pvx > 0) {
;
L3A98:	lda     _pvx
	sec
	sbc     #$01
	bvs     L31EF
	eor     #$80
L31EF:	bpl     L3A9A
;
; pvx -= PLAYER_RX; if (pvx < 0) pvx = 0;
;
	lda     _pvx
	sec
	sbc     #$04
	sta     _pvx
	asl     a
	bcc     L3A9C
;
; } else if (pvx < 0) {
;
	jmp     L3AB2
L3A9A:	lda     _pvx
	asl     a
	bcc     L3A9C
;
; pvx += PLAYER_RX; if (pvx > 0) pvx = 0;
;
	lda     #$04
	clc
	adc     _pvx
	sta     _pvx
	sec
	sbc     #$01
	bvs     L3202
	eor     #$80
L3202:	bpl     L3A9C
L3AB2:	stx     _pvx
;
; px += pvx;  
;
L3A9C:	lda     _pvx
	cmp     #$80
	bcc     L3A6D
	dex
	clc
L3A6D:	adc     _px
	sta     _px
	txa
	adc     _px+1
	sta     _px+1
;
; if (pgotten) px += pgtmx;
;
	lda     _pgotten
	beq     L3209
	ldx     #$00
	lda     _pgtmx
	cmp     #$80
	bcc     L3A6E
	dex
	clc
L3A6E:	adc     _px
	sta     _px
	txa
	adc     _px+1
	sta     _px+1
;
; if (px < (4<<FIX_BITS)) prx = 4;
;
L3209:	lda     _px
	cmp     #$40
	lda     _px+1
	sbc     #$00
	bvc     L3212
	eor     #$80
L3212:	bpl     L320F
	lda     #$04
;
; else if (px > (244<<FIX_BITS)) prx = 244;
;
	jmp     L3A68
L320F:	lda     _px
	cmp     #$41
	lda     _px+1
	sbc     #$0F
	bvs     L3219
	eor     #$80
L3219:	bpl     L3216
	lda     #$F4
;
; else prx = px >> FIX_BITS;
;
	jmp     L3A68
L3216:	lda     _px
	ldx     _px+1
	jsr     asrax4
L3A68:	sta     _prx
;
; cy1 = pry >> 4;
;
	lda     _pry
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     _cy1
;
; cy2 = (pry + 15) >> 4;
;
	ldx     #$00
	lda     _pry
	clc
	adc     #$0F
	bcc     L3224
	inx
L3224:	jsr     shrax4
	sta     _cy2
;
; if (pvx + pgtmx) {
;
	ldx     #$00
	lda     _pvx
	bpl     L3227
	dex
L3227:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _pgtmx
	bpl     L3228
	dex
L3228:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	sta     tmp1
	pla
	ora     tmp1
	jeq     L324B
;
; if (pvx + pgtmx < 0) {
;
	ldx     #$00
	lda     _pvx
	bpl     L322B
	dex
L322B:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _pgtmx
	bpl     L322C
	dex
L322C:	clc
	adc     ptr1
	txa
	adc     ptr1+1
	tax
	cpx     #$80
	ldx     #$00
	bcc     L3AA0
;
; cx1 = cx2 = prx >> 4;
;
	lda     _prx
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	sta     _cx2
	sta     _cx1
;
; cm_two_points ();
;
	jsr     _cm_two_points
;
; if ((at1 & 8) || (at2 & 8)) {
;
	lda     _at1
	and     #$08
	bne     L3A9F
	lda     _at2
	and     #$08
	jeq     L324B
;
; pvx = 0;
;
L3A9F:	lda     #$00
	sta     _pvx
;
; prx = (cx1 + 1) << 4;
;
	lda     _cx1
	clc
	adc     #$01
	asl     a
	asl     a
	asl     a
	asl     a
;
; } else {
;
	jmp     L3ABC
;
; } else if (pvx + pgtmx > 0) {
;
L3AA0:	lda     _pvx
	bpl     L3242
	dex
L3242:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _pgtmx
	bpl     L3243
	dex
L3243:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	cmp     #$01
	txa
	sbc     #$00
	bvs     L3244
	eor     #$80
L3244:	bpl     L324B
;
; cx1 = cx2 = (prx + 7) >> 4; 
;
	ldx     #$00
	lda     _prx
	clc
	adc     #$07
	bcc     L3249
	inx
L3249:	jsr     shrax4
	sta     _cx2
	sta     _cx1
;
; cm_two_points (); 
;
	jsr     _cm_two_points
;
; if ((at1 & 8) || (at2 & 8)) {
;
	lda     _at1
	and     #$08
	bne     L3AA1
	lda     _at2
	and     #$08
	beq     L324B
;
; pvx = 0;
;
L3AA1:	lda     #$00
	sta     _pvx
;
; prx = ((cx1 - 1) << 4) + 8;
;
	lda     _cx1
	sec
	sbc     #$01
	asl     a
	asl     a
	asl     a
	asl     a
	clc
	adc     #$08
L3ABC:	sta     _prx
;
; px = prx << FIX_BITS;
;
	ldx     #$00
	lda     _prx
	jsr     aslax4
	sta     _px
	stx     _px+1
;
; if (evil_tile_hit) {
;
L324B:	lda     _evil_tile_hit
	beq     L3261
;
; pjustjumped = 0;
;
	lda     #$00
	sta     _pjustjumped
;
; pvy = -PLAYER_V_REBOUND; 
;
	ldx     #$FF
	lda     #$C0
	sta     _pvy
	stx     _pvy+1
;
; ) pwashit = 1; //player_hit ();
;
	lda     _pflickering
	bne     L3261
	lda     #$01
	sta     _pwashit
;
; if (pad & PAD_B) {
;
L3261:	lda     _pad
	and     #$02
	beq     L3A6A
;
; commands_executed = containers_get = 0;
;
	lda     #$00
	sta     _containers_get
	sta     _commands_executed
;
; if (!pfiring) {
;
	lda     _pfiring
	bne     L3270
;
; containers_do ();
;
	jsr     _containers_do
;
; flags [CONTAINERS_HAS_GOT_FLAG] = containers_get;
;
	lda     _containers_get
	sta     _flags+30
;
; if (containers_get) {
;
	lda     _containers_get
	beq     L3270
;
; player_reset_movement ();
;
	jsr     _player_reset_movement
;
; use_ct = 1;
;
	lda     #$01
	sta     _use_ct
;
; if (!pfiring) {
;
L3270:	lda     _pfiring
	bne     L3AA2
;
; if (ppossee){
;
	lda     _ppossee
	beq     L3AA2
;
; player_reset_movement ();
;
	jsr     _player_reset_movement
;
; use_ct = 1;
;
	lda     #$01
	sta     _use_ct
;
; pfiring = 1;
;
L3AA2:	lda     #$01
;
; } else pfiring = 0;
;
L3A6A:	sta     _pfiring
;
; if (use_ct) {
;
	lda     _use_ct
;
; } else {
;
	bne     L3283
;
; if ((ppossee || pgotten) && pvy >= 0) {
;
	lda     _ppossee
	bne     L3AA4
	lda     _pgotten
	beq     L3AAD
L3AA4:	ldx     _pvy+1
	bmi     L3AAD
;
; if (guay_ct) 
;
	lda     _guay_ct
	beq     L3AA7
;
; psprid = CELL_GUAY;
;
	lda     #$07
;
; else if (ABS (pvx) > PLAYER_VX_MIN) {
;
	jmp     L3A6B
L3AA7:	lda     _pvx
	asl     a
	ldx     #$00
	bcc     L3AA9
	lda     _pvx
	eor     #$FF
	clc
	adc     #$01
L3AA8:	cmp     #$80
	bcc     L3298
	jmp     L3A6C
L3AA9:	lda     _pvx
	cmp     #$80
	bcc     L3AA8
L3A6C:	dex
L3298:	cmp     #$0D
	txa
	sbc     #$00
	bvs     L329F
	eor     #$80
L329F:	asl     a
	lda     #$00
	bcc     L3A6B
;
; psprid = CELL_WALK_BASE + ((prx >> 4) & 3);
;
	lda     _prx
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	and     #$03
	clc
	adc     #$01
;
; } else psprid = CELL_IDLE;
;
	jmp     L3A6B
;
; psprid = CELL_AIRBORNE;
;
L3AAD:	lda     #$05
L3A6B:	sta     _psprid
;
; psprid += pfacing;
;
	lda     _pfacing
	clc
	adc     _psprid
	sta     _psprid
;
; }
;
L3283:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ simplecoco_init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_simplecoco_init: near

.segment	"CODE"

;
; coco_it = COCOS_MAX; while (coco_it --) {
;
	lda     #$03
	sta     _coco_it
	jmp     L3ABF
;
; coco_flag [coco_it] = 0;
;
L32B0:	ldy     _coco_it
	lda     #$00
	sta     _coco_flag,y
;
; coco_it = COCOS_MAX; while (coco_it --) {
;
L3ABF:	lda     _coco_it
	dec     _coco_it
	tax
	bne     L32B0
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ simplecoco_aimed_new (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_simplecoco_aimed_new: near

.segment	"CODE"

;
; coco_it = COCOS_MAX; while (coco_it --) if (!coco_flag [coco_it]) {
;
	lda     #$03
	sta     _coco_it
	jmp     L3AD3
L32BB:	ldy     _coco_it
	lda     _coco_flag,y
	jne     L3AD3
;
; rda = DELTA (prx, rdx); // dx
;
	tax
	lda     _prx
	cmp     _rdx
	bcs     L3ACE
	lda     _rdx
	sec
	sbc     _prx
	jmp     L3AD6
L3ACE:	lda     _prx
	sec
	sbc     _rdx
L3AD6:	sta     _rda
;
; rdb = DELTA (pry, rdy); // dy
;
	lda     _pry
	cmp     _rdy
	bcs     L3ACF
	lda     _rdy
	sec
	sbc     _pry
	jmp     L3AD7
L3ACF:	lda     _pry
	sec
	sbc     _rdy
L3AD7:	sta     _rdb
;
; rdc = MIN (rda, rdb); // MIN (dx, dy)
;
	lda     _rda
	cmp     _rdb
	bcs     L3AD0
	jmp     L3AD2
L3AD0:	lda     _rdb
L3AD2:	sta     _rdc
;
; rdct = rda + rdb - (rdc >> 1) - (rdc >> 2) + (rdc >> 4);
;
	lda     _rda
	clc
	adc     _rdb
	bcc     L3AC0
	inx
L3AC0:	jsr     pushax
	lda     _rdc
	lsr     a
	jsr     tossuba0
	jsr     pushax
	lda     _rdc
	lsr     a
	lsr     a
	jsr     tossuba0
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _rdc
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	pla
	sta     _rdct
;
; if (rdct > COCO_FAIR_D) {
;
	cmp     #$41
	bcs     L3AD8
;
; }
;
	rts
;
; _coco_x = rdx << FIX_BITS;
;
L3AD8:	lda     _rdx
	jsr     aslax4
	sta     __coco_x
	stx     __coco_x+1
;
; _coco_y = rdy << FIX_BITS;
;
	ldx     #$00
	lda     _rdy
	jsr     aslax4
	sta     __coco_y
	stx     __coco_y+1
;
; gpsint = COCO_V * rda / rdct; coco_vx [coco_it] = ADD_SIGN2 (px, _coco_x, gpsint);
;
	lda     _rda
	jsr     pusha0
	lda     #$18
	jsr     tosumula0
	jsr     pushax
	lda     _rdct
	jsr     tosudiva0
	sta     _gpsint
	stx     _gpsint+1
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3ACA
	inx
	clc
L3ACA:	adc     #<(_coco_vx)
	tay
	txa
	adc     #>(_coco_vx)
	tax
	tya
	jsr     pushax
	lda     __coco_x
	ldx     __coco_x+1
	cpx     _px+1
	bne     L32FB
	cmp     _px
	bne     L32FB
	ldx     #$00
	txa
	jmp     L3307
L32FB:	lda     _px
	ldx     _px+1
	jsr     pushax
	lda     __coco_x
	ldx     __coco_x+1
	jsr     tosicmp
	bmi     L3304
	beq     L3304
	lda     _gpsint
	ldx     _gpsint+1
	jmp     L3307
L3304:	lda     _gpsint
	ldx     _gpsint+1
	jsr     negax
L3307:	ldy     #$00
	jsr     staxspidx
;
; gpsint = COCO_V * rdb / rdct; coco_vy [coco_it] = ADD_SIGN2 (py, _coco_y, gpsint);
;
	lda     _rdb
	jsr     pusha0
	lda     #$18
	jsr     tosumula0
	jsr     pushax
	lda     _rdct
	jsr     tosudiva0
	sta     _gpsint
	stx     _gpsint+1
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3ACB
	inx
	clc
L3ACB:	adc     #<(_coco_vy)
	tay
	txa
	adc     #>(_coco_vy)
	tax
	tya
	jsr     pushax
	lda     __coco_y
	ldx     __coco_y+1
	cpx     _py+1
	bne     L3313
	cmp     _py
	bne     L3313
	ldx     #$00
	txa
	jmp     L331F
L3313:	lda     _py
	ldx     _py+1
	jsr     pushax
	lda     __coco_y
	ldx     __coco_y+1
	jsr     tosicmp
	bmi     L331C
	beq     L331C
	lda     _gpsint
	ldx     _gpsint+1
	jmp     L331F
L331C:	lda     _gpsint
	ldx     _gpsint+1
	jsr     negax
L331F:	ldy     #$00
	jsr     staxspidx
;
; coco_flag [coco_it] = 1;
;
	ldy     _coco_it
	lda     #$01
	sta     _coco_flag,y
;
; coco_x [coco_it] = _coco_x;
;
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3ACC
	inx
	clc
L3ACC:	adc     #<(_coco_x)
	sta     ptr1
	txa
	adc     #>(_coco_x)
	sta     ptr1+1
	lda     __coco_x
	ldy     #$00
	sta     (ptr1),y
	iny
	lda     __coco_x+1
	sta     (ptr1),y
;
; coco_y [coco_it] = _coco_y;
;
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3ACD
	inx
	clc
L3ACD:	adc     #<(_coco_y)
	sta     ptr1
	txa
	adc     #>(_coco_y)
	sta     ptr1+1
	lda     __coco_y
	dey
	sta     (ptr1),y
	iny
	lda     __coco_y+1
	sta     (ptr1),y
;
; break;
;
	rts
;
; coco_it = COCOS_MAX; while (coco_it --) if (!coco_flag [coco_it]) {
;
L3AD3:	lda     _coco_it
	dec     _coco_it
	tax
	jne     L32BB
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ simplecoco_do (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_simplecoco_do: near

.segment	"CODE"

;
; coco_it = COCOS_MAX; while (coco_it --) if (coco_flag [coco_it]) {
;
	lda     #$03
	sta     _coco_it
	jmp     L3AEB
L3330:	ldy     _coco_it
	lda     _coco_flag,y
	jeq     L3AEB
;
; _coco_x = coco_x [coco_it] + coco_vx [coco_it];
;
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3ADF
	inx
	clc
L3ADF:	adc     #<(_coco_x)
	sta     ptr1
	txa
	adc     #>(_coco_x)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3AE0
	inx
	clc
L3AE0:	adc     #<(_coco_vx)
	sta     ptr1
	txa
	adc     #>(_coco_vx)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosaddax
	sta     __coco_x
	stx     __coco_x+1
;
; _coco_y = coco_y [coco_it] + coco_vy [coco_it];
;
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3AE1
	inx
	clc
L3AE1:	adc     #<(_coco_y)
	sta     ptr1
	txa
	adc     #>(_coco_y)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3AE2
	inx
	clc
L3AE2:	adc     #<(_coco_vy)
	sta     ptr1
	txa
	adc     #>(_coco_vy)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosaddax
	sta     __coco_y
	stx     __coco_y+1
;
; if (_coco_x < 0 || _coco_x > 256<<FIX_BITS || _coco_y < 0 || _coco_y > 192<<FIX_BITS) {
;
	ldx     __coco_x+1
	cpx     #$80
	bcs     L3AE7
	lda     __coco_x
	cmp     #$01
	lda     __coco_x+1
	sbc     #$10
	bvs     L3342
	eor     #$80
L3342:	bmi     L3AE7
	ldx     __coco_y+1
	cpx     #$80
	bcs     L3AE7
	lda     __coco_y
	cmp     #$01
	lda     __coco_y+1
	sbc     #$0C
	bvs     L3343
	eor     #$80
L3343:	bpl     L3340
;
; coco_flag [coco_it] = 0; break;
;
L3AE7:	ldy     _coco_it
	lda     #$00
	sta     _coco_flag,y
	rts
;
; rdx = _coco_x >> FIX_BITS;
;
L3340:	lda     __coco_x
	ldx     __coco_x+1
	jsr     asrax4
	sta     _rdx
;
; rdy = _coco_y >> FIX_BITS;
;
	lda     __coco_y
	ldx     __coco_y+1
	jsr     asrax4
	sta     _rdy
;
; oam_index = oam_spr (rdx, rdy + SPRITE_ADJUST, COCO_PATTERN, COCO_PALETTE, oam_index);
;
	jsr     decsp4
	lda     _rdx
	ldy     #$03
	sta     (sp),y
	lda     _rdy
	clc
	adc     #$10
	sec
	sbc     #$01
	clc
	adc     #$08
	sec
	sbc     #$04
	dey
	sta     (sp),y
	lda     #$01
	dey
	sta     (sp),y
	dey
	sta     (sp),y
	lda     _oam_index
	jsr     _oam_spr
	sta     _oam_index
;
; if (rdx >= prx + 1 && rdx <= prx + 7 && rdy + 7 >= pry && rdy <= pry + 12
;
	lda     _rdx
	jsr     pusha0
	lda     _prx
	clc
	adc     #$01
	bcc     L335C
	ldx     #$01
L335C:	jsr     tosicmp
	bcc     L3AEC
	lda     _rdx
	jsr     pusha0
	lda     _prx
	clc
	adc     #$07
	bcc     L335E
	ldx     #$01
L335E:	jsr     tosicmp
	beq     L3AE5
	bcs     L3AEC
L3AE5:	ldx     #$00
	lda     _rdy
	clc
	adc     #$07
	bcc     L335F
	inx
L335F:	cmp     _pry
	txa
	sbc     #$00
	ldx     #$00
	bcc     L3AEA
	lda     _rdy
	jsr     pusha0
	lda     _pry
;
; && !pflickering
;
	clc
	adc     #$0C
	bcc     L3360
	ldx     #$01
L3360:	jsr     tosicmp
	beq     L3AE6
	bcs     L3AEC
;
; ) {
;
L3AE6:	lda     _pflickering
	bne     L3AEC
;
; player_hit ();
;
	jsr     _player_hit
;
; coco_flag [coco_it] = 0; 
;
	ldy     _coco_it
	lda     #$00
	sta     _coco_flag,y
;
; coco_x [coco_it] = _coco_x;
;
L3AEC:	ldx     #$00
L3AEA:	lda     _coco_it
	asl     a
	bcc     L3AE3
	inx
	clc
L3AE3:	adc     #<(_coco_x)
	sta     ptr1
	txa
	adc     #>(_coco_x)
	sta     ptr1+1
	lda     __coco_x
	ldy     #$00
	sta     (ptr1),y
	iny
	lda     __coco_x+1
	sta     (ptr1),y
;
; coco_y [coco_it] = _coco_y;
;
	ldx     #$00
	lda     _coco_it
	asl     a
	bcc     L3AE4
	inx
	clc
L3AE4:	adc     #<(_coco_y)
	sta     ptr1
	txa
	adc     #>(_coco_y)
	sta     ptr1+1
	lda     __coco_y
	dey
	sta     (ptr1),y
	iny
	lda     __coco_y+1
	sta     (ptr1),y
;
; coco_it = COCOS_MAX; while (coco_it --) if (coco_flag [coco_it]) {
;
L3AEB:	lda     _coco_it
	dec     _coco_it
	tax
	jne     L3330
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ enems_load (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enems_load: near

.segment	"CODE"

;
; gp_gen = (unsigned char *) c_enems [n_pant];
;
	ldx     #$00
	lda     _n_pant
	asl     a
	bcc     L3AF4
	inx
	clc
L3AF4:	adc     _c_enems
	sta     ptr1
	txa
	adc     _c_enems+1
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _gp_gen+1
	dey
	lda     (ptr1),y
	sta     _gp_gen
;
; if (!gp_gen) rdct = 0;
;
	ora     _gp_gen+1
	bne     L3371
	sta     _rdct
;
; for (gpit = 0; gpit < 3; gpit ++) {
;
L3371:	sty     _gpit
L3AF5:	lda     _gpit
	cmp     #$03
	bcc     L3AFA
;
; }
;
	rts
;
; if (!rdct) {
;
L3AFA:	lda     _rdct
	bne     L337D
;
; en_t [gpit] = 0;
;
	ldy     _gpit
	sta     _en_t,y
;
; continue;
;
	jmp     L3AF9
;
; rda = *gp_gen ++;
;
L337D:	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L3385
	inx
L3385:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
	sta     _rda
;
; if (!rda) {
;
	lda     _rda
	bne     L3386
;
; en_t [gpit] = 0;
;
	ldy     _gpit
	sta     _en_t,y
;
; rdct = 0;
;
	sta     _rdct
;
; continue;
;
	jmp     L3AF9
;
; en_t [gpit] = rda; 
;
L3386:	ldy     _gpit
	lda     _rda
	sta     _en_t,y
;
; rdt = en_t [gpit] & 0xf0;
;
	ldy     _gpit
	lda     _en_t,y
	and     #$F0
	sta     _rdt
;
; rdb = *gp_gen ++;
;
	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L3398
	inx
L3398:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
	sta     _rdb
;
; en_x1 [gpit] = en_x [gpit] = rdb << 4;
;
	lda     #<(_en_x1)
	ldx     #>(_en_x1)
	clc
	adc     _gpit
	bcc     L339B
	inx
L339B:	jsr     pushax
	lda     #<(_en_x)
	ldx     #>(_en_x)
	clc
	adc     _gpit
	bcc     L339E
	inx
L339E:	sta     ptr1
	stx     ptr1+1
	lda     _rdb
	asl     a
	asl     a
	asl     a
	asl     a
	ldy     #$00
	sta     (ptr1),y
	jsr     staspidx
;
; en_y1 [gpit] = en_y [gpit] = rdb & 0xf0;
;
	lda     #<(_en_y1)
	ldx     #>(_en_y1)
	clc
	adc     _gpit
	bcc     L33A2
	inx
L33A2:	jsr     pushax
	lda     #<(_en_y)
	ldx     #>(_en_y)
	clc
	adc     _gpit
	bcc     L33A5
	inx
L33A5:	sta     ptr1
	stx     ptr1+1
	lda     _rdb
	and     #$F0
	ldy     #$00
	sta     (ptr1),y
	jsr     staspidx
;
; rdb = *gp_gen ++;
;
	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L33A9
	inx
L33A9:	sta     _gp_gen
	stx     _gp_gen+1
	ldy     #$00
	lda     (regsave),y
	sta     _rdb
;
; en_x2 [gpit] = rdb << 4;
;
	lda     #<(_en_x2)
	ldx     #>(_en_x2)
	clc
	adc     _gpit
	bcc     L33AC
	inx
L33AC:	sta     ptr1
	stx     ptr1+1
	lda     _rdb
	asl     a
	asl     a
	asl     a
	asl     a
	sta     (ptr1),y
;
; en_y2 [gpit] = rdb & 0xf0;
;
	lda     #<(_en_y2)
	ldx     #>(_en_y2)
	clc
	adc     _gpit
	bcc     L33B0
	inx
L33B0:	sta     ptr1
	stx     ptr1+1
	lda     _rdb
	and     #$F0
	sta     (ptr1),y
;
; rdb = *gp_gen ++;
;
	lda     _gp_gen
	ldx     _gp_gen+1
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L33B4
	inx
L33B4:	sta     _gp_gen
	stx     _gp_gen+1
	lda     (regsave),y
	sta     _rdb
;
; en_state [gpit] = 0;
;
	ldy     _gpit
	lda     #$00
	sta     _en_state,y
;
; en_life [gpit] = ENEMS_GENERAL_LIFE;
;
	ldy     _gpit
	lda     #$01
	sta     _en_life,y
;
; switch (rdt) {
;
	lda     _rdt
;
; }
;
	cmp     #$10
	beq     L33C3
	cmp     #$20
	beq     L33C3
	cmp     #$30
	jeq     L3429
	cmp     #$B0
	jeq     L3432
	cmp     #$F0
	jeq     L3470
	jmp     L33BF
;
; en_s [gpit] = (en_t [gpit] & 0x0f) << 2;
;
L33C3:	lda     #<(_en_s)
	ldx     #>(_en_s)
	clc
	adc     _gpit
	bcc     L33C6
	inx
L33C6:	sta     ptr1
	stx     ptr1+1
	ldy     _gpit
	lda     _en_t,y
	and     #$0F
	asl     a
	asl     a
	ldy     #$00
	sta     (ptr1),y
;
; if (rdb == 1) {
;
	lda     _rdb
	cmp     #$01
	bne     L3AF6
;
; en_state [gpit] = 1;
;
	ldy     _gpit
	sta     _en_state,y
;
; } else {
;
	jmp     L33D1
;
; rdb >>= 1;
;
L3AF6:	lda     _rdb
	lsr     a
	sta     _rdb
;
; en_mx [gpit] = ADD_SIGN2 (en_x2 [gpit], en_x1 [gpit], rdb);
;
L33D1:	lda     #<(_en_mx)
	ldx     #>(_en_mx)
	clc
	adc     _gpit
	bcc     L33D6
	inx
L33D6:	jsr     pushax
	ldy     _gpit
	ldx     #$00
	lda     _en_x2,y
	sta     ptr1
	stx     ptr1+1
	ldy     _gpit
	lda     _en_x1,y
	cpx     ptr1+1
	bne     L33DF
	cmp     ptr1
	bne     L33DF
	txa
	jmp     L3AF7
L33DF:	ldy     _gpit
	lda     _en_x2,y
	jsr     pusha0
	ldy     _gpit
	lda     _en_x1,y
	jsr     tosicmp0
	bcc     L33EC
	beq     L33EC
	lda     _rdb
	jmp     L3AF7
L33EC:	lda     _rdb
	eor     #$FF
	clc
	adc     #$01
L3AF7:	cmp     #$80
	ldy     #$00
	jsr     staspidx
;
; en_my [gpit] = ADD_SIGN2 (en_y2 [gpit], en_y1 [gpit], rdb);
;
	lda     #<(_en_my)
	ldx     #>(_en_my)
	clc
	adc     _gpit
	bcc     L33F6
	inx
L33F6:	jsr     pushax
	ldy     _gpit
	ldx     #$00
	lda     _en_y2,y
	sta     ptr1
	stx     ptr1+1
	ldy     _gpit
	lda     _en_y1,y
	cpx     ptr1+1
	bne     L33FF
	cmp     ptr1
	bne     L33FF
	txa
	jmp     L3AF8
L33FF:	ldy     _gpit
	lda     _en_y2,y
	jsr     pusha0
	ldy     _gpit
	lda     _en_y1,y
	jsr     tosicmp0
	bcc     L340C
	beq     L340C
	lda     _rdb
	jmp     L3AF8
L340C:	lda     _rdb
	eor     #$FF
	clc
	adc     #$01
L3AF8:	cmp     #$80
	ldy     #$00
	jsr     staspidx
;
; if (en_y1 [gpit] > en_y2 [gpit]) {
;
	ldy     _gpit
	lda     _en_y1,y
	jsr     pusha0
	ldy     _gpit
	lda     _en_y2,y
	jsr     tosicmp0
	jcc     L33BF
	jeq     L33BF
;
; rda = en_y1 [gpit]; en_y1 [gpit] = en_y2 [gpit]; en_y2 [gpit] = rda;
;
	ldy     _gpit
	lda     _en_y1,y
	sta     _rda
	lda     #<(_en_y1)
	ldx     #>(_en_y1)
	clc
	adc     _gpit
	bcc     L3420
	inx
L3420:	sta     ptr1
	stx     ptr1+1
	ldy     _gpit
	lda     _en_y2,y
	ldy     #$00
	sta     (ptr1),y
	ldy     _gpit
	lda     _rda
	sta     _en_y2,y
;
; break;
;
	jmp     L33BF
;
; en_mx [gpit] = en_my [gpit] = 0;
;
L3429:	lda     #<(_en_mx)
	ldx     #>(_en_mx)
	clc
	adc     _gpit
	bcc     L342C
	inx
L342C:	jsr     pushax
	ldy     _gpit
	lda     #$00
	sta     _en_my,y
	tay
	jsr     staspidx
;
; break;
;
	jmp     L33BF
;
; SAW_EMERGING_DIRECTION [gpit] = (en_t [gpit] & 0x0f) - 1;
;
L3432:	lda     #<(_en_my)
	ldx     #>(_en_my)
	clc
	adc     _gpit
	bcc     L3435
	inx
L3435:	sta     ptr1
	stx     ptr1+1
	ldy     _gpit
	lda     _en_t,y
	and     #$0F
	sec
	sbc     #$01
	cmp     #$80
	ldy     #$00
	sta     (ptr1),y
;
; rda = (en_x1 [gpit] == en_x2 [gpit]);
;
	ldy     _gpit
	ldx     #$00
	lda     _en_x1,y
	sta     ptr1
	stx     ptr1+1
	ldy     _gpit
	lda     _en_x2,y
	cpx     ptr1+1
	bne     L3AF0
	cmp     ptr1
L3AF0:	jsr     booleq
	sta     _rda
;
; SAW_MOVING_DIRECTION [gpit] = (rda) ? 
;
	lda     #<(_en_mx)
	ldx     #>(_en_mx)
	clc
	adc     _gpit
	bcc     L3445
	inx
L3445:	jsr     pushax
;
; SGNC (en_y2 [gpit], en_y1 [gpit], SAW_V_DISPL) : 
;
	lda     _rda
	beq     L3448
	ldy     _gpit
	lda     _en_y2,y
	jsr     pusha0
	ldy     _gpit
	lda     _en_y1,y
	jsr     tosicmp0
	bcs     L3AF3
	lda     #$FC
	jmp     L3463
;
; SGNC (en_x2 [gpit], en_x1 [gpit], SAW_V_DISPL);
;
L3448:	ldy     _gpit
	lda     _en_x2,y
	jsr     pusha0
	ldy     _gpit
	lda     _en_x1,y
	jsr     tosicmp0
	bcs     L3AF3
	lda     #$FC
	jmp     L3463
L3AF3:	lda     #$04
L3463:	cmp     #$80
	ldy     #$00
	jsr     staspidx
;
; SAW_ORIENTATION [gpit] = rda;
;
	ldy     _gpit
	lda     _rda
	sta     _en_s,y
;
; en_ct [gpit] = SAW_EMERGING_STEPS;
;
	ldy     _gpit
	lda     #$0A
	sta     _en_ct,y
;
; break;     
;
	jmp     L33BF
;
; en_mx [gpit] = -1;
;
L3470:	ldy     _gpit
	lda     #$FF
	sta     _en_mx,y
;
; en_state [gpit] = 0;
;
	ldy     _gpit
	lda     #$00
	sta     _en_state,y
;
; en_life [gpit] = 3;
;
	ldy     _gpit
	lda     #$03
	sta     _en_life,y
;
; en_washit [gpit] = 0;
;
L33BF:	ldy     _gpit
	lda     #$00
	sta     _en_washit,y
;
; en_dying [gpit] = 0;
;
	ldy     _gpit
	sta     _en_dying,y
;
; for (gpit = 0; gpit < 3; gpit ++) {
;
L3AF9:	inc     _gpit
	jmp     L3AF5

.endproc

; ---------------------------------------------------------------
; void __near__ enems_kill (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enems_kill: near

.segment	"CODE"

;
; sfx_play (SFX_BUTT_HIT, SC_LEVEL);
;
	lda     #$09
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; rdt = en_t [gpit] = 0;
;
	ldy     _gpit
	lda     #$00
	sta     _en_t,y
	sta     _rdt
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ enems_drain (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enems_drain: near

.segment	"CODE"

;
; if (en_dying [gpit]) return;
;
	ldy     _gpit
	lda     _en_dying,y
	bne     L34A6
;
; if (en_washit [gpit]) return;
;
	ldy     _gpit
	lda     _en_washit,y
	bne     L34A6
;
; if (rdt != 0xf0 || en_life [gpit] == 0) {
;
	lda     _rdt
	cmp     #$F0
	bne     L3AFB
	ldy     _gpit
	lda     _en_life,y
	bne     L3498
;
; en_washit [gpit] = 0;
;
L3AFB:	ldy     _gpit
	lda     #$00
	sta     _en_washit,y
;
; en_dying [gpit] = ENEMS_GENERAL_DYING_FRAMES;
;
	ldy     _gpit
	lda     #$10
	sta     _en_dying,y
;
; enems_kill ();
;
	jmp     _enems_kill
;
; en_life [gpit] --;
;
L3498:	lda     #<(_en_life)
	ldx     #>(_en_life)
	clc
	adc     _gpit
	bcc     L34A9
	inx
L34A9:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	jsr     staspidx
;
; en_washit [gpit] = ENEMS_GENERAL_HIT_FRAMES;
;
	ldy     _gpit
	lda     #$10
	sta     _en_washit,y
;
; _en_state = 2;
;
	lda     #$02
	sta     __en_state
;
; }
;
L34A6:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ enems_restore_vals (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enems_restore_vals: near

.segment	"CODE"

;
; en_x [gpit] = _en_x; en_y [gpit] = _en_y;
;
	ldy     _gpit
	lda     __en_x
	sta     _en_x,y
	ldy     _gpit
	lda     __en_y
	sta     _en_y,y
;
; en_mx [gpit] = _en_mx; en_my [gpit] = _en_my;
;
	lda     #<(_en_mx)
	ldx     #>(_en_mx)
	clc
	adc     _gpit
	bcc     L34BB
	inx
L34BB:	sta     ptr1
	stx     ptr1+1
	lda     __en_mx
	ldy     #$00
	sta     (ptr1),y
	lda     #<(_en_my)
	ldx     #>(_en_my)
	clc
	adc     _gpit
	bcc     L34C0
	inx
L34C0:	sta     ptr1
	stx     ptr1+1
	lda     __en_my
	sta     (ptr1),y
;
; en_ct [gpit] = _en_ct;
;
	ldy     _gpit
	lda     __en_ct
	sta     _en_ct,y
;
; en_state [gpit] = _en_state;
;
	ldy     _gpit
	lda     __en_state
	sta     _en_state,y
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ enems_do (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enems_do: near

.segment	"CODE"

;
; pgotten = 0;
;
	lda     #$00
	sta     _pgotten
;
; pgtmx = 0;
;
	sta     _pgtmx
;
; pgtmy = 0;
;
	sta     _pgtmy
;
; genflipflop = half_life;
;
	lda     _half_life
	sta     _genflipflop
;
; gpit = (frame_counter & 3);
;
	lda     _frame_counter
	and     #$03
	sta     _gpit
;
; gpjt = 3; while (gpjt --) {
;
	lda     #$03
	sta     _gpjt
	jmp     L3BE7
;
; gpit = gpit + 2; if (gpit > 2) gpit -= 3;
;
L34D9:	lda     _gpit
	clc
	adc     #$02
	sta     _gpit
	cmp     #$03
	bcc     L34E0
	lda     _gpit
	sec
	sbc     #$03
	sta     _gpit
;
; _en_t = en_t [gpit];
;
L34E0:	ldy     _gpit
	lda     _en_t,y
	sta     __en_t
;
; _en_x = en_x [gpit]; _en_y = en_y [gpit];
;
	ldy     _gpit
	lda     _en_x,y
	sta     __en_x
	ldy     _gpit
	lda     _en_y,y
	sta     __en_y
;
; _en_x1 = en_x1 [gpit]; _en_y1 = en_y1 [gpit];
;
	ldy     _gpit
	lda     _en_x1,y
	sta     __en_x1
	ldy     _gpit
	lda     _en_y1,y
	sta     __en_y1
;
; _en_x2 = en_x2 [gpit]; _en_y2 = en_y2 [gpit];
;
	ldy     _gpit
	lda     _en_x2,y
	sta     __en_x2
	ldy     _gpit
	lda     _en_y2,y
	sta     __en_y2
;
; _en_mx = en_mx [gpit]; _en_my = en_my [gpit];
;
	lda     #<(_en_mx)
	ldx     #>(_en_mx)
	clc
	adc     _gpit
	bcc     L3503
	inx
L3503:	ldy     #$00
	jsr     ldaidx
	sta     __en_mx
	lda     #<(_en_my)
	ldx     #>(_en_my)
	clc
	adc     _gpit
	bcc     L3B2B
	inx
L3B2B:	jsr     ldaidx
	sta     __en_my
;
; _en_state = en_state [gpit];
;
	ldy     _gpit
	lda     _en_state,y
	sta     __en_state
;
; _en_ct = en_ct [gpit];
;
	ldy     _gpit
	lda     _en_ct,y
	sta     __en_ct
;
; if (en_washit [gpit] || en_dying [gpit]) {
;
	ldy     _gpit
	lda     _en_washit,y
	bne     L3B2C
	ldy     _gpit
	lda     _en_dying,y
	jeq     L3B2D
;
; rda = frame_counter & 0xf;
;
L3B2C:	lda     _frame_counter
	and     #$0F
	sta     _rda
;
; oam_index = oam_meta_spr (_en_x + jitter_big [rda], _en_y + SPRITE_ADJUST + jitter_big [15 - rda], oam_index, SPRITE_EXPLOSION);
;
	jsr     decsp3
	lda     __en_x
	jsr     pusha0
	lda     #<(_jitter_big)
	ldx     #>(_jitter_big)
	clc
	adc     _rda
	bcc     L351D
	inx
L351D:	ldy     #$00
	jsr     ldaidx
	jsr     tosaddax
	ldy     #$02
	sta     (sp),y
	ldx     #$00
	lda     __en_y
	clc
	adc     #$10
	bcc     L3520
	inx
L3520:	sec
	sbc     #$01
	bcs     L3521
	dex
L3521:	clc
	adc     #$08
	bcc     L3522
	inx
L3522:	sec
	sbc     #$04
	bcs     L3524
	dex
L3524:	jsr     pushax
	lda     #$0F
	sec
	sbc     _rda
	clc
	adc     #<(_jitter_big)
	tay
	lda     #$00
	adc     #>(_jitter_big)
	tax
	tya
	ldy     #$00
	jsr     ldaidx
	jsr     tosaddax
	ldy     #$01
	sta     (sp),y
	lda     _oam_index
	dey
	sta     (sp),y
	lda     #<(_ssit_09)
	ldx     #>(_ssit_09)
	jsr     _oam_meta_spr
	sta     _oam_index
;
; if (en_dying [gpit]) { en_dying [gpit] --; continue; }
;
	ldy     _gpit
	lda     _en_dying,y
	beq     L3528
	lda     #<(_en_dying)
	ldx     #>(_en_dying)
	clc
	adc     _gpit
	bcc     L352E
	inx
L352E:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	jsr     staspidx
	jmp     L3BE7
;
; if (en_washit [gpit]) en_washit [gpit] --;
;
L3528:	ldy     _gpit
	lda     _en_washit,y
	beq     L3B2D
	lda     #<(_en_washit)
	ldx     #>(_en_washit)
	clc
	adc     _gpit
	bcc     L3535
	inx
L3535:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	jsr     staspidx
;
; rdt = _en_t & 0xf0;
;
L3B2D:	lda     __en_t
	and     #$F0
	sta     _rdt
;
; if (rdt) {
;
	lda     _rdt
	jeq     L3862
;
; is_platform = (rdt == 0x20);
;
	cmp     #$20
	jsr     booleq
	sta     _is_platform
;
; if (is_platform) {
;
	lda     _is_platform
	beq     L3B31
;
; rda = _en_x;
;
	lda     __en_x
	sta     _rda
;
; pregotten = (prx + 9 >= rda && prx <= rda + 17);
;
	lda     _prx
	clc
	adc     #$09
	bcc     L3544
	inx
L3544:	cmp     _rda
	txa
	sbc     #$00
	lda     #$00
	bcc     L3B30
	lda     _prx
	jsr     pusha0
	lda     _rda
	clc
	adc     #$11
	bcc     L3546
	ldx     #$01
L3546:	jsr     tosicmp
	bcc     L3543
	beq     L3543
	lda     #$00
	jmp     L3B30
L3543:	lda     #$01
L3B30:	sta     _pregotten
;
; if (_en_mx != 0) {
;
L3B31:	lda     __en_mx
	beq     L3548
;
; en_fr = ((_en_x + 4) >> 4) & 1;
;
	ldx     #$00
	lda     __en_x
;
; } else {
;
	jmp     L3BFC
;
; en_fr = ((_en_y + 4) >> 4) & 1;
;
L3548:	tax
	lda     __en_y
L3BFC:	clc
	adc     #$04
	bcc     L3555
	inx
L3555:	jsr     shrax4
	and     #$01
	sta     _en_fr
;
; switch (rdt) {
;
	ldx     #$00
	lda     _rdt
;
; }
;
	cmp     #$10
	beq     L355C
	cmp     #$20
	beq     L355C
	cmp     #$30
	jeq     L3B45
	cmp     #$B0
	jeq     L36C4
	cmp     #$F0
	jeq     L373D
	jmp     L3BB3
;
; if (!en_washit [gpit]) if (!_en_state || half_life) {
;
L355C:	ldy     _gpit
	lda     _en_washit,y
	jne     L355D
	lda     __en_state
	beq     L3B32
	lda     _half_life
	jeq     L355D
;
; _en_x += _en_mx;
;
L3B32:	lda     __en_mx
	clc
	adc     __en_x
	sta     __en_x
;
; _en_y += _en_my;
;
	lda     __en_my
	clc
	adc     __en_y
	sta     __en_y
;
; if (_en_x == _en_x1 || _en_x == _en_x2) _en_mx = -_en_mx;
;
	lda     __en_x1
	cmp     __en_x
	beq     L3B37
	lda     __en_x2
	cmp     __en_x
	bne     L356A
L3B37:	lda     __en_mx
	eor     #$FF
	clc
	adc     #$01
	sta     __en_mx
;
; if (_en_my) {
;
L356A:	lda     __en_my
	beq     L355D
;
; if (_en_y <= _en_y1) _en_my = ABS (_en_my);
;
	lda     __en_y
	sec
	sbc     __en_y1
	sta     tmp1
	lda     tmp1
	beq     L3B38
	bcs     L3B3D
L3B38:	lda     __en_my
	asl     a
	bcc     L3B3A
	lda     __en_my
	eor     #$FF
	clc
	adc     #$01
L3B39:	cmp     #$80
	bcc     L3B3C
	jmp     L3B3C
L3B3A:	lda     __en_my
	cmp     #$80
	bcc     L3B39
L3B3C:	cmp     #$80
	sta     __en_my
;
; if (_en_y >= _en_y2) _en_my = -ABS (_en_my);
;
L3B3D:	lda     __en_y
	cmp     __en_y2
	bcc     L355D
	lda     __en_my
	asl     a
	bcc     L3B3F
	lda     __en_my
	eor     #$FF
	clc
	adc     #$01
L3B3E:	cmp     #$80
	bcc     L3594
	jmp     L3594
L3B3F:	lda     __en_my
	cmp     #$80
	bcc     L3B3E
L3594:	eor     #$FF
	clc
	adc     #$01
	cmp     #$80
	sta     __en_my
;
; if (en_s [gpit] == 8) {
;
L355D:	ldy     _gpit
	lda     _en_s,y
	cmp     #$08
	bne     L3596
;
; spr_id = 8 + (((_en_x+2) >> 2) & 3);
;
	lda     __en_x
	clc
	adc     #$02
	bcc     L359F
	ldx     #$01
L359F:	jsr     shrax2
	and     #$03
	clc
	adc     #$08
	sta     _spr_id
;
; } else {
;
	jmp     L3BB3
;
; if (_en_mx) {
;
L3596:	lda     __en_mx
	beq     L35A2
;
; en_facing [gpit] = (_en_mx > 0) ? 0 : 2;
;
	lda     #<(_en_facing)
	ldx     #>(_en_facing)
	clc
	adc     _gpit
	bcc     L35A6
	inx
L35A6:	sta     ptr1
	stx     ptr1+1
	lda     __en_mx
	sec
	sbc     #$01
	bvs     L35AA
	eor     #$80
L35AA:	bpl     L3B43
	lda     #$00
	jmp     L3B44
;
; en_facing [gpit] = (_en_my > 0) ? 0 : 2;
;
L35A2:	lda     #<(_en_facing)
	ldx     #>(_en_facing)
	clc
	adc     _gpit
	bcc     L35B2
	inx
L35B2:	sta     ptr1
	stx     ptr1+1
	lda     __en_my
	sec
	sbc     #$01
	bvs     L35B6
	eor     #$80
L35B6:	bpl     L3B43
	lda     #$00
	jmp     L3B44
L3B43:	lda     #$02
L3B44:	ldy     #$00
	sta     (ptr1),y
;
; spr_id = en_s [gpit] + en_fr + en_facing [gpit];
;
	ldy     _gpit
	lda     _en_s,y
	clc
	adc     _en_fr
	sta     ptr1
	ldy     _gpit
	lda     _en_facing,y
	clc
	adc     ptr1
	sta     _spr_id
;
; break;
;
	jmp     L3BB3
;
; if (prx > _en_x) {
;
L3B45:	lda     _prx
	sec
	sbc     __en_x
	bcc     L3B46
	beq     L3B46
;
; _en_mx ++; if (_en_mx >= FANTY_INCS_MAX - 1) _en_mx = FANTY_INCS_MAX - 1;
;
	inc     __en_mx
	lda     __en_mx
	sec
	sbc     #$0F
	bvs     L35CA
	eor     #$80
L35CA:	bpl     L3B47
	lda     #$0F
;
; } else if (prx < _en_x) {
;
	jmp     L3B18
L3B46:	lda     _prx
	cmp     __en_x
	bcs     L3B47
;
; _en_mx --; if (_en_mx <= -(FANTY_INCS_MAX - 1)) _en_mx = - (FANTY_INCS_MAX - 1);
;
	dec     __en_mx
	lda     __en_mx
	sec
	sbc     #$F2
	bvc     L35D6
	eor     #$80
L35D6:	bpl     L3B47
	lda     #$F1
L3B18:	sta     __en_mx
;
; rdx = _en_x; if (rand8 () & 0x7) _en_x += ADD_SIGN (_en_mx, fanty_incs [ABS (_en_mx)]);
;
L3B47:	lda     __en_x
	sta     _rdx
	jsr     _rand8
	and     #$07
	jeq     L3B53
	lda     __en_mx
	beq     L3B52
	sec
	sbc     #$01
	bvs     L35E8
	eor     #$80
L35E8:	bpl     L3B4C
	lda     __en_mx
	asl     a
	ldx     #$00
	bcc     L3B49
	lda     __en_mx
	eor     #$FF
	clc
	adc     #$01
L3B48:	cmp     #$80
	bcc     L3B22
	jmp     L3B19
L3B49:	lda     __en_mx
	cmp     #$80
	bcc     L3B48
L3B19:	dex
	clc
L3B22:	adc     #<(_fanty_incs)
	tay
	txa
	adc     #>(_fanty_incs)
	tax
	tya
	ldy     #$00
	jsr     ldaidx
L3B4B:	cmp     #$80
	bcc     L3BEF
	jmp     L3B52
L3B4C:	lda     __en_mx
	asl     a
	ldx     #$00
	bcc     L3B4E
	lda     __en_mx
	eor     #$FF
	clc
	adc     #$01
L3B4D:	cmp     #$80
	bcc     L3B23
	jmp     L3B1A
L3B4E:	lda     __en_mx
	cmp     #$80
	bcc     L3B4D
L3B1A:	dex
	clc
L3B23:	adc     #<(_fanty_incs)
	tay
	txa
	adc     #>(_fanty_incs)
	tax
	tya
	ldy     #$00
	jsr     ldaidx
	eor     #$FF
	clc
	adc     #$01
	cmp     #$80
	bcc     L3B4B
L3B52:	clc
L3BEF:	adc     __en_x
	sta     __en_x
;
; if ((_en_x < 8 && _en_mx < 0) || (_en_x > 232 && _en_mx > 0)) _en_mx = -_en_mx;
;
L3B53:	lda     __en_x
	cmp     #$08
	bcs     L3B56
	lda     __en_mx
	asl     a
	bcs     L3B5E
L3B56:	lda     __en_x
	cmp     #$E9
	bcc     L3611
	lda     __en_mx
	sec
	sbc     #$01
	bvs     L361A
	eor     #$80
L361A:	bpl     L3611
L3B5E:	lda     __en_mx
	eor     #$FF
	clc
	adc     #$01
	sta     __en_mx
;
; if (_en_mx) {
;
L3611:	lda     __en_mx
	beq     L3639
;
; cx1 = cx2 = _en_mx < 0 ? ((_en_x + 4) >> 4) : ((_en_x + 11) >> 4);
;
	asl     a
	ldx     #$00
	bcc     L3B5F
	lda     __en_x
	clc
	adc     #$04
	jmp     L3BF2
L3B5F:	lda     __en_x
	clc
	adc     #$0B
L3BF2:	bcc     L362F
	inx
L362F:	jsr     shrax4
	sta     _cx2
	sta     _cx1
;
; cy1 = (_en_y + 4) >> 4; cy2 = (_en_y + 11) >> 4;
;
	ldx     #$00
	lda     __en_y
	clc
	adc     #$04
	bcc     L3633
	inx
L3633:	jsr     shrax4
	sta     _cy1
	ldx     #$00
	lda     __en_y
	clc
	adc     #$0B
	bcc     L3637
	inx
L3637:	jsr     shrax4
	sta     _cy2
;
; cm_two_points ();
;
	jsr     _cm_two_points
;
; if (at1 & 12 || at2 & 12) { _en_mx = -_en_mx; _en_x = rdx; }
;
	lda     _at1
	and     #$0C
	bne     L3B60
	lda     _at2
	and     #$0C
	beq     L3639
L3B60:	lda     __en_mx
	eor     #$FF
	clc
	adc     #$01
	sta     __en_mx
	lda     _rdx
	sta     __en_x
;
; if (pry > _en_y) {
;
L3639:	lda     _pry
	sec
	sbc     __en_y
	bcc     L3B62
	beq     L3B62
;
; _en_my ++; if (_en_my >= FANTY_INCS_MAX - 1) _en_my = FANTY_INCS_MAX - 1;
;
	inc     __en_my
	lda     __en_my
	sec
	sbc     #$0F
	bvs     L3648
	eor     #$80
L3648:	bpl     L3B63
	lda     #$0F
;
; } else if (pry < _en_y) {
;
	jmp     L3B1B
L3B62:	lda     _pry
	cmp     __en_y
	bcs     L3B63
;
; _en_my --; if (_en_my <= -(FANTY_INCS_MAX - 1)) _en_my = - (FANTY_INCS_MAX - 1);
;
	dec     __en_my
	lda     __en_my
	sec
	sbc     #$F2
	bvc     L3654
	eor     #$80
L3654:	bpl     L3B63
	lda     #$F1
L3B1B:	sta     __en_my
;
; rdy = _en_y; if (rand8 () & 0x7) _en_y += ADD_SIGN (_en_my, fanty_incs [ABS (_en_my)]);
;
L3B63:	lda     __en_y
	sta     _rdy
	jsr     _rand8
	and     #$07
	jeq     L3B6F
	lda     __en_my
	beq     L3B6E
	sec
	sbc     #$01
	bvs     L3666
	eor     #$80
L3666:	bpl     L3B68
	lda     __en_my
	asl     a
	ldx     #$00
	bcc     L3B65
	lda     __en_my
	eor     #$FF
	clc
	adc     #$01
L3B64:	cmp     #$80
	bcc     L3B24
	jmp     L3B1C
L3B65:	lda     __en_my
	cmp     #$80
	bcc     L3B64
L3B1C:	dex
	clc
L3B24:	adc     #<(_fanty_incs)
	tay
	txa
	adc     #>(_fanty_incs)
	tax
	tya
	ldy     #$00
	jsr     ldaidx
L3B67:	cmp     #$80
	bcc     L3BF0
	jmp     L3B6E
L3B68:	lda     __en_my
	asl     a
	ldx     #$00
	bcc     L3B6A
	lda     __en_my
	eor     #$FF
	clc
	adc     #$01
L3B69:	cmp     #$80
	bcc     L3B25
	jmp     L3B1D
L3B6A:	lda     __en_my
	cmp     #$80
	bcc     L3B69
L3B1D:	dex
	clc
L3B25:	adc     #<(_fanty_incs)
	tay
	txa
	adc     #>(_fanty_incs)
	tax
	tya
	ldy     #$00
	jsr     ldaidx
	eor     #$FF
	clc
	adc     #$01
	cmp     #$80
	bcc     L3B67
L3B6E:	clc
L3BF0:	adc     __en_y
	sta     __en_y
;
; if ((_en_y < 8 && _en_my < 0) || (_en_y > 232 && _en_my > 0)) _en_my = -_en_my;
;
L3B6F:	lda     __en_y
	cmp     #$08
	bcs     L3B72
	lda     __en_my
	asl     a
	bcs     L3B7A
L3B72:	lda     __en_y
	cmp     #$E9
	bcc     L368F
	lda     __en_my
	sec
	sbc     #$01
	bvs     L3698
	eor     #$80
L3698:	bpl     L368F
L3B7A:	lda     __en_my
	eor     #$FF
	clc
	adc     #$01
	sta     __en_my
;
; if (_en_my) {
;
L368F:	lda     __en_my
	beq     L3B7D
;
; cy1 = cy2 = _en_my < 0 ? ((_en_y + 4) >> 4) : ((_en_y + 11) >> 4);
;
	asl     a
	ldx     #$00
	bcc     L3B7B
	lda     __en_y
	clc
	adc     #$04
	jmp     L3BF3
L3B7B:	lda     __en_y
	clc
	adc     #$0B
L3BF3:	bcc     L36AD
	inx
L36AD:	jsr     shrax4
	sta     _cy2
	sta     _cy1
;
; cx1 = (_en_x + 4) >> 4; cx2 = (_en_x + 11) >> 4;
;
	ldx     #$00
	lda     __en_x
	clc
	adc     #$04
	bcc     L36B1
	inx
L36B1:	jsr     shrax4
	sta     _cx1
	ldx     #$00
	lda     __en_x
	clc
	adc     #$0B
	bcc     L36B5
	inx
L36B5:	jsr     shrax4
	sta     _cx2
;
; cm_two_points ();
;
	jsr     _cm_two_points
;
; if (at1 & 12 || at2 & 12) { _en_my = 0; _en_y = rdy; }
;
	lda     _at1
	and     #$0C
	bne     L3B7C
	lda     _at2
	and     #$0C
	beq     L3B7D
L3B7C:	lda     #$00
	sta     __en_my
	lda     _rdy
	sta     __en_y
;
; spr_id = FANTY_CELL_BASE + ((_en_x >> 2) & 3);
;
L3B7D:	lda     __en_x
	lsr     a
	lsr     a
	and     #$03
	clc
	adc     #$12
	sta     _spr_id
;
; break;
;
	jmp     L3BB3
;
; rda = SAW_ORIENTATION [gpit]; // 0 = horizontal, 1 = vertical
;
L36C4:	ldy     _gpit
	lda     _en_s,y
	sta     _rda
;
; switch (_en_state) {
;
	lda     __en_state
;
; }
;
	beq     L36CD
	cmp     #$01
	beq     L36E1
	cmp     #$02
	beq     L36F4
	cmp     #$03
	jeq     L3708
	jmp     L3B92
;
; if (half_life) {
;
L36CD:	lda     _half_life
	jeq     L3B92
;
; if (_en_ct --) {
;
	lda     __en_ct
	dec     __en_ct
	tax
	beq     L3B82
;
; if (rda) {
;
	lda     _rda
	beq     L36D2
;
; _en_x += _SAW_EMERGING_DIRECTION;
;
	lda     __en_my
	clc
	adc     __en_x
	sta     __en_x
;
; } else {
;
	jmp     L3B92
;
; _en_y += _SAW_EMERGING_DIRECTION;
;
L36D2:	lda     __en_my
	clc
	adc     __en_y
	sta     __en_y
;
; } else {
;
	jmp     L3B92
;
; _en_state = 1;
;
L3B82:	lda     #$01
	sta     __en_state
;
; _en_ct = SAW_EMERGING_STEPS;
;
	lda     #$0A
	sta     __en_ct
;
; break;
;
	jmp     L3B92
;
; if (rda) {
;
L36E1:	lda     _rda
	beq     L3B85
;
; _en_y += _SAW_MOVING_DIRECTION;
;
	lda     __en_mx
	clc
	adc     __en_y
	sta     __en_y
;
; if (_en_y == _en_y2) _en_state = 2;
;
	lda     __en_y2
	cmp     __en_y
	jne     L3B92
	lda     #$02
;
; } else {
;
	jmp     L3B1E
;
; _en_x += _SAW_MOVING_DIRECTION;
;
L3B85:	lda     __en_mx
	clc
	adc     __en_x
	sta     __en_x
;
; if (_en_x == _en_x2) _en_state = 2;
;
	lda     __en_x2
	cmp     __en_x
	bne     L3B92
	lda     #$02
;
; break;
;
	jmp     L3B1E
;
; if (half_life) {
;
L36F4:	lda     _half_life
	beq     L3B92
;
; if (_en_ct --) {
;
	lda     __en_ct
	dec     __en_ct
	tax
	beq     L3B8C
;
; if (rda) {
;
	lda     _rda
	beq     L36F9
;
; _en_x -= _SAW_EMERGING_DIRECTION;
;
	lda     __en_my
	eor     #$FF
	sec
	adc     __en_x
	sta     __en_x
;
; } else {
;
	jmp     L3B92
;
; _en_y -= _SAW_EMERGING_DIRECTION;
;
L36F9:	lda     __en_my
	eor     #$FF
	sec
	adc     __en_y
	sta     __en_y
;
; } else {
;
	jmp     L3B92
;
; _en_state = 3;
;
L3B8C:	lda     #$03
	sta     __en_state
;
; _en_ct = SAW_EMERGING_STEPS;
;
	lda     #$0A
	sta     __en_ct
;
; break;
;
	jmp     L3B92
;
; if (rda) {
;
L3708:	lda     _rda
	beq     L3B8F
;
; _en_y -= _SAW_MOVING_DIRECTION;
;
	lda     __en_mx
	eor     #$FF
	sec
	adc     __en_y
	sta     __en_y
;
; if (_en_y == _en_y1) _en_state = 0;
;
	lda     __en_y1
	cmp     __en_y
;
; } else {
;
	jmp     L3BF4
;
; _en_x -= _SAW_MOVING_DIRECTION;
;
L3B8F:	lda     __en_mx
	eor     #$FF
	sec
	adc     __en_x
	sta     __en_x
;
; if (_en_x == _en_x1) _en_state = 0;
;
	lda     __en_x1
	cmp     __en_x
L3BF4:	bne     L3B92
	txa
L3B1E:	sta     __en_state
;
; if (_en_state == 3) spr_id = 0xff; else {
;
L3B92:	lda     __en_state
	cmp     #$03
	bne     L371A
	lda     #$FF
	sta     _spr_id
	jmp     L3BB3
;
; if (rda) {
;
L371A:	lda     _rda
	beq     L371F
;
; oam_index = oam_meta_spr (_en_x1, _en_y + SPRITE_ADJUST, oam_index, SAW_CELL_OCCLUSION);
;
	jsr     decsp3
	lda     __en_x1
	ldy     #$02
	sta     (sp),y
	lda     __en_y
;
; } else {
;
	jmp     L3C07
;
; oam_index = oam_meta_spr (_en_x, _en_y1 + SPRITE_ADJUST, oam_index, SAW_CELL_OCCLUSION);
;
L371F:	jsr     decsp3
	lda     __en_x
	ldy     #$02
	sta     (sp),y
	lda     __en_y1
L3C07:	clc
	adc     #$10
	sec
	sbc     #$01
	clc
	adc     #$08
	sec
	sbc     #$04
	dey
	sta     (sp),y
	lda     _oam_index
	dey
	sta     (sp),y
	lda     #<(_ssenc_04)
	ldx     #>(_ssenc_04)
	jsr     _oam_meta_spr
	sta     _oam_index
;
; spr_id = SAW_CELL_BASE | half_life;  // Make SAW_CELL_BASE even so this works.
;
	lda     _half_life
	ora     #$10
	sta     _spr_id
;
; break;     
;
	jmp     L3BB3
;
; if (en_life [gpit] == 0) {
;
L373D:	ldy     _gpit
	lda     _en_life,y
	bne     L3B95
;
; pal_col (26, half_life ? 0x16 : 0x1b);
;
	lda     #$1A
	jsr     pusha
	lda     _half_life
	beq     L3B93
	lda     #$16
	jmp     L3B94
L3B93:	lda     #$1B
L3B94:	jsr     _pal_col
;
; spr_id = LAME_BOSS_1_CELL_BASE + ((frame_counter >> 3) & 1) + (((frame_counter >> 4) & 1) << 1);
;
L3B95:	lda     _frame_counter
	lsr     a
	lsr     a
	lsr     a
	ldx     #$00
	and     #$01
	clc
	adc     #$16
	bcc     L374D
	inx
L374D:	sta     ptr1
	stx     ptr1+1
	lda     _frame_counter
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	ldx     #$00
	and     #$01
	asl     a
	bcc     L3B26
	inx
	clc
L3B26:	adc     ptr1
	sta     _spr_id
	txa
	adc     ptr1+1
;
; if (flags [31]) {
;
	lda     _flags+31
	jeq     L3BB3
;
; if (_en_state == 2) {
;
	lda     __en_state
	cmp     #$02
	bne     L3B9B
;
; if (_en_x == _en_x1 && _en_y <= _en_y1) {
;
	lda     __en_x1
	cmp     __en_x
	bne     L3B98
	lda     __en_y
	sec
	sbc     __en_y1
	bcc     L3B97
	bne     L3B98
;
; _en_state = 0; _en_mx = -1;
;
L3B97:	lda     #$00
	sta     __en_state
	lda     #$FF
	sta     __en_mx
;
; } else {
;
	jmp     L375E
;
; _en_x += (_en_x1 > _en_x) ? 1 : -1;
;
L3B98:	lda     __en_x1
	sec
	sbc     __en_x
	bcc     L3762
	beq     L3762
	lda     #$01
	jmp     L3B9A
L3762:	lda     #$FF
L3B9A:	clc
	adc     __en_x
	sta     __en_x
;
; _en_y --;
;
	dec     __en_y
;
; if (half_life) spr_id = 0xff;
;
L375E:	lda     _half_life
	jeq     L3BB3
	lda     #$FF
	sta     _spr_id
;
; } else {
;
	jmp     L3BB3
;
; _en_x += _en_mx;
;
L3B9B:	lda     __en_mx
	clc
	adc     __en_x
	sta     __en_x
;
; if (_en_state) _en_x += _en_mx;
;
	lda     __en_state
	beq     L3BA0
	lda     __en_mx
	clc
	adc     __en_x
	sta     __en_x
;
; if ((_en_x == 16 && _en_mx == -1) || (_en_x == 208 && _en_mx == 1)) {
;
L3BA0:	lda     __en_x
	cmp     #$10
	bne     L3BA2
	lda     __en_mx
	cmp     #$FF
	beq     L3BA8
L3BA2:	lda     __en_x
	cmp     #$D0
	bne     L3774
	lda     __en_mx
	cmp     #$01
	bne     L3774
;
; _en_mx = -_en_mx;
;
L3BA8:	lda     __en_mx
	eor     #$FF
	clc
	adc     #$01
	sta     __en_mx
;
; rda = rand8 () & 3;
;
	jsr     _rand8
	and     #$03
	sta     _rda
;
; if (rda == 0 || _en_ct == 2) {
;
	lda     _rda
	beq     L3BA9
	lda     __en_ct
	cmp     #$02
	beq     L3BA9
	lda     #$00
	jmp     L3BAB
;
; _en_state = 1;
;
L3BA9:	lda     #$01
	sta     __en_state
;
; _en_ct = 0;
;
	lda     #$00
	sta     __en_ct
;
; } else {
;
	jmp     L3BAD
;
; _en_state = 0;
;
L3BAB:	sta     __en_state
;
; _en_ct ++;
;
	inc     __en_ct
;
; _en_my = 0;
;
L3BAD:	sta     __en_my
;
; _en_y = _en_y1;
;
	lda     __en_y1
	sta     __en_y
;
; if (_en_state) {
;
L3774:	lda     __en_state
	beq     L3793
;
; _en_y += (_en_my < 48) ?
;
	lda     __en_my
	sec
	sbc     #$30
	bvc     L3799
	eor     #$80
L3799:	asl     a
;
; lb_yinc_arc [_en_my] : 
;
	bcc     L3BAE
	ldy     __en_my
	lda     _lb_yinc_arc,y
;
; -lb_yinc_arc [95 - _en_my];
;
	jmp     L3BB1
L3BAE:	lda     #$5F
	jsr     pusha0
	lda     __en_my
	bpl     L37A2
	ldx     #$FF
L37A2:	jsr     tossubax
	sta     ptr1
	txa
	clc
	adc     #>(_lb_yinc_arc)
	sta     ptr1+1
	ldy     #<(_lb_yinc_arc)
	lda     (ptr1),y
	eor     #$FF
	clc
	adc     #$01
L3BB1:	clc
	adc     __en_y
	sta     __en_y
;
; _en_my ++;
;
	inc     __en_my
;
; } else {
;
	jmp     L3BB2
;
; if ((rand8 () & 7) < 1) {
;
L3793:	jsr     _rand8
	and     #$07
	bne     L3BB2
;
; rdx = _en_x + 4; rdy = _en_y + 4; simplecoco_aimed_new ();
;
	lda     __en_x
	clc
	adc     #$04
	sta     _rdx
	lda     __en_y
	clc
	adc     #$04
	sta     _rdy
	jsr     _simplecoco_aimed_new
;
; spr_id = LAME_BOSS_1_CELL_BASE + ((_en_x >> 3) & 1) + ((_en_mx < 0) << 1);
;
L3BB2:	lda     __en_x
	lsr     a
	lsr     a
	lsr     a
	ldx     #$00
	and     #$01
	clc
	adc     #$16
	bcc     L37B5
	inx
L37B5:	sta     ptr1
	stx     ptr1+1
	lda     __en_mx
	asl     a
	lda     #$00
	tax
	rol     a
	asl     a
	bcc     L3B27
	inx
	clc
L3B27:	adc     ptr1
	sta     _spr_id
	txa
	adc     ptr1+1
;
; if (spr_id != 0xff && !en_dying [gpit]) oam_index = oam_meta_spr (
;
L3BB3:	lda     _spr_id
	cmp     #$FF
	beq     L37BA
	ldy     _gpit
	lda     _en_dying,y
	bne     L37BA
;
; _en_x, _en_y + SPRITE_ADJUST, 
;
	jsr     decsp3
	lda     __en_x
	ldy     #$02
	sta     (sp),y
	lda     __en_y
	clc
	adc     #$10
	sec
	sbc     #$01
	clc
	adc     #$08
	sec
	sbc     #$04
	dey
	sta     (sp),y
;
; oam_index, 
;
	lda     _oam_index
	dey
	sta     (sp),y
;
; spr_enems [spr_id]);
;
	ldx     #$00
	lda     _spr_id
	asl     a
	bcc     L3B28
	inx
	clc
L3B28:	adc     _spr_enems
	sta     ptr1
	txa
	adc     _spr_enems+1
	sta     ptr1+1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     _oam_meta_spr
	sta     _oam_index
;
; if (is_platform) {
;
L37BA:	lda     _is_platform
	jeq     L3BC5
;
; if (pregotten && !pgotten && !(pj && pvy <= 0)) {
;
	lda     _pregotten
	jeq     L3BC5
	lda     _pgotten
	jne     L3BC5
	lda     _pj
	beq     L37D5
	lda     _pvy
	cmp     #$01
	lda     _pvy+1
	sbc     #$00
	bvc     L37D4
	eor     #$80
L37D4:	bmi     L3BB6
	lda     #$00
	jmp     L37D5
L3BB6:	lda     #$01
L37D5:	jsr     bnega
	jeq     L3BC5
;
; if (_en_mx) {
;
	lda     __en_mx
	beq     L3BB9
;
; if (pry + 18 >= _en_y && pry + 12 <= _en_y) {
;
	ldx     #$00
	lda     _pry
	clc
	adc     #$12
	bcc     L37DB
	inx
L37DB:	cmp     __en_y
	txa
	sbc     #$00
	bcc     L3BB9
	ldx     #$00
	lda     _pry
	clc
	adc     #$0C
	bcc     L37DD
	inx
L37DD:	sec
	sbc     __en_y
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L37DA
	bne     L3BB9
;
; pgotten = 1;
;
L37DA:	lda     #$01
	sta     _pgotten
;
; pgtmx = _en_mx << (FIX_BITS - _en_state);
;
	lda     __en_mx
	sta     ptr1
	lda     #$04
	sec
	sbc     __en_state
	tay
	lda     ptr1
L3BE8:	asl     a
	dey
	bpl     L3BE8
	ror     a
	cmp     #$80
	sta     _pgtmx
;
; pry = _en_y - 16; py = pry << FIX_BITS;
;
	lda     __en_y
	sec
	sbc     #$10
	sta     _pry
	ldx     #$00
	lda     _pry
	jsr     aslax4
	sta     _py
	stx     _py+1
;
; pvy = 0;
;
	lda     #$00
	sta     _pvy
	sta     _pvy+1
;
; (_en_my < 0 && pry + 17 >= _en_y && pry + 12 <= _en_y) ||
;
L3BB9:	lda     __en_my
	asl     a
	bcc     L3BBC
	ldx     #$00
	lda     _pry
	clc
	adc     #$11
	bcc     L37F2
	inx
L37F2:	cmp     __en_y
	txa
	sbc     #$00
	bcc     L3BBC
	ldx     #$00
	lda     _pry
	clc
	adc     #$0C
	bcc     L37F3
	inx
L37F3:	sec
	sbc     __en_y
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L37F5
	beq     L37F5
;
; (_en_my > 0 && pry + 16 + _en_my >= _en_y && pry + 12 <= _en_y)
;
L3BBC:	lda     __en_my
	sec
	sbc     #$01
	bvs     L37F7
	eor     #$80
L37F7:	jpl     L3BC5
	ldx     #$00
	lda     _pry
	clc
	adc     #$10
	bcc     L37F9
	inx
L37F9:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     __en_my
	bpl     L37FA
	dex
L37FA:	clc
	adc     ptr1
	pha
	txa
	adc     ptr1+1
	tax
	pla
	cmp     __en_y
	txa
	sbc     #$00
	bcc     L3BC5
	ldx     #$00
	lda     _pry
	clc
	adc     #$0C
	bcc     L37FB
	inx
L37FB:	sec
	sbc     __en_y
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L37F5
	bne     L3BC5
L37F5:	lda     #$01
;
; pgotten = 1;
;
	sta     _pgotten
;
; pgtmy = _en_my << (FIX_BITS - _en_state);
;
	lda     __en_my
	sta     ptr1
	lda     #$04
	sec
	sbc     __en_state
	tay
	lda     ptr1
L3BE9:	asl     a
	dey
	bpl     L3BE9
	ror     a
	cmp     #$80
	sta     _pgtmy
;
; pry = _en_y - 16; py = pry << FIX_BITS;
;
	lda     __en_y
	sec
	sbc     #$10
	sta     _pry
	ldx     #$00
	lda     _pry
	jsr     aslax4
	sta     _py
	stx     _py+1
;
; pvy = 0;
;
	lda     #$00
	sta     _pvy
	sta     _pvy+1
;
; scr_attr [((_en_y - 7) & 0xf0) | ((_en_x + 7) >> 4)] & 1
;
L3BC5:	lda     __en_y
	sec
	sbc     #$07
	and     #$F0
	sta     ptr1
	ldx     #$00
	lda     __en_x
	clc
	adc     #$07
	bcc     L3814
	inx
L3814:	jsr     shrax4
	ora     ptr1
	sta     ptr1
	txa
	clc
	adc     #>(_scr_attr)
	sta     ptr1+1
	ldy     #<(_scr_attr)
	lda     (ptr1),y
;
; && (
;
	ldx     #$00
	and     #$01
	beq     L3BD1
;
; rdt == 0x10
;
	lda     _rdt
;
; || rdt == 0x30
;
	cmp     #$10
	beq     L3BD0
;
; || (rdt == 0xf0 && _en_state != 2)
;
	cmp     #$30
	beq     L3BD0
	cmp     #$F0
	bne     L3BD1
	lda     __en_state
	cmp     #$02
	beq     L3BD1
;
; if (rdt == 0xf0) _en_y -= LAME_BOSS_HIT_DISPLACEMENT;
;
L3BD0:	lda     _rdt
	cmp     #$F0
	bne     L381C
	lda     __en_y
	sec
	sbc     #$10
	sta     __en_y
;
; enems_drain (); 
;
L381C:	jsr     _enems_drain
;
; continue;
;
	jmp     L3862
;
; if (prx + 7 >= _en_x && prx <= _en_x + 15 && pry + 15 >= _en_y && pry + 8 <= _en_y
;
L3BD1:	lda     _prx
	clc
	adc     #$07
	bcc     L3824
	inx
L3824:	cmp     __en_x
	txa
	sbc     #$00
	ldx     #$00
	jcc     L3BDC
	lda     _prx
	jsr     pusha0
	lda     __en_x
	clc
	adc     #$0F
	bcc     L3826
	ldx     #$01
L3826:	jsr     tosicmp
	beq     L3B29
	bcs     L3825
L3B29:	ldx     #$00
	lda     _pry
	clc
	adc     #$0F
	bcc     L3827
	inx
L3827:	cmp     __en_y
	txa
	sbc     #$00
	ldx     #$00
	jcc     L3BDC
	lda     _pry
	clc
	adc     #$08
	bcc     L3828
	inx
;
; && pvy >= 0
;
L3828:	sec
	sbc     __en_y
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	beq     L3B13
	bcs     L3825
L3B13:	ldx     _pvy+1
;
; && rdt != 0xb0 
;
	bmi     L3825
	lda     _rdt
;
; ) {
;
	cmp     #$B0
	bne     L3BD4
L3825:	ldx     #$00
	jmp     L3BDC
;
; pvy = -PLAYER_VY_BUTT_REBOUND;
;
L3BD4:	ldx     #$FF
	lda     #$C0
	sta     _pvy
	stx     _pvy+1
;
; sfx_play (SFX_BUTT_HIT, SC_LEVEL);
;
	lda     #$09
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; switch (rdt) {
;
	lda     _rdt
;
; }
;
	cmp     #$10
	beq     L3BD5
	cmp     #$30
	beq     L3BDA
	cmp     #$F0
	beq     L3BDB
	jmp     L3862
;
; _en_my = ABS (_en_my);
;
L3BD5:	lda     __en_my
	asl     a
	bcc     L3BD7
	lda     __en_my
	eor     #$FF
	clc
	adc     #$01
L3BD6:	cmp     #$80
	bcc     L3BD9
	jmp     L3BD9
L3BD7:	lda     __en_my
	cmp     #$80
	bcc     L3BD6
L3BD9:	cmp     #$80
	sta     __en_my
;
; break;
;
	jmp     L3862
;
; _en_my = FANTY_INCS_MAX - 1;
;
L3BDA:	lda     #$0F
	sta     __en_my
;
; break;
;
	jmp     L3862
;
; _en_y += LAME_BOSS_HIT_DISPLACEMENT;
;
L3BDB:	lda     #$10
	clc
	adc     __en_y
	sta     __en_y
;
; break;
;
	jmp     L3862
;
; CL (prx, pry, _en_x, _en_y)
;
L3BDC:	lda     _prx
	clc
	adc     #$04
	bcc     L3851
	inx
L3851:	cmp     __en_x
	txa
	sbc     #$00
	bcc     L3862
	lda     _prx
	jsr     pusha0
	lda     __en_x
	clc
	adc     #$0C
	bcc     L3856
	ldx     #$01
L3856:	jsr     tosicmp
	beq     L3B2A
	bcs     L3862
L3B2A:	ldx     #$00
	lda     _pry
	clc
	adc     #$0C
	bcc     L3858
	inx
L3858:	cmp     __en_y
	txa
	sbc     #$00
	bcc     L3862
	lda     _pry
	jsr     pusha0
	lda     __en_y
	clc
	adc     #$0C
	bcc     L385C
	ldx     #$01
L385C:	jsr     tosicmp
	bcc     L384F
	bne     L3862
;
; && (rdt != 0xf0 || _en_state == 1)
;
L384F:	lda     _rdt
	cmp     #$F0
	bne     L3BE4
	lda     __en_state
	cmp     #$01
	bne     L3862
;
; && !is_platform
;
L3BE4:	lda     _pflickering
	bne     L3862
;
; ) {
;
	lda     _is_platform
	bne     L3862
;
; pwashit = 1;
;
	lda     #$01
	sta     _pwashit
;
; enems_restore_vals ();
;
L3862:	jsr     _enems_restore_vals
;
; gpjt = 3; while (gpjt --) {
;
L3BE7:	lda     _gpjt
	dec     _gpjt
	tax
	jne     L34D9
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ m11_change_raw (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_m11_change_raw: near

.segment	"CODE"

;
; void m11_change_raw (unsigned char raw) {
;
	jsr     pusha
;
; COMM_REG = raw;
;
	ldx     #$03
	lda     #$00
	sta     ptr1
	stx     ptr1+1
	tay
	lda     (sp),y
	sta     (ptr1),y
;
; __asm__ ("jmp _change_reg"); 
;
	jmp     _change_reg

.endproc

; ---------------------------------------------------------------
; void __near__ game_init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_init: near

.segment	"CODE"

;
; gp_gen = scr_attr + 192; gpit = 16; while (gpit --) *gp_gen = 0;
;
	lda     #>(_scr_attr+192)
	sta     _gp_gen+1
	lda     #<(_scr_attr+192)
	sta     _gp_gen
	lda     #$10
	sta     _gpit
	jmp     L3C1A
L387C:	lda     _gp_gen+1
	sta     ptr1+1
	lda     _gp_gen
	sta     ptr1
	lda     #$00
	tay
	sta     (ptr1),y
L3C1A:	lda     _gpit
	dec     _gpit
	tax
	bne     L387C
;
; c_ts_pals = l_ts_pals [level];
;
	lda     _level
	asl     a
	bcc     L3C11
	inx
	clc
L3C11:	adc     #<(_l_ts_pals)
	sta     ptr1
	txa
	adc     #>(_l_ts_pals)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _c_ts_pals+1
	dey
	lda     (ptr1),y
	sta     _c_ts_pals
;
; c_ts_tmaps = l_ts_tmaps [level];
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L3C12
	inx
	clc
L3C12:	adc     #<(_l_ts_tmaps)
	sta     ptr1
	txa
	adc     #>(_l_ts_tmaps)
	sta     ptr1+1
	iny
	lda     (ptr1),y
	sta     _c_ts_tmaps+1
	dey
	lda     (ptr1),y
	sta     _c_ts_tmaps
;
; c_behs = l_behs [level];
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L3C13
	inx
	clc
L3C13:	adc     #<(_l_behs)
	sta     ptr1
	txa
	adc     #>(_l_behs)
	sta     ptr1+1
	iny
	lda     (ptr1),y
	sta     _c_behs+1
	dey
	lda     (ptr1),y
	sta     _c_behs
;
; n_pant = l_scr_ini [level];
;
	ldy     _level
	lda     _l_scr_ini,y
	sta     _n_pant
;
; c_map = l_map [level];
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L3C14
	inx
	clc
L3C14:	adc     #<(_l_map)
	sta     ptr1
	txa
	adc     #>(_l_map)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _c_map+1
	dey
	lda     (ptr1),y
	sta     _c_map
;
; c_decos = l_decos [level];
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L3C15
	inx
	clc
L3C15:	adc     #<(_l_decos)
	sta     ptr1
	txa
	adc     #>(_l_decos)
	sta     ptr1+1
	iny
	lda     (ptr1),y
	sta     _c_decos+1
	dey
	lda     (ptr1),y
	sta     _c_decos
;
; c_enems = l_enems [level];
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L3C16
	inx
	clc
L3C16:	adc     #<(_l_enems)
	sta     ptr1
	txa
	adc     #>(_l_enems)
	sta     ptr1+1
	iny
	lda     (ptr1),y
	sta     _c_enems+1
	dey
	lda     (ptr1),y
	sta     _c_enems
;
; c_hotspots = 0; // l_hotspots [level];
;
	ldx     #$00
	txa
	sta     _c_hotspots
	sta     _c_hotspots+1
;
; c_locks = 0; // l_locks [level];
;
	sta     _c_locks
	sta     _c_locks+1
;
; max_hotspots_type_1 = 0; // l_max_hotspots_type_1 [level];
;
	sta     _max_hotspots_type_1
;
; map_w = l_map_w [level];
;
	ldy     _level
	lda     _l_map_w,y
	sta     _map_w
;
; spr_enems = spr_enems_1; // l_spr_enems [level];
;
	lda     #>(_spr_enems_1)
	sta     _spr_enems+1
	lda     #<(_spr_enems_1)
	sta     _spr_enems
;
; spr_player = spr_player_0; // l_spr_player [level];
;
	lda     #>(_spr_player_0)
	sta     _spr_player+1
	lda     #<(_spr_player_0)
	sta     _spr_player
;
; pal_bg (l_pal_bgs [level]);
;
	lda     _level
	asl     a
	bcc     L3C17
	inx
	clc
L3C17:	adc     #<(_l_pal_bgs)
	sta     ptr1
	txa
	adc     #>(_l_pal_bgs)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     _pal_bg
;
; pal_spr (palss1 /*l_pal_fgs [level]*/);
;
	lda     #<(_palss1)
	ldx     #>(_palss1)
	jsr     _pal_spr
;
; c_pal_bg = l_pal_bgs [level];
;
	ldx     #$00
	lda     _level
	asl     a
	bcc     L3C18
	inx
	clc
L3C18:	adc     #<(_l_pal_bgs)
	sta     ptr1
	txa
	adc     #>(_l_pal_bgs)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _c_pal_bg+1
	dey
	lda     (ptr1),y
	sta     _c_pal_bg
;
; player_init ();
;
	jsr     _player_init
;
; flags [PLAYER_INV_FLAG] = 0;
;
	lda     #$00
	sta     _flags
;
; script_pool = level_scripts [level];
;
	tax
	lda     _level
	asl     a
	bcc     L3C19
	inx
	clc
L3C19:	adc     #<(_level_scripts)
	sta     ptr1
	txa
	adc     #>(_level_scripts)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	sta     _script_pool+1
	dey
	lda     (ptr1),y
	sta     _script_pool
;
; /*plife = l_plife [level]*/; oplife = 0xff;
;
	lda     #$FF
	sta     _oplife
;
; pobjs = 0; opobjs = 0xff;
;
	sty     _pobjs
	lda     #$FF
	sta     _opobjs
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ game_prepare_screen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_prepare_screen: near

.segment	"CODE"

;
; no_ct = 0;
;
	lda     #$00
	sta     _no_ct
;
; update_list [0] = NT_UPD_EOF;
;
	lda     #$FF
	sta     _update_list
;
; ppu_wait_nmi ();
;
	jsr     _ppu_wait_nmi
;
; if (first_time) first_time = 0; else fade_out ();
;
	lda     _first_time
	beq     L38C2
	lda     #$00
	sta     _first_time
	jmp     L38C6
L38C2:	jsr     _fade_out
;
; ppu_off ();
;
L38C6:	jsr     _ppu_off
;
; springs_idx = 0;
;
	lda     #$00
	sta     _springs_idx
;
; propellers_idx = 0;
;
	sta     _propellers_idx
;
; draw_scr ();
;
	jsr     _draw_scr
;
; enems_load ();
;
	jsr     _enems_load
;
; simplecoco_init ();
;
	jsr     _simplecoco_init
;
; show_attributes ();
;
	jsr     _show_attributes
;
; ppu_on_all ();
;
	jsr     _ppu_on_all
;
; oam_index = 44;
;
	lda     #$2C
	sta     _oam_index
;
; prx = px >> FIX_BITS; pry = py >> FIX_BITS;
;
	lda     _px
	ldx     _px+1
	jsr     asrax4
	sta     _prx
	lda     _py
	ldx     _py+1
	jsr     asrax4
	sta     _pry
;
; player_render ();
;
	jsr     _player_render
;
; enems_do ();
;
	jsr     _enems_do
;
; oam_hide_rest (oam_index);
;
	lda     _oam_index
	jsr     _oam_hide_rest
;
; ul = update_list; 
;
	lda     #>(_update_list)
	sta     _ul+1
	lda     #<(_update_list)
	sta     _ul
;
; hud_update (); 
;
	jsr     _hud_update
;
; close_update_cycle ();
;
	jsr     _close_update_cycle
;
; c_idx = 0;
;
	lda     #$00
	sta     _c_idx
;
; f_zone_ac = 0;
;
	sta     _f_zone_ac
;
; fzx1 = fzx2 = fzy1 = fzy2 = 0;
;
	sta     _fzy2
	sta     _fzy1
	sta     _fzx2
	sta     _fzx1
;
; run_script (2 * MAP_W * MAP_H + 1);  // Entering any script
;
	lda     #$3D
	jsr     _run_script
;
; run_script (n_pant + n_pant);   // Entering this room script
;
	lda     _n_pant
	clc
	adc     _n_pant
	jsr     _run_script
;
; palfx_init ();
;
	jsr     _palfx_init
;
; fade_in ();
;
	jmp     _fade_in

.endproc

; ---------------------------------------------------------------
; void __near__ game_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_loop: near

.segment	"CODE"

;
; half_life = 0;
;
	lda     #$00
	sta     _half_life
;
; first_time = 1;
;
	lda     #$01
	sta     _first_time
;
; on_pant = 99;
;
	lda     #$63
	sta     _on_pant
;
; game_res = GS_GAME_OVER;
;
	lda     #$00
	sta     _game_res
;
; ppu_on_all ();
;
	jsr     _ppu_on_all
;
; pflickering = PLAYER_FLICKERS;
;
	lda     #$78
	sta     _pflickering
;
; music_play (l_music [level]);
;
	ldy     _level
	lda     _l_music,y
	jsr     _music_play
;
; set_vram_update (update_list);
;
	lda     #<(_update_list)
	ldx     #>(_update_list)
	jsr     _set_vram_update
;
; do_game = 1; ticker = ticks;
;
	lda     #$01
	sta     _do_game
	lda     _ticks
	sta     _ticker
;
; pwashit = 0; 
;
	lda     #$00
	sta     _pwashit
;
; pcharacter = 0;
;
	sta     _pcharacter
;
; script_result = 0;
;
	sta     _script_result
;
; run_script (2 * MAP_W * MAP_H);
;
	lda     #$3C
	jsr     _run_script
;
; paused = pad0 = 0; update_list [0] = NT_UPD_EOF;
;
	lda     #$00
	sta     _pad0
	sta     _paused
	lda     #$FF
	sta     _update_list
;
; while (do_game) {
;
	jmp     L3915
;
; ppu_wait_frame ();
;
L3913:	jsr     _ppu_wait_frame
;
; if (f_zone_ac) {
;
	lda     _f_zone_ac
	beq     L391E
;
; if (pry >= fzy1 && pry <= fzy2)
;
	lda     _pry
	cmp     _fzy1
	bcc     L391E
	sec
	sbc     _fzy2
	bcc     L3C23
	bne     L391E
;
; if (prx >= fzx1 && prx <= fzx2)
;
L3C23:	lda     _prx
	cmp     _fzx1
	bcc     L391E
	sec
	sbc     _fzx2
	bcc     L3C26
	bne     L391E
;
; game_run_fire_script ();
;
L3C26:	jsr     _game_run_fire_script
;
; || ((pad0 & (PAD_SELECT|PAD_B)) == (PAD_SELECT|PAD_B))
;
L391E:	lda     _pkilled
	bne     L3C31
	lda     _pad0
	and     #$06
	cmp     #$06
;
; || (level != 2 && script_result == 1)
;
	beq     L3C31
	lda     _level
	cmp     #$02
	beq     L3C2A
	lda     _script_result
	cmp     #$01
	beq     L3C31
;
; || (level == 2 && n_pant == 29 && en_t [0] == 0 && en_dying [gpit] == 0)
;
L3C2A:	lda     _level
	cmp     #$02
	bne     L3C32
	lda     _n_pant
	cmp     #$1D
	bne     L3C32
	lda     _en_t
	bne     L3C32
	ldy     _gpit
	lda     _en_dying,y
	beq     L3C44
	jmp     L3C32
;
; ) do_game = 0;
;
L3C31:	lda     #$00
L3C44:	sta     _do_game
;
; if (prx == 4 && pvx < 0) {
;
L3C32:	lda     _prx
	cmp     #$04
	bne     L3C35
	lda     _pvx
	asl     a
	bcc     L3C35
;
; n_pant --;
;
	dec     _n_pant
;
; px = 244 << FIX_BITS;
;
	ldx     #$0F
	lda     #$40
	sta     _px
	stx     _px+1
;
; } else if (prx == 244 && pvx > 0) {
;
	jmp     L3C40
L3C35:	lda     _prx
	cmp     #$F4
	bne     L3C38
	lda     _pvx
	sec
	sbc     #$01
	bvs     L3943
	eor     #$80
L3943:	bpl     L3C38
;
; n_pant ++;
;
	inc     _n_pant
;
; px = 8<<FIX_BITS;
;
	ldx     #$00
	lda     #$80
	sta     _px
	stx     _px+1
;
; } else if (pry == 0 && pvy < 0 && n_pant >= map_w) {
;
	jmp     L3C40
L3C38:	lda     _pry
	bne     L3C3C
	ldx     _pvy+1
	cpx     #$80
	bcc     L3C3C
	lda     _n_pant
	cmp     _map_w
	bcc     L3C3C
;
; n_pant -= map_w;
;
	lda     _map_w
	eor     #$FF
	sec
	adc     _n_pant
	sta     _n_pant
;
; py = 192<<FIX_BITS;
;
	ldx     #$0C
	lda     #$00
	sta     _py
	stx     _py+1
;
; pvy = -PLAYER_VY_FLICK_TOP;
;
	ldx     #$FF
	lda     #$C0
	sta     _pvy
	stx     _pvy+1
;
; } else if (pry >= 192 && pvy > 0) {
;
	jmp     L3C40
L3C3C:	lda     _pry
	cmp     #$C0
	bcc     L3C40
	lda     _pvy
	cmp     #$01
	lda     _pvy+1
	sbc     #$00
	bvs     L3957
	eor     #$80
L3957:	bpl     L3C40
;
; n_pant += map_w;
;
	lda     _map_w
	clc
	adc     _n_pant
	sta     _n_pant
;
; py = 0;
;
	lda     #$00
	sta     _py
	sta     _py+1
;
; if (on_pant != n_pant && do_game) {
;
L3C40:	lda     _n_pant
	cmp     _on_pant
	beq     L3C43
	lda     _do_game
	beq     L3C43
;
; prx = px >> FIX_BITS;
;
	lda     _px
	ldx     _px+1
	jsr     asrax4
	sta     _prx
;
; pry = py >> FIX_BITS;
;
	lda     _py
	ldx     _py+1
	jsr     asrax4
	sta     _pry
;
; game_prepare_screen ();
;
	jsr     _game_prepare_screen
;
; on_pant = n_pant;
;
	lda     _n_pant
	sta     _on_pant
;
; half_life = 1 - half_life;  // Main flip-flop
;
L3C43:	lda     #$01
	sec
	sbc     _half_life
	sta     _half_life
;
; frame_counter ++;    // Increase frame counter
;
	inc     _frame_counter
;
; pad_this_frame = pad0;
;
	lda     _pad0
	sta     _pad_this_frame
;
; pad0 = pad_poll (0);   // Read pads here.
;
	lda     #$00
	jsr     _pad_poll
	sta     _pad0
;
; pad_this_frame = (pad_this_frame ^ pad0) & pad0; 
;
	eor     _pad_this_frame
	sta     ptr1
	lda     _pad0
	and     ptr1
	sta     _pad_this_frame
;
; if (pad_this_frame & PAD_START) {
;
	and     #$08
	beq     L3973
;
; paused = !paused;
;
	lda     _paused
	jsr     bnega
	sta     _paused
;
; if (paused) pal_bright (3); else pal_bright (4);
;
	lda     _paused
	beq     L3977
	lda     #$03
	jmp     L3C20
L3977:	lda     #$04
L3C20:	jsr     _pal_bright
;
; sfx_play (0, SC_LEVEL);
;
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; if (!paused) {
;
L3973:	lda     _paused
	bne     L3981
;
; ul = update_list;    // Reset pointer to update list
;
	lda     #>(_update_list)
	sta     _ul+1
	lda     #<(_update_list)
	sta     _ul
;
; oam_index = 44;     // Reset OAM index; skip sprite #0 & player
;
	lda     #$2C
	sta     _oam_index
;
; enems_do ();
;
	jsr     _enems_do
;
; simplecoco_do ();
;
	jsr     _simplecoco_do
;
; player_move (); 
;
	jsr     _player_move
;
; if (n_pant == on_pant) player_render ();
;
	lda     _on_pant
	cmp     _n_pant
	bne     L398A
	jsr     _player_render
;
; if (pwashit) player_hit ();
;
L398A:	lda     _pwashit
	beq     L398D
	jsr     _player_hit
;
; containers_draw ();
;
L398D:	jsr     _containers_draw
;
; if (springs_idx) springs_do ();
;
	lda     _springs_idx
	beq     L3991
	jsr     _springs_do
;
; if (propellers_idx) propellers_do ();
;
L3991:	lda     _propellers_idx
	beq     L3994
	jsr     _propellers_do
;
; hud_update ();
;
L3994:	jsr     _hud_update
;
; oam_hide_rest (oam_index);
;
	lda     _oam_index
	jsr     _oam_hide_rest
;
; *ul = NT_UPD_EOF;
;
	lda     _ul+1
	sta     ptr1+1
	lda     _ul
	sta     ptr1
	lda     #$FF
	ldy     #$00
	sta     (ptr1),y
;
; palfx_do ();
;
L3981:	jsr     _palfx_do
;
; while (do_game) {
;
L3915:	lda     _do_game
	jne     L3913
;
; music_stop ();
;
	jsr     _music_stop
;
; set_vram_update (0);
;
	ldx     #$00
	txa
	jsr     _set_vram_update
;
; exit_cleanly ();
;
	jmp     _exit_cleanly

.endproc

; ---------------------------------------------------------------
; void __near__ game_title (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_title: near

.segment	"CODE"

;
; enter_screen (/*t_pal_bgs [level]*/ palts1, screen_title);
;
	lda     #<(_palts1)
	ldx     #>(_palts1)
	jsr     pushax
	lda     #<(_screen_title)
	ldx     #>(_screen_title)
	jsr     _enter_screen
;
; pal_spr (/*t_pal_fgs [level]*/ palss1);
;
	lda     #<(_palss1)
	ldx     #>(_palss1)
	jsr     _pal_spr
;
; half_life = 0;
;
	lda     #$00
	sta     _half_life
;
; while (!(pad_poll(0) & PAD_START)) ppu_wait_nmi ();
;
	jmp     L3C45
L39A9:	jsr     _ppu_wait_nmi
	lda     #$00
L3C45:	jsr     _pad_poll
	and     #$08
	beq     L39A9
;
; music_stop ();
;
	jsr     _music_stop
;
; sfx_play (SFX_START, SC_LEVEL);
;
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     _sfx_play
;
; delay (ticks);
;
	lda     _ticks
	jsr     _delay
;
; exit_cleanly ();
;
	jmp     _exit_cleanly

.endproc

; ---------------------------------------------------------------
; void __near__ game_over (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_over: near

.segment	"CODE"

;
; enter_screen (/*t_pal_bgs [level]*/ palts1, screen_game_over);
;
	lda     #<(_palts1)
	ldx     #>(_palts1)
	jsr     pushax
	lda     #<(_screen_game_over)
	ldx     #>(_screen_game_over)
	jsr     _enter_screen
;
; do_screen (10);
;
	lda     #$0A
	jmp     _do_screen

.endproc

; ---------------------------------------------------------------
; void __near__ game_ending (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_ending: near

.segment	"CODE"

;
; m11_change_raw (2); //bank_bg (1);
;
	lda     #$02
	jsr     _m11_change_raw
;
; enter_screen (pal_ending, screen_game_ending);
;
	lda     #<(_pal_ending)
	ldx     #>(_pal_ending)
	jsr     pushax
	lda     #<(_screen_game_ending)
	ldx     #>(_screen_game_ending)
	jsr     _enter_screen
;
; do_screen (255);
;
	lda     #$FF
	jsr     _do_screen
;
; m11_change_raw (1); //bank_bg (0);
;
	lda     #$01
	jmp     _m11_change_raw

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; m11_change_raw (1);
;
	lda     #$01
	jsr     _m11_change_raw
;
; bank_bg (0);
;
	lda     #$00
	jsr     _bank_bg
;
; bank_spr (1);
;
	lda     #$01
	jsr     _bank_spr
;
; ticks = ppu_system () ? 60 : 50;
;
	jsr     _ppu_system
	stx     tmp1
	ora     tmp1
	beq     L39D0
	lda     #$3C
	jmp     L3C46
L39D0:	lda     #$32
L3C46:	sta     _ticks
;
; halfticks = ticks >> 1;
;
	lsr     a
	sta     _halfticks
;
; oam_size (0);
;
	lda     #$00
	jsr     _oam_size
;
; pal_bright (0);
;
	lda     #$00
	jsr     _pal_bright
;
; scroll (0, SCROLL_Y);
;
	jsr     push0
	ldx     #$01
	lda     #$DC
	jsr     _scroll
;
; game_title ();
;
L39DD:	jsr     _game_title
;
; level = 0;
;
	lda     #$00
	sta     _level
;
; plife = LIFE_INI;
;
	lda     #$05
	sta     _plife
;
; hud_draw ();
;
L39E6:	jsr     _hud_draw
;
; game_init ();
;
	jsr     _game_init
;
; game_loop ();
;
	jsr     _game_loop
;
; if (pkilled) {
;
	lda     _pkilled
	beq     L39ED
;
; game_over ();
;
	jsr     _game_over
;
; break;
;
	jmp     L39DD
;
; level ++;
;
L39ED:	inc     _level
;
; if (level == 3) {
;
	lda     _level
	cmp     #$03
	bne     L39F2
;
; game_ending ();
;
	jsr     _game_ending
;
; break;
;
	jmp     L39DD
;
; delay (10);
;
L39F2:	lda     #$0A
	jsr     _delay
;
; while (1) {
;
	jmp     L39E6

.endproc

